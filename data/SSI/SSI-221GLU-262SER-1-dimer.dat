import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.837712807021317    -1.367937475712549    -0.379899453293132
    C                1.347712807021317     0.020062524287451    -0.001899453293132
    O                0.463712807021317     0.874062524287451     0.274100546706868
    O                2.575712807021317     0.270062524287451     0.003100546706868
    H                0.054712807021317    -1.283937475712549    -1.136899453293132
    H                0.378712807021317    -1.807937475712549     0.508100546706868
    H                1.614712807021317    -2.061897475712549    -0.733019453293132
    C               -2.823287192978683    -0.330937475712549     0.453100546706868
    O               -2.044287192978683     0.506062524287451    -0.369899453293132
    H               -1.134287192978683     0.630062524287451     0.010100546706868
    H               -2.265287192978683    -1.237937475712549     0.689100546706868
    H               -3.721287192978683    -0.611937475712549    -0.097899453293132
    H               -3.125937192978684     0.173242524287451     1.382730546706868

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-221GLU-262SER-1-dimer.npy', np.array(charges))