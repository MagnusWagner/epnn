import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.619912723852768     1.113504759804676     0.670469312736797
    C                0.247087276147232     1.446504759804676    -0.515530687263203
    C               -1.152912723852768     2.443504759804676     1.129469312736797
    H               -0.001912723852768     0.697504759804676     1.459469312736797
    H               -1.424912723852768     0.427504759804676     0.404469312736797
    H                1.066087276147232     0.731504759804676    -0.603530687263203
    H               -0.362912723852768     1.464504759804676    -1.418530687263203
    H               -1.415912723852768     2.419504759804676     2.182469312736797
    H               -2.009912723852768     2.723504759804677     0.529469312736797
    H                0.609557276147232     2.460374759804676    -0.290390687263203
    H               -0.341652723852768     3.157794759804676     0.925389312736797
    C                0.047087276147232    -2.478495240195324    -0.310530687263203
    C                1.431087276147232    -2.469495240195323    -0.933530687263203
    H               -0.088912723852768    -3.353495240195324     0.323469312736797
    H               -0.068912723852768    -1.594495240195324     0.311469312736797
    H               -0.712912723852768    -2.466495240195324    -1.090530687263203
    H                2.162087276147233    -2.487495240195324    -0.124530687263203
    H                1.547087276147232    -1.531495240195324    -1.468530687263203
    H                1.609467276147232    -3.309834240195324    -1.620560687263203

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-159PRO-192ILE-1-dimer.npy', np.array(charges))