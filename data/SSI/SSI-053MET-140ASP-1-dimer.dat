import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.499768344331050     0.844253941106335     0.853074283716145
    C                3.113768344331051     0.546253941106335    -1.379925716283855
    S                2.935768344331050    -0.113746058893665     0.277074283716145
    H                0.722768344331050     0.841253941106335     0.089074283716145
    H                1.107768344331050     0.387253941106335     1.762074283716145
    H                1.792768344331050     1.869253941106335     1.080074283716145
    H                2.206768344331051     0.324253941106335    -1.943925716283855
    H                3.951768344331051     0.056253941106335    -1.870925716283855
    H                3.273497344331051     1.634583941106335    -1.375569716283855
    C               -2.055231655668950    -0.620746058893665     1.002074283716145
    C               -3.164231655668950    -1.648746058893665     0.982074283716145
    C               -1.990231655668950     0.145253941106335    -0.306925716283855
    O               -1.520231655668950    -0.461746058893665    -1.302925716283855
    O               -2.369231655668949     1.341253941106335    -0.343925716283855
    H               -2.261231655668949     0.083253941106335     1.797074283716145
    H               -1.095231655668950    -1.102746058893665     1.197074283716145
    H               -2.906231655668949    -2.400746058893665     0.235074283716145
    H               -4.111502655668950    -1.155436058893665     0.718775283716145
    H               -3.174343655668950    -2.150746058893665     1.960794283716145

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053MET-140ASP-1-dimer.npy', np.array(charges))