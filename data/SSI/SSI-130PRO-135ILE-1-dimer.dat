import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.807894222433123    -0.958939045148765     0.409801177652693
    C               -0.453894222433123    -1.895939045148765    -0.716198822347307
    C               -2.093894222433123    -1.535939045148765     0.997801177652693
    H               -0.935894222433123     0.066060954851235     0.055801177652693
    H               -0.028894222433123    -0.990939045148765     1.171801177652693
    H               -1.017894222433123    -1.622939045148765    -1.610198822347307
    H                0.613105777566877    -1.883939045148765    -0.928198822347307
    H               -2.072894222433123    -1.445939045148765     2.081801177652693
    H               -0.779314222433123    -2.886081045148765    -0.364458822347307
    H               -2.058494222433123    -2.598671045148765     0.716111177652693
    H               -2.973584222433123    -1.008989045148765     0.599711177652693
    C                1.938105777566877     1.459060954851235    -0.317198822347307
    C                1.367105777566877     2.881060954851235    -0.353198822347307
    H                3.007105777566877     1.473060954851235    -0.536198822347307
    H                1.773105777566877     1.023060954851235     0.666801177652693
    H                1.430105777566877     0.810060954851235    -1.031198822347307
    H                0.302105777566877     2.822060954851235    -0.123198822347307
    H                1.487235777566877     3.331000954851235    -1.349748822347307
    H                1.855155777566877     3.515810954851235     0.401061177652693

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-130PRO-135ILE-1-dimer.npy', np.array(charges))