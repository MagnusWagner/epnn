import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.266819529861504    -1.174444370318511    -0.601015172290827
    C                0.776819529861504    -1.063444370318511    -2.049015172290827
    C               -0.214180470138496    -2.550444370318512    -0.141015172290827
    H                1.059819529861504    -0.842444370318512     0.071984827709173
    H               -0.566180470138496    -0.478444370318512    -0.486015172290827
    H                0.030819529861504    -1.476444370318512    -2.730015172290826
    H                0.624819529861504    -3.240444370318512    -0.118015172290827
    H                1.709409529861504    -1.639194370318512    -2.142724172290827
    H                0.872509529861504    -0.000084370318512    -2.313777172290827
    H               -0.616240470138496    -2.470034370318512     0.879710827709173
    H               -0.974950470138496    -2.967614370318511    -0.817175172290827
    C                0.302819529861504     2.239555629681488     1.140984827709173
    C               -1.108180470138496     2.462555629681488     1.610984827709173
    H                0.637819529861504     1.233555629681488     1.391984827709173
    H                0.343819529861504     2.343555629681488     0.056984827709173
    H                0.968819529861504     2.969555629681488     1.597984827709173
    H               -1.736180470138496     1.727555629681488     1.143984827709173
    H               -1.400180470138496     3.439555629681488     1.227984827709173
    H               -1.241030470138496     2.427555629681488     2.702371827709173

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-205LEU-212ILE-1-dimer.npy', np.array(charges))