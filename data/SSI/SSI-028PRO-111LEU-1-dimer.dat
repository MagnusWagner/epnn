import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.627347580739642     1.233160908209038    -1.206849561715822
    C                0.849652419260358     1.100160908209038    -1.529849561715823
    C               -1.266347580739642     0.070160908209038    -1.949849561715822
    H               -1.000347580739642     2.174160908209038    -1.608849561715822
    H               -0.813347580739642     1.182160908209038    -0.133849561715823
    H                1.303652419260358     2.089160908209038    -1.592849561715822
    H                1.341652419260358     0.492160908209038    -0.771849561715822
    H               -2.326347580739642     0.236160908209038    -2.141849561715822
    H               -1.132347580739641    -0.841839091790962    -1.366849561715823
    H                0.868362419260358     0.568000908209038    -2.492375561715823
    H               -0.679437580739642    -0.000589091790962    -2.877499561715823
    C                0.738652419260358    -0.679839091790962     1.770150438284178
    C                0.256652419260358    -1.633839091790962     2.849150438284177
    H                1.826652419260358    -0.653839091790962     1.746150438284177
    H                0.372652419260358    -1.013839091790962     0.799150438284178
    H                0.366652419260358     0.327160908209038     1.967150438284177
    H                0.600652419260358    -2.631839091790962     2.587150438284177
    H                0.694842419260358    -1.344579091790962     3.815749438284177
    H               -0.842977580739642    -1.651729091790962     2.871329438284178

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028PRO-111LEU-1-dimer.npy', np.array(charges))