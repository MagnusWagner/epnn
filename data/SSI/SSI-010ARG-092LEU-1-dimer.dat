import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.508971289485500    -0.548586291650032    -0.955630167413490
    C                0.072028710514500    -1.797586291650032    -1.593630167413490
    C               -1.999971289485500    -0.356586291650032    -1.296630167413490
    H               -0.422971289485500    -0.641586291650032     0.126369832586510
    H                0.052028710514500     0.330413708349968    -1.268630167413490
    H                0.082028710514500    -1.685586291650032    -2.679630167413490
    H               -0.590971289485500    -2.630586291650032    -1.347630167413490
    H               -2.552971289485499    -1.201586291650032    -0.881630167413490
    H               -2.371971289485499     0.530413708349968    -0.782630167413490
    H                1.083398710514500    -2.034196291650032    -1.231500167413490
    H               -2.213881289485500    -0.306874291650032    -2.374480167413490
    C                0.673028710514500     1.825413708349968     1.659369832586510
    C                1.736028710514500     0.848413708349968     2.114369832586510
    H                0.482028710514500     2.564413708349968     2.438369832586511
    H                1.023028710514500     2.342413708349968     0.765369832586510
    H               -0.249971289485500     1.309413708349968     1.406369832586510
    H                1.825028710514500     0.062413708349968     1.365369832586510
    H                1.460418710514500     0.396502708349968     3.078639832586510
    H                2.726458710514501     1.308912708349968     2.244729832586510

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-010ARG-092LEU-1-dimer.npy', np.array(charges))