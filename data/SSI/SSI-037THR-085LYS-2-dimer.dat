import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.193565200303003    -0.554050014545030    -1.462916842594984
    C                2.406565200303002    -1.171050014545030    -1.961916842594984
    H                1.390565200303002     0.471949985454970    -1.154916842594984
    H                0.461565200303002    -0.537050014545030    -2.269916842594984
    H                0.773565200303002    -1.160050014545030    -0.659916842594984
    H                2.187565200303002    -2.149050014545030    -2.391916842594984
    H                3.137176000303002    -1.270940014545030    -1.145686842594984
    H                2.741215800303002    -0.473730014545030    -2.744066842594984
    C               -0.964434799696998     0.874949985454970     0.749083157405016
    C               -0.339434799696998     0.645949985454970     2.125083157405016
    C               -2.346434799696998     0.251949985454970     0.603083157405016
    H               -1.061434799696998     1.952949985454970     0.608083157405016
    H               -0.339434799696998     0.516949985454970    -0.022916842594984
    H               -1.013434799696998     1.072949985454970     2.873083157405016
    H               -2.282434799696998    -0.833050014545030     0.689083157405016
    H               -2.975434799696998     0.620949985454970     1.415083157405016
    H                0.640363200303002     1.142639985454970     2.182453157405016
    H               -0.226614799696998    -0.425480014545030     2.347133157405016
    H               -2.835813799696998     0.502409985454970    -0.349686842594984

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037THR-085LYS-2-dimer.npy', np.array(charges))