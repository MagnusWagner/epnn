import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.802601675307996    -1.448516217964666    -3.290050809343092
    C               -0.841398324692004    -1.412516217964667    -0.066050809343091
    C               -0.117398324692004    -1.588516217964667    -2.127050809343091
    C               -1.410398324692004    -1.991516217964667    -2.106050809343091
    N                0.220601675307996    -1.206516217964666    -0.845050809343092
    N               -1.855398324692004    -1.847516217964667    -0.821050809343091
    H               -0.906398324692004    -1.167516217964667     0.986949190656908
    H               -2.810398324692004    -1.949516217964667    -0.498050809343091
    H               -1.984398324692004    -2.307516217964667    -2.964050809343091
    H                1.513601675307996    -0.649516217964667    -3.086050809343091
    H                0.216601675307996    -1.145516217964667    -4.158050809343091
    H                1.344701675307996    -2.375946217964667    -3.526670809343091
    C                0.247601675307996     3.064483782035333     3.191949190656909
    C                0.778601675307996     2.155483782035334     2.094949190656908
    O                0.029601675307996     1.219483782035333     1.696949190656909
    O                1.948601675307996     2.354483782035333     1.663949190656909
    H                0.846601675307996     3.975483782035333     3.262949190656909
    H                0.345601675307996     2.548483782035333     4.150949190656909
    H               -0.812668324692004     3.323293782035333     3.054679190656909

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-068HIE-080GLU-1-dimer.npy', np.array(charges))