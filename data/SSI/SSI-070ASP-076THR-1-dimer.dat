import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.875167529333623    -0.832512822325056    -1.489927573100042
    C                1.256167529333623    -0.025512822325056    -0.357927573100042
    O                0.242167529333623     0.661487177674944    -0.604927573100042
    O                1.764167529333623    -0.075512822325056     0.772072426899958
    H                1.452167529333623    -0.480512822325056    -2.431927573100042
    H                1.621167529333623    -1.885512822325056    -1.366927573100042
    H                2.968607529333623    -0.725322822325056    -1.543877573100042
    C               -2.965832470666377    -0.209512822325056     0.523072426899958
    O               -1.826832470666377     0.451487177674944     1.067072426899959
    H               -1.115832470666377     0.473487177674944     0.389072426899958
    H               -2.652832470666377    -1.177512822325056     0.131072426899958
    H               -3.718342470666377    -0.347432822325056     1.313452426899958
    H               -3.374382470666377     0.388537177674944    -0.304827573100042

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-070ASP-076THR-1-dimer.npy', np.array(charges))