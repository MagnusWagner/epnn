import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.337514218839465    -1.386217316343479    -1.631402400520956
    O                1.036514218839465    -0.248217316343479    -0.852402400520956
    H                0.772514218839465     0.466782683656521    -1.447402400520956
    H                2.222514218839466    -1.171217316343479    -2.232402400520956
    H                0.509514218839465    -1.582217316343479    -2.315402400520956
    H                1.528024218839465    -2.290762016343478    -1.035162400520956
    C               -1.171485781160535     1.094782683656521     1.911597599479044
    O               -1.170485781160535     0.446782683656521     0.666597599479044
    H               -1.376485781160535     1.104782683656521    -0.007402400520956
    H               -2.178485781160535     1.439782683656522     2.147597599479044
    H               -0.833955781160535     0.395668683656521     2.690897599479044
    H               -0.494285781160535     1.955865683656521     1.811897599479044

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024SER-038THR-1-dimer.npy', np.array(charges))