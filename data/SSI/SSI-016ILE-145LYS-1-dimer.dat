import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.741713156473058     1.304221552388249     0.847170238557482
    C                2.520713156473058     2.568221552388249     0.491170238557482
    H                2.098713156473058     0.890221552388250     1.790170238557482
    H                0.686713156473058     1.555221552388249     0.960170238557482
    H                1.851713156473058     0.559221552388250     0.058170238557482
    H                2.529713156473058     3.236221552388250     1.348170238557482
    H                1.969713156473058     3.070221552388250    -0.302829761442518
    H                3.546425156473058     2.381402552388250     0.140440238557482
    C               -1.078286843526942    -0.905778447611751    -0.595829761442518
    C               -2.460286843526942    -0.647778447611751    -0.012829761442518
    C               -0.788286843526942    -2.389778447611751    -0.761829761442518
    H               -1.020286843526942    -0.422778447611750    -1.572829761442518
    H               -0.322286843526942    -0.458778447611750     0.047170238557482
    H               -3.204286843526942    -1.077778447611750    -0.687829761442518
    H               -2.618286843526942     0.430221552388250     0.003170238557482
    H               -0.822286843526942    -2.885778447611750     0.209170238557482
    H               -1.532286843526942    -2.839778447611751    -1.422829761442518
    H               -2.614013843526942    -1.060830447611750     0.995017238557482
    H                0.217951156473058    -2.532907447611751    -1.182539761442518

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016ILE-145LYS-1-dimer.npy', np.array(charges))