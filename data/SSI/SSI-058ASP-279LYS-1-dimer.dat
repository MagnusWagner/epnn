import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.147129221664188     1.230824986952450     1.548748700293578
    C               -0.561129221664187     1.145824986952450     0.164748700293578
    O               -0.894129221664187     0.148824986952450    -0.538251299706422
    O                0.202870778335813     2.075824986952449    -0.203251299706422
    H               -1.577129221664187     0.268824986952450     1.837748700293578
    H               -1.951129221664187     1.966824986952450     1.518748700293578
    H               -0.394996221664187     1.520484986952449     2.297338700293579
    C                1.861870778335813    -1.929175013047550    -0.239251299706422
    N                0.441870778335813    -2.285175013047550    -0.634251299706422
    H                0.054870778335813    -3.022175013047550    -0.040251299706422
    H               -0.176129221664187    -1.475175013047550    -0.578251299706422
    H                0.399870778335813    -2.668175013047550    -1.580251299706422
    H                1.920870778335813    -1.788175013047550     0.842748700293578
    H                2.141870778335813    -0.987175013047550    -0.722251299706422
    H                2.584130778335813    -2.699055013047551    -0.548481299706422

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-058ASP-279LYS-1-dimer.npy', np.array(charges))