import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.540349253155710    -1.282950127572034     0.742544229214892
    C                0.853650746844290    -1.515950127572034     1.411544229214892
    C               -0.499349253155710    -1.106950127572034    -0.773455770785108
    O                0.558650746844290    -1.328950127572034    -1.403455770785109
    O               -1.552349253155711    -0.759950127572034    -1.347455770785108
    H               -1.186349253155710    -2.132950127572034     0.967544229214892
    H               -0.993349253155710    -0.395950127572034     1.188544229214892
    H                1.542650746844290    -0.737950127572034     1.082544229214891
    H                1.249650746844290    -2.486950127572034     1.107544229214892
    H                0.773820746844290    -1.471760127572034     2.507754229214892
    C                0.634650746844289     2.185049872427966     0.473544229214891
    C                0.479650746844290     3.646049872427966     0.899544229214892
    H               -0.344349253155711     1.712049872427966     0.394544229214892
    H                1.122650746844289     2.126049872427966    -0.490455770785108
    H                1.239650746844290     1.650049872427966     1.205544229214891
    H                1.458650746844290     4.077049872427966     1.102544229214891
    H               -0.171759253155710     3.752509872427966     1.779504229214891
    H                0.026890746844290     4.136599872427966     0.025264229214892

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-023GLU-028LEU-1-dimer.npy', np.array(charges))