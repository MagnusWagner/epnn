import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.358746696072580    -0.141606819580012     1.906870590320545
    C               -1.568746696072580    -0.925606819580012     2.423870590320544
    S               -0.819746696072580     1.415393180419988     1.106870590320545
    H                0.302253303927420     0.070393180419988     2.751870590320545
    H                0.188253303927420    -0.765606819580013     1.201870590320545
    H               -1.933746696072580    -0.412606819580012     3.314870590320544
    H                0.382253303927420     2.010393180419987     1.168870590320545
    H               -1.261406696072579    -1.946035819580012     2.696390590320545
    H               -2.361638696072579    -0.952203819580012     1.661890590320545
    C                0.461253303927420    -1.239606819580012    -1.703129409679455
    C               -0.552746696072580    -0.646606819580012    -2.676129409679455
    S                1.717253303927420    -0.064606819580012    -1.124129409679455
    H               -0.065746696072580    -1.670606819580012    -0.848129409679455
    H                0.981253303927420    -2.059606819580013    -2.204129409679455
    H               -0.010746696072580    -0.157606819580012    -3.489129409679455
    H                1.704253303927421    -0.444606819580012     0.160870590320545
    H               -1.195098696072580     0.090008180419988    -2.171369409679456
    H               -1.162500696072579    -1.448079819580012    -3.118669409679455

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-036CYS-039CYS-1-dimer.npy', np.array(charges))