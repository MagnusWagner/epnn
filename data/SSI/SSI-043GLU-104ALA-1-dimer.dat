import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.844999300330806    -0.934911261898371     1.773231152540667
    C                0.854999300330806     0.443088738101629     1.091231152540667
    O                1.702999300330806     0.682088738101629     0.194231152540667
    O               -0.002000699669194     1.286088738101629     1.453231152540667
    H               -0.106000699669194    -1.084911261898371     2.289231152540667
    H                1.639999300330806    -0.963911261898371     2.522231152540667
    H                0.986269300330806    -1.763177261898371     1.063291152540667
    C               -1.035000699669194    -0.315911261898371    -2.101768847459333
    C               -2.302000699669194    -1.130911261898371    -2.332768847459333
    H               -0.794000699669194    -0.297911261898371    -1.041768847459333
    H               -0.203000699669194    -0.750911261898371    -2.658768847459333
    H               -1.191000699669194     0.709088738101629    -2.442768847459333
    H               -2.566000699669194    -1.068911261898371    -3.389768847459333
    H               -3.132269699669194    -0.745913261898371    -1.722498847459333
    H               -2.138565699669194    -2.186732261898371    -2.070982847459333

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-043GLU-104ALA-1-dimer.npy', np.array(charges))