import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -2 1
    --
    -2 1
    C                0.436262025089470     0.633384669055152    -2.156768006408494
    C                1.495262025089470     0.709384669055152    -1.050768006408494
    O                1.134262025089470     1.081384669055152     0.084231993591506
    O                2.690262025089470     0.432384669055152    -1.306768006408494
    H                0.107262025089470     1.650384669055152    -2.382768006408494
    H               -0.446737974910530     0.093384669055152    -1.809768006408494
    H                0.796432025089470     0.193894669055152    -3.098638006408494
    C               -0.383737974910529    -1.514615330944848     1.725231993591506
    C               -1.493737974910529    -0.673615330944848     1.069231993591506
    O               -2.554737974910530    -1.237615330944848     0.701231993591506
    O               -1.320737974910529     0.559384669055152     0.933231993591506
    H               -0.122737974910530    -1.088615330944848     2.697231993591506
    H                0.507262025089470    -1.478615330944848     1.099231993591506
    H               -0.676377974910530    -2.564275330944848     1.875491993591506

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-075GLU-079GLU-2-dimer.npy', np.array(charges))