import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.124315389462019     1.350109995529868     1.381810385901348
    O                1.324315389462019     1.752109995529868     0.269810385901348
    H                0.519315389462019     1.189109995529868     0.239810385901348
    H                3.065315389462020     1.898109995529868     1.329810385901348
    H                1.603535389462019     1.625561995529868     2.310744085901348
    H                2.355135389462019     0.275357995529868     1.341417085901348
    C               -0.998684610537981    -1.976890004470132     0.417810385901348
    C               -0.935684610537981    -0.772890004470132    -0.506189614098652
    O               -1.040684610537981     0.344109995529868     0.034810385901348
    O               -0.710684610537981    -0.932890004470132    -1.729189614098652
    H               -1.698684610537980    -1.747890004470132     1.220810385901348
    H               -0.014684610537981    -2.132890004470132     0.847810385901348
    H               -1.313934610537981    -2.904620004470132    -0.082124614098652

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017THR-078GLU-1-dimer.npy', np.array(charges))