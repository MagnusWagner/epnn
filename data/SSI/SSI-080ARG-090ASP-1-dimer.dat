import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.079088392080554    -2.257875260374229    -0.551437222920772
    C               -0.468911607919446    -3.050875260374229    -1.726437222920772
    C                1.499088392080554    -2.621875260374229    -0.171437222920772
    H                0.047088392080554    -1.210875260374229    -0.835437222920772
    H               -0.540911607919446    -2.404875260374229     0.332562777079228
    H               -0.289911607919446    -4.115875260374229    -1.569437222920772
    H                0.048088392080554    -2.739875260374229    -2.635437222920772
    H                1.779088392080554    -2.052875260374229     0.717562777079228
    H                1.487088392080554    -3.663875260374229     0.090562777079228
    H               -1.547771607919446    -2.867565260374229    -1.838019222920772
    H                2.210298392080554    -2.393325260374229    -0.978873222920772
    C               -1.604911607919446     2.415124739625771     0.293562777079228
    C               -0.202911607919446     1.950124739625771     0.616562777079228
    O                0.046088392080554     0.730124739625771     0.616562777079228
    O                0.647088392080554     2.816124739625771     0.917562777079228
    H               -1.587911607919446     3.471124739625771     0.014562777079228
    H               -2.214911607919446     2.317124739625771     1.193562777079228
    H               -2.073841607919446     1.831664739625771    -0.512470222920772

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-080ARG-090ASP-1-dimer.npy', np.array(charges))