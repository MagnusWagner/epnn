import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.246125461520698    -0.082863527742620     0.865307629220028
    C                1.669125461520699    -1.246863527742620     1.743307629220028
    C                2.280125461520699     0.012136472257380    -0.264692370779972
    H                1.161125461520698     0.836136472257380     1.442307629220029
    H                0.276125461520698    -0.321863527742620     0.442307629220028
    H                1.770125461520698    -0.924863527742620     2.781307629220028
    H                0.940125461520698    -2.052863527742620     1.692307629220029
    H                1.759125461520698     0.129136472257380    -1.217692370779972
    H                2.639375461520698    -1.591693527742620     1.356387629220029
    H                2.831905461520698    -0.936163527742620    -0.185542370779972
    H                2.980095461520698     0.845371472257380    -0.104202370779972
    C               -1.981874538479302     0.366136472257380    -0.769692370779971
    C               -3.132874538479301     0.960136472257380    -1.518692370779972
    H               -1.963874538479301     0.755136472257380     0.249307629220028
    H               -2.072874538479302    -0.716863527742620    -0.708692370779972
    H               -1.036874538479302     0.626136472257380    -1.242692370779972
    H               -3.129874538479301     0.546136472257380    -2.528692370779972
    H               -3.036471538479301     2.053711472257380    -1.587982370779972
    H               -4.078049538479302     0.649166472257380    -1.049712370779972

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-120PRO-126ALA-1-dimer.npy', np.array(charges))