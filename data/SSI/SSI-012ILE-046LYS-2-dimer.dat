import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.327176290927139     1.722883504582619    -0.671159278474437
    C                0.975176290927139     2.770883504582620    -1.670159278474437
    H                2.123176290927139     1.061883504582619    -0.984159278474437
    H                1.639176290927139     2.208883504582620     0.250840721525563
    H                0.448176290927139     1.167883504582619    -0.432159278474437
    H                1.829176290927139     3.429883504582619    -1.725159278474437
    H                0.117176290927139     3.340883504582620    -1.308159278474437
    H                0.735256290927139     2.312073504582619    -2.640689278474437
    C               -0.290823709072861    -1.259116495417381     0.949840721525563
    C               -1.688823709072861    -0.671116495417380     1.072840721525563
    C               -0.342823709072861    -2.648116495417380     0.373840721525563
    H                0.320176290927139    -0.669116495417380     0.288840721525563
    H                0.190176290927139    -1.289116495417381     1.927840721525563
    H               -2.280823709072861    -1.269116495417381     1.768840721525563
    H               -2.168823709072861    -0.714116495417380     0.092840721525563
    H               -0.750823709072861    -3.330116495417381     1.115840721525563
    H               -0.969823709072861    -2.662116495417381    -0.521159278474437
    H               -1.670633709072861     0.378173504582620     1.402470721525563
    H                0.677986290927139    -2.958856495417381     0.106670721525563

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012ILE-046LYS-2-dimer.npy', np.array(charges))