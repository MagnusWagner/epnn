import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.614804955891413    -1.417372329538698     2.434960303417167
    O                1.019804955891414    -0.782372329538698     1.313960303417167
    H                0.908804955891414     0.159627670461302     1.509960303417166
    H                0.974804955891414    -1.225372329538698     3.295960303417167
    H                2.585804955891414    -0.967372329538698     2.636960303417166
    H                1.721894955891414    -2.505547329538698     2.314930303417167
    C               -0.798195044108586     0.918627670461302    -0.781039696582833
    C               -2.137195044108587     1.131627670461302    -1.472039696582833
    O                0.126804955891413     0.278627670461302    -1.639039696582833
    H               -0.393195044108587     1.884627670461302    -0.474039696582833
    H               -0.956195044108587     0.302627670461302     0.104960303417167
    H               -2.542195044108586     0.157627670461302    -1.736039696582833
    H                0.069804955891413    -0.688372329538698    -1.520039696582834
    H               -2.009635044108586     1.741658670461302    -2.378456696582833
    H               -2.833445044108587     1.599658670461302    -0.760574696582833

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-073SER-090SER-1-dimer.npy', np.array(charges))