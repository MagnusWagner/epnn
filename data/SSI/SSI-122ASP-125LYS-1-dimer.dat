import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.137951650198595     1.329218587786871    -1.905920974912636
    C               -0.109048349801405     1.197218587786872    -1.057920974912636
    O               -0.250048349801405     1.939218587786871    -0.053920974912636
    O               -0.937048349801405     0.320218587786871    -1.398920974912636
    H                0.845951650198595     1.227218587786872    -2.953920974912636
    H                1.835951650198595     0.521218587786871    -1.678920974912636
    H                1.626631650198595     2.306578587786872    -1.779600974912636
    C               -0.168048349801405    -1.347781412213129     1.027079025087364
    C                1.331951650198595    -1.435781412213129     1.291079025087364
    C               -1.022048349801405    -1.997781412213129     2.099079025087364
    H               -0.455048349801405    -0.305781412213129     1.009079025087364
    H               -0.385048349801405    -1.815781412213129     0.066079025087364
    H                1.853951650198595    -0.963781412213129     0.457079025087364
    H                1.617951650198595    -2.489781412213129     1.308079025087364
    H               -0.791048349801405    -3.065781412213129     2.119079025087364
    H               -0.808048349801405    -1.582781412213129     3.085079025087364
    H                1.654181650198595    -0.962841412213129     2.230489025087364
    H               -2.095358349801405    -1.878601412213128     1.889809025087364

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-122ASP-125LYS-1-dimer.npy', np.array(charges))