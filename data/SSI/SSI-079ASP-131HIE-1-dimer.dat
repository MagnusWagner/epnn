import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -3.028095004011622    -1.139981760042954     2.502788810397284
    C               -1.890095004011621    -1.061981760042954     1.498788810397285
    O               -0.696095004011621    -1.118981760042954     1.871788810397285
    O               -2.177095004011622    -0.878981760042954     0.295788810397285
    H               -3.657095004011621    -2.005981760042954     2.291788810397285
    H               -3.639095004011621    -0.242981760042954     2.386788810397284
    H               -2.667469004011621    -1.188831760042954     3.540845810397284
    C                3.524904995988379     1.355018239957046    -0.916211189602715
    C                1.371904995988378     0.056018239957046    -0.235211189602715
    C                2.087904995988378     0.923018239957046    -1.001211189602715
    C                0.041904995988379     0.824018239957046    -1.808211189602715
    N                0.098904995988379     0.022018239957046    -0.759211189602715
    N                1.239904995988379     1.373018239957046    -1.995211189602715
    H                1.727904995988379    -0.482981760042954     0.633788810397285
    H               -0.692095004011621    -0.458981760042954    -0.334211189602715
    H                4.020904995988379     0.969018239957046    -1.807211189602715
    H                3.987904995988378     0.896018239957046    -0.042211189602715
    H               -0.844095004011621     1.010018239957046    -2.407211189602716
    H                3.656134995988379     2.446478239957046    -0.877487189602715

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-079ASP-131HIE-1-dimer.npy', np.array(charges))