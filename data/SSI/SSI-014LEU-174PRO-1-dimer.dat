import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.262337427337517     0.123799948312818     2.064292473677745
    C               -1.416337427337517    -1.302200051687182     2.583292473677745
    H               -0.240337427337517     0.296799948312818     1.726292473677745
    H               -1.949337427337517     0.289799948312818     1.234292473677746
    H               -1.499337427337517     0.832799948312818     2.857292473677745
    H               -2.443337427337517    -1.434200051687182     2.922292473677745
    H               -0.721237427337517    -1.458185051687182     3.421443473677745
    H               -1.202427427337517    -2.019811051687181     1.777515473677745
    C                0.289662572662483     0.246799948312818    -1.456707526322255
    C                1.274662572662483    -0.450200051687182    -2.380707526322255
    C                1.127662572662483     1.388799948312818    -0.898707526322255
    H               -0.061337427337517    -0.422200051687182    -0.671707526322255
    H               -0.550337427337517     0.643799948312818    -2.029707526322255
    H                1.919662572662483    -1.125200051687182    -1.821707526322255
    H                0.729662572662483    -0.985200051687182    -3.159707526322255
    H                1.831662572662483     1.000799948312818    -0.161707526322255
    H                0.507662572662483     2.169799948312818    -0.459707526322255
    H                1.868352572662483     0.384119948312818    -2.782500446322254
    H                1.652172572662483     1.743531948312818    -1.798180826322255

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-014LEU-174PRO-1-dimer.npy', np.array(charges))