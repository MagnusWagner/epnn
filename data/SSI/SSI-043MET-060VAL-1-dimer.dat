import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.035699856423840    -0.392213723035176    -1.436820504233854
    C                0.523699856423840     0.363786276964824    -2.677820504233853
    C               -0.918300143576160    -1.518213723035176    -1.844820504233853
    H                0.880699856423840    -0.808213723035176    -0.886820504233854
    H               -0.496300143576160     0.304786276964824    -0.785820504233854
    H               -0.341300143576160     0.824786276964824    -3.159820504233854
    H               -1.691300143576160    -1.104213723035176    -2.494820504233853
    H               -0.368300143576160    -2.277213723035176    -2.401820504233853
    H                1.017395856423840    -0.321819723035176    -3.382241504233853
    H                1.238647856423840     1.151236276964824    -2.397153504233853
    H               -1.408731143576160    -1.999414723035176    -0.985800504233853
    C                0.050699856423840     0.545786276964824     2.210179495766147
    C                0.313699856423840     0.976786276964824     3.657179495766147
    H               -0.942300143576160     0.847786276964824     1.884179495766146
    H                0.111699856423840    -0.539213723035176     2.138179495766146
    H                0.795699856423840     0.985786276964824     1.545179495766146
    H               -0.428300143576160     0.534786276964824     4.317179495765147
    H                0.264352856423840     2.073156276964824     3.731559495766146
    H                1.302556856423840     0.614346276964824     3.974669495766147

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-043MET-060VAL-1-dimer.npy', np.array(charges))