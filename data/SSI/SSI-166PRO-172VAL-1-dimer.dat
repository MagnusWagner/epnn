import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.245702209072446     0.937168045851906     1.049229444330093
    C                1.617702209072446     0.833168045851906     0.424229444330093
    C                0.208702209072446     2.310168045851905     1.707229444330093
    H                0.129702209072446     0.137168045851906     1.782229444330093
    H               -0.539297790927554     0.868168045851906     0.300229444330093
    H                1.967702209072446    -0.197831954148094     0.373229444330093
    H                1.561702209072446     1.264168045851906    -0.572770555669907
    H               -0.303297790927554     2.991168045851906     1.033229444330093
    H                2.277972209072446     1.461128045851906     1.040439444330093
    H                1.265212209072446     2.606958045851906     1.782749444330093
    H               -0.251977790927554     2.244148045851905     2.703929444330093
    C               -1.070297790927554    -1.565831954148094    -0.941770555669907
    C               -0.996297790927554    -2.454831954148094    -2.167770555669907
    H               -1.884297790927554    -1.876831954148094    -0.288770555669907
    H               -0.139297790927554    -1.638831954148094    -0.378770555669907
    H               -1.231297790927554    -0.534831954148094    -1.256770555669907
    H               -0.917297790927554    -3.488831954148094    -1.832770555669907
    H               -1.903237790927554    -2.335101954148094    -2.778610555669907
    H               -0.097907790927554    -2.213151954148094    -2.754710555669907

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-166PRO-172VAL-1-dimer.npy', np.array(charges))