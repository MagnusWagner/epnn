import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.793661085038184     0.780443697784318    -2.284999148692167
    C               -0.325661085038183     0.450443697784318    -2.435999148692167
    O                0.265338914961816    -0.194556302215682    -1.572999148692167
    N                0.289338914961817     0.925443697784318    -3.509999148692167
    H               -2.217661085038183     1.064443697784317    -3.247999148692167
    H               -1.848661085038184     1.655443697784318    -1.637999148692167
    H                1.267338914961816     0.715443697784318    -3.628999148692167
    H               -0.229661085038183     1.384443697784318    -4.253999148692166
    H               -2.367261085038183    -0.046976302215682    -1.841899148692167
    C               -0.538661085038183     0.450443697784318     3.055000851307833
    C                0.440338914961816    -0.547556302215682     2.490000851307833
    O                1.002338914961816    -1.351556302215682     3.226000851307833
    N                0.616338914961817    -0.547556302215682     1.180000851307833
    H                1.258338914961816    -1.212556302215683     0.780000851307833
    H                0.145338914961817     0.104443697784318     0.573000851307833
    H               -1.000661085038184     1.024443697784318     2.250000851307833
    H                0.017338914961817     1.141443697784318     3.687000851307833
    H               -1.322111085038184    -0.042806302215682     3.649100851307833

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ASN-065ASN-2-dimer.npy', np.array(charges))