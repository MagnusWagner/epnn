import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.661277185059369     0.209081125090746    -0.959861885939637
    C               -1.712277185059369     1.572081125090746    -1.677861885939637
    H               -1.842277185059369     0.314081125090746     0.099138114060363
    H               -2.404277185059369    -0.467918874909254    -1.383861885939637
    H               -0.674277185059369    -0.227918874909254    -1.103861885939637
    H               -1.454277185059369     1.421081125090746    -2.722861885939637
    H               -1.000007185059369     2.291144125090746    -1.247031885939637
    H               -2.723047185059368     2.005686125090746    -1.659551885939637
    C                1.568722814940632    -1.155918874909254     0.623138114060363
    C                1.810722814940632    -0.623918874909254     2.023138114060363
    H                2.152722814940632    -2.054918874909254     0.437138114060363
    H                0.514722814940632    -1.415918874909254     0.523138114060363
    H                1.819722814940631    -0.395918874909254    -0.117861885939637
    H                1.537722814940631    -1.385918874909254     2.751138114060363
    H                1.143722814940632     0.227081125090746     2.152138114060364
    H                2.859402814940632    -0.326330974909254     2.170508114060363

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037ALA-056ILE-1-dimer.npy', np.array(charges))