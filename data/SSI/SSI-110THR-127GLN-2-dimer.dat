import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.128665776739785    -2.488625491330324    -0.833189976776974
    O               -1.404665776739785    -1.270625491330323    -0.937189976776974
    H               -0.616665776739785    -1.294625491330323    -0.363189976776974
    H               -1.595665776739785    -3.155625491330323    -0.156189976776974
    H               -3.136685776739785    -2.295975491330323    -0.437229976776974
    H               -2.174895776739785    -2.974045491330323    -1.819209976776974
    C               -0.164665776739785     1.885374508669676     0.844810023223026
    C                0.956334223260215     0.941374508669677     0.452810023223026
    O                0.754334223260215    -0.265625491330323     0.340810023223026
    N                2.147334223260215     1.470374508669677     0.241810023223026
    H                0.239334223260215     2.873374508669677     1.029810023223026
    H               -0.601665776739785     1.518374508669676     1.772810023223025
    H                2.898334223260215     0.860374508669677    -0.023189976776974
    H                2.327334223260215     2.443374508669677     0.509810023223026
    H               -0.934605776739785     1.950314508669676     0.061880023223026

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-110THR-127GLN-2-dimer.npy', np.array(charges))