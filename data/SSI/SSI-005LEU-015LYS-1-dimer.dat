import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -0.440204913047015     2.027736673889130    -1.610345068578685
    C                0.298795086952985     3.064736673889130    -0.759345068578685
    H               -1.204204913047015     1.534736673889130    -1.009345068578685
    H               -0.922204913047015     2.521736673889130    -2.455345068578685
    H                0.263795086952985     1.283736673889130    -1.984345068578685
    H               -0.453204913047015     3.796736673889130    -0.475345068578685
    H                0.753635086952985     2.632028173889130     0.143915931421315
    H                1.062985086952985     3.580962673889130    -1.358950068578685
    C               -0.129204913047015    -1.265263326110870     0.372654931421315
    C               -0.738204913047015    -1.248263326110870     1.754654931421315
    N                0.886795086952985    -2.343263326110870     0.247654931421315
    H               -0.927204913047015    -1.414263326110870    -0.365345068578685
    H                0.333795086952985    -0.291263326110870     0.173654931421315
    H                0.091795086952985    -1.223263326110870     2.430654931421315
    H               -1.205204913047015    -2.226263326110870     1.907654931421315
    H                0.497795086952985    -3.263263326110870     0.438654931421315
    H                1.260795086952985    -2.378263326110870    -0.696345068578685
    H                1.679795086952985    -2.201263326110870     0.865654931421315
    H               -1.541964913047015    -0.501049326110870     1.829805931421315

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005LEU-015LYS-1-dimer.npy', np.array(charges))