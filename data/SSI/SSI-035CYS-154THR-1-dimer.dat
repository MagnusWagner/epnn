import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.525352007656640     1.531156297727150     0.442508245582262
    S               -0.105352007656640     1.359156297727150    -0.675491754417738
    H                0.397647992343360     0.231156297727150    -0.133491754417738
    H               -1.250352007656640     1.077156297727150     1.398508245582262
    H               -2.363352007656640     0.957156297727150     0.055508245582262
    H               -1.853572007656640     2.562386297727150     0.639578245582262
    C                0.691647992343360    -2.726843702272850     0.133508245582262
    O                0.940647992343360    -1.447843702272850     0.709508245582262
    H                1.567647992343360    -1.554843702272850     1.435508245582262
    H               -0.223352007656640    -2.675843702272851    -0.445491754417738
    H                1.515477992343361    -2.999293702272850    -0.542561754417738
    H                0.550027992343360    -3.500343702272850     0.902688245582262

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035CYS-154THR-1-dimer.npy', np.array(charges))