import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.474358641993868    -2.211571637806171    -1.078431354036938
    O               -0.080641358006132    -0.911571637806170    -1.020431354036938
    H               -1.041641358006132    -1.004571637806171    -0.926431354036938
    H                0.415358641993868    -2.573571637806171    -2.106431354036938
    H               -0.097641358006132    -2.888571637806171    -0.442431354036938
    H                1.525009641993868    -2.208694637806170    -0.752664354036938
    C                0.455358641993868     1.944428362193829     0.974568645963062
    O               -0.766641358006132     1.215428362193829     1.066568645963062
    H               -0.733641358006132     0.670428362193830     1.862568645963062
    H                1.281358641993868     1.235428362193829     0.910568645963062
    H                0.442556641993868     2.578150362193830     0.075550645963062
    H                0.585647641993868     2.549804962193829     1.883713645963062

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015SER-018THR-1-dimer.npy', np.array(charges))