import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.364900381225833    -0.878294082848201     0.519704154276842
    C                2.797900381225833    -1.312294082848201     0.752704154276842
    H                0.754900381225833    -1.068294082848201     1.404704154276842
    H                1.345900381225833     0.190705917151799     0.297704154276842
    H                0.945900381225833    -1.417294082848201    -0.330295845723158
    H                3.360900381225833    -1.046294082848201    -0.142295845723158
    H                2.853580381225833    -2.399394082848201     0.911164154276842
    H                3.209940381225833    -0.759114082848201     1.609564154276842
    C               -2.036099618774167     0.706705917151799     0.021704154276842
    C               -2.127099618774167     1.474705917151799    -1.292295845723158
    H               -2.686099618774167    -0.169294082848201    -0.004295845723158
    H               -1.008099618774167     0.395705917151799     0.196704154276842
    H               -2.344099618774167     1.352705917151799     0.845704154276842
    H               -1.553099618774167     2.388705917151799    -1.164295845723158
    H               -3.176559618774168     1.723995917151799    -1.507915845723158
    H               -1.698419618774167     0.917125917151799    -2.138075845723157

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-120VAL-275LEU-1-dimer.npy', np.array(charges))