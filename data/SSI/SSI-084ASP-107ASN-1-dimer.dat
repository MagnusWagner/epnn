import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.869624377437240    -1.230803461299654    -2.293080222358453
    C                0.548624377437240    -0.460803461299654    -2.313080222358453
    O               -0.213375622562760    -0.499803461299654    -1.317080222358453
    O                0.274624377437240     0.207196538700346    -3.332080222358453
    H                2.498624377437241    -0.909803461299654    -3.126080222358453
    H                1.657624377437240    -2.292803461299654    -2.420080222358453
    H                2.417024377437241    -1.098993461299654    -1.348101222358453
    C               -0.483375622562760     1.373196538700346     3.450919777641547
    C               -0.668375622562760     0.437196538700346     2.287919777641547
    O               -1.699375622562760    -0.215803461299654     2.157919777641548
    N                0.311624377437240     0.389196538700346     1.408919777641548
    H                0.136624377437240    -0.092803461299654     0.526919777641547
    H                1.176624377437240     0.880196538700346     1.582919777641548
    H                0.563624377437240     1.669196538700346     3.531919777641547
    H               -0.739375622562760     0.827196538700346     4.360919777641548
    H               -1.122295622562760     2.264656538700346     3.366738777641547

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-084ASP-107ASN-1-dimer.npy', np.array(charges))