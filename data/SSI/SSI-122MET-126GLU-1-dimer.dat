import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.567678636225670    -1.423428361679371     0.579511976309567
    C               -0.929678636225670    -1.962428361679371     1.974511976309567
    C                1.966321363774330    -0.634428361679372     1.286511976309567
    S                1.168321363774330    -1.736428361679372     0.148511976309567
    H               -1.183678636225670    -1.918428361679371    -0.167488023690433
    H               -0.763678636225670    -0.352428361679372     0.540511976309567
    H               -0.338678636225670    -1.430428361679371     2.721511976309567
    H               -0.679678636225670    -3.023428361679372     2.029511976309567
    H                1.786321363774330    -0.952428361679372     2.312511976309566
    H                3.040321363774330    -0.642428361679372     1.102511976309567
    H                1.584321363774330     0.374571638320628     1.138511976309567
    H               -1.995347636225670    -1.814538361679372     2.203591976309567
    C               -0.574678636225670     1.179571638320629    -2.288488023690434
    C               -0.778678636225670     1.974571638320628    -0.995488023690433
    O               -1.923678636225670     2.348571638320628    -0.647488023690433
    O                0.255321363774330     2.199571638320629    -0.322488023690433
    H                0.301321363774330     0.541571638320628    -2.158488023690434
    H               -0.366678636225670     1.876571638320629    -3.103488023690434
    H               -1.439815636225670     0.558221638320628    -2.563208023690434

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-122MET-126GLU-1-dimer.npy', np.array(charges))