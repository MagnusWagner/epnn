import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.943609539464483     1.400985827828050    -1.786486425363252
    O               -1.769609539464484     0.150985827828050    -1.099486425363252
    H               -0.810609539464483     0.011985827828050    -0.904486425363252
    H               -1.432609539464484     1.363985827828050    -2.749486425363252
    H               -1.523609539464483     2.211985827828050    -1.194486425363252
    H               -3.023279539464483     1.553051827828050    -1.932036425363252
    C               -0.008609539464483    -0.347014172171950     1.863513574636748
    C                1.049390460535517    -0.419014172171950     0.734513574636748
    O                0.676390460535517    -0.431014172171950    -0.442486425363252
    O                2.254390460535517    -0.460014172171950     0.959513574636748
    H               -0.672609539464483    -1.211014172171950     1.790513574636748
    H               -0.607609539464483     0.545985827828050     1.684513574636748
    H                0.391520460535517    -0.291299172171950     2.886643574636748

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-133SER-161GLU-1-dimer.npy', np.array(charges))