import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.438271715332496     0.752749365598197     1.590177504770189
    C                2.194271715332496    -0.434250634401803     0.941177504770189
    H                2.109271715332496     1.314749365598197     2.243177504770189
    H                1.079271715332496     1.425749365598197     0.812177504770189
    H                0.585271715332496     0.398749365598197     2.169177504770190
    H                1.510271715332496    -0.988250634401803     0.303177504770189
    H                2.561291715332496    -1.081690134401803     1.751187504770189
    H                3.014511715332496    -0.074510634401803     0.302587504770189
    C               -1.556728284667504     0.186749365598197    -0.499822495229811
    C               -1.589728284667504    -1.342250634401803    -0.560822495229811
    C               -0.587728284667504     0.838749365598197    -1.506822495229811
    H               -2.557728284667504     0.578749365598197    -0.673822495229811
    H               -1.246728284667504     0.510749365598197     0.492177504770189
    H               -0.598728284667504    -1.727250634401803    -0.319822495229811
    H               -0.987728284667504     0.776749365598197    -2.517822495229810
    H               -0.470728284667504     1.893749365598197    -1.257822495229811
    H                0.386271715332496     0.352749365598197    -1.464822495229811
    H               -2.319663284667504    -1.727713734401803     0.166237504770189
    H               -1.854630284667504    -1.673378334401803    -1.575802495229811

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-122VAL-125ILE-1-dimer.npy', np.array(charges))