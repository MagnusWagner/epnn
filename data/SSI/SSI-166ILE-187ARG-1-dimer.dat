import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.911823094887538     2.107194559696038     0.575871425313247
    C                1.777823094887537     3.275194559696037     0.035871425313247
    H                0.010823094887537     2.502194559696037     1.048871425313247
    H                0.629823094887538     1.446194559696037    -0.242128574686753
    H                1.473823094887537     1.532194559696038     1.312871425313247
    H                2.679823094887537     2.867194559696037    -0.421128574686753
    H                2.065603094887537     3.938164559696037     0.865121425313247
    H                1.281833094887537     3.845404559696037    -0.763418574686753
    C               -0.712176905112463    -1.314805440303962     0.017871425313247
    C               -1.671176905112463    -1.401805440303962    -1.161128574686753
    C               -0.357176905112463    -2.747805440303963     0.538871425313247
    H                0.194823094887537    -0.801805440303963    -0.299128574686753
    H               -1.174176905112463    -0.737805440303963     0.810871425313247
    H               -2.545176905112463    -1.980805440303962    -0.867128574686753
    H               -1.165176905112463    -1.910805440303962    -1.984128574686753
    H               -1.267176905112463    -3.307805440303963     0.757871425313247
    H                0.218823094887537    -3.298805440303963    -0.208128574686753
    H               -2.038566905112463    -0.443585440303963    -1.557158574686753
    H                0.240773094887537    -2.673245440303963     1.459141425313247

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-166ILE-187ARG-1-dimer.npy', np.array(charges))