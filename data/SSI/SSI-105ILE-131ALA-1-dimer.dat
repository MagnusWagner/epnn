import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.198784265496642     0.044253282130405    -0.407850058326188
    C                1.630784265496642     0.003253282130405    -1.870850058326188
    C                2.297784265496642     0.528253282130405     0.460149941673812
    H                0.329784265496642     0.693253282130404    -0.289850058326188
    H                0.938784265496642    -0.954746717869595    -0.056850058326188
    H                2.637784265496642    -0.410746717869595    -1.955850058326188
    H                2.541784265496642     1.561253282130404     0.230149941673812
    H                1.972784265496642     0.479253282130405     1.498149941673812
    H                3.187784265496641    -0.088746717869595     0.338149941673812
    H                0.920929265496642    -0.658302717869596    -2.388970058326188
    H                1.630075265496642     1.017078282130405    -2.297650058326188
    C               -2.355215734503358    -0.456746717869595     0.172149941673812
    C               -2.691215734503359    -0.106746717869595     1.611149941673812
    H               -2.233215734503358     0.445253282130405    -0.428850058326188
    H               -1.439215734503358    -1.045746717869595     0.142149941673812
    H               -3.161215734503358    -1.063746717869596    -0.239850058326188
    H               -2.810215734503358    -1.034746717869595     2.174149941673812
    H               -3.630306434503358     0.464971282130405     1.646459941673812
    H               -1.849057134503358     0.449666282130405     2.048379941673812

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-105ILE-131ALA-1-dimer.npy', np.array(charges))