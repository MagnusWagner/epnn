import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.219067717686172     0.840294720129572     0.353379074225420
    C                1.177067717686172     1.822294720129572    -0.820620925774580
    C                2.619067717686172     0.529294720129572     0.867379074225420
    H                0.580067717686172     1.184294720129572     1.168379074225420
    H                0.795067717686172    -0.102705279870428     0.006379074225420
    H                1.692067717686172     2.743294720129572    -0.544620925774580
    H                2.553067717686172    -0.368705279870428     1.481379074225420
    H                3.290067717686172     0.288294720129572     0.043379074225420
    H                0.118277717686172     2.037694720129572    -1.026918825774580
    H                1.683347717686172     1.379834720129572    -1.691198925774580
    H                3.032357717686172     1.344294720129572     1.479717074225420
    C               -1.834932282313828    -1.174705279870428    -0.060620925774580
    C               -3.094932282313828    -1.945705279870428    -0.323620925774580
    H               -1.979932282313828    -0.428705279870428     0.717379074225420
    H               -1.054932282313828    -1.863705279870428     0.262379074225420
    H               -1.506932282313828    -0.682705279870428    -0.974620925774580
    H               -2.886932282313829    -2.733705279870428    -1.042620925774580
    H               -3.884452282313828    -1.275985279870428    -0.695286525774580
    H               -3.447252282313828    -2.372515279870428     0.627012074225420

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-118GLU-176THR-1-dimer.npy', np.array(charges))