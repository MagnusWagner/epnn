import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.125711898154087     0.339651982033050     0.128617099139083
    C               -1.684711898154087     0.013651982033050     1.512617099139083
    C               -2.006711898154087     1.266651982033050    -0.707382900860916
    H               -0.164711898154087     0.831651982033050     0.260617099139083
    H               -0.961711898154087    -0.588348017966950    -0.424382900860917
    H               -2.671711898154087    -0.426348017966950     1.374617099139084
    H               -2.211711898154087     2.156651982033050    -0.124382900860917
    H               -1.764041898154087     0.924781982033050     2.123811099139083
    H               -1.071741898154087    -0.756008017966950     2.004444099139084
    H               -1.467531898154087     1.564181982033050    -1.618841900860917
    H               -2.961381898154087     0.786071982033050    -0.967484900860917
    C                2.144288101845913    -1.079348017966950    -1.135382900860916
    C                2.600288101845913    -0.514348017966950     0.209617099139083
    H                2.995288101845913    -1.480348017966950    -1.686382900860917
    H                1.428288101845913    -1.879348017966950    -0.954382900860916
    H                1.642288101845913    -0.317348017966950    -1.732382900860917
    H                1.744288101845913    -0.059348017966950     0.700617099139083
    H                3.374548101845913     0.257061982033050     0.085335099139083
    H                2.953798101845913    -1.325978017966950     0.862527099139083

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094LEU-132VAL-1-dimer.npy', np.array(charges))