import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.273259582293102    -2.064737666281942     1.129885602083527
    C                0.783259582293102    -0.676737666281942     1.507885602083527
    O                2.011259582293103    -0.426737666281942     1.512885602083527
    O               -0.100740417706898     0.177262333718058     1.783885602083527
    H               -0.509740417706898    -1.980737666281942     0.372885602083527
    H               -0.185740417706898    -2.504737666281942     2.017885602083527
    H                1.050259582293102    -2.758697666281941     0.776765602083527
    C               -0.822740417706898     0.538262333718058    -1.701114397916473
    C                0.155259582293102     1.518262333718058    -2.308114397916473
    C               -2.290740417706898     0.919262333718058    -1.936114397916473
    H               -0.634740417706898    -0.449737666281942    -2.119114397916473
    H               -0.646740417706898     0.497262333718058    -0.631114397916473
    H               -0.080740417706898     2.517262333718059    -1.941114397916473
    H                0.051259582293102     1.507262333718058    -3.393114397916473
    H               -2.504740417706897     1.839262333718058    -1.380114397916473
    H               -2.446740417706898     1.116262333718058    -3.003114397916473
    H                1.192659582293102     1.269712333718058    -2.039734397916473
    H               -2.963080417706898     0.116332333718058    -1.599574397916473

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-221GLU-226LYS-1-dimer.npy', np.array(charges))