import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.706961542615126     1.030287298525998    -0.402705069032920
    C                2.625961542615126     2.024287298525998     0.263294930967080
    C                2.010961542615126    -0.235712701474002     0.366294930967080
    H                1.934961542615126     0.921287298525998    -1.463705069032920
    H                0.680961542615126     1.351287298525998    -0.264705069032920
    H                3.649961542615126     1.900287298525998    -0.092705069032920
    H                2.261961542615126     3.033287298525999     0.068294930967080
    H                2.974961542615126    -0.632712701474002     0.040294930967080
    H                1.236961542615126    -0.989712701474002     0.237294930967080
    H                2.553991542615126     1.742397298525998     1.324123930967080
    H                2.071451542615126     0.117867298525998     1.406159930967080
    C               -1.941038457384874    -1.147712701474002    -1.386705069032920
    C               -1.563038457384874    -0.674712701474002     0.008294930967080
    O               -1.300038457384874    -1.533712701474002     0.881294930967080
    O               -1.539038457384874     0.554287298525998     0.230294930967080
    H               -1.427038457384874    -0.537712701474002    -2.130705069032920
    H               -3.006038457384874    -1.021712701474002    -1.500705069032920
    H               -1.687028457384874    -2.204769701474001    -1.554366069032920

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-133PRO-151ASP-1-dimer.npy', np.array(charges))