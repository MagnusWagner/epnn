import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.750808124802738     0.425760775411721     1.452622084441672
    C                2.183808124802738     0.164760775411721     0.962622084441672
    C               -0.028191875197262    -0.838239224588279     1.808622084441672
    H                0.759808124802738     1.093760775411721     2.309622084441672
    H                0.199808124802738     0.927760775411721     0.658622084441672
    H                2.120808124802738    -0.450239224588279     0.062622084441672
    H                0.328808124802738    -1.252239224588279     2.751622084441672
    H               -1.083191875197262    -0.587239224588279     1.921622084441672
    H                0.081808124802738    -1.583239224588279     1.019622084441672
    H                2.687567124802738     1.110200775411721     0.712882084441672
    H                2.768631124802738    -0.383511224588279     1.715872084441672
    C               -0.763191875197262    -0.247239224588279    -2.036377915558328
    C               -2.082191875197262     0.527760775411721    -2.088377915558328
    H                0.079808124802738     0.416760775411721    -2.217377915558328
    H               -0.651191875197262    -0.711239224588279    -1.059377915558328
    H               -0.773191875197262    -1.031239224588279    -2.793377915558328
    H               -2.868191875197262    -0.175239224588279    -1.811377915558328
    H               -2.291564875197262     0.894696775411721    -3.104017915558329
    H               -2.086514875197262     1.340415775411721    -1.347047915558328

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016ILE-021VAL-1-dimer.npy', np.array(charges))