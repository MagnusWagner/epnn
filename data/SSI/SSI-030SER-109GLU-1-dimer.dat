import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.588033096907723     0.636997141594616     0.501507373594088
    O               -1.840033096907723    -0.391002858405384     1.128507373594088
    H               -0.882033096907723    -0.191002858405384     1.021507373594087
    H               -2.417033096907723     0.593997141594616    -0.573492626405912
    H               -2.261033096907723     1.609997141594616     0.870507373594087
    H               -3.660313096907723     0.504037141594616     0.707767373594088
    C                0.489966903092277    -0.924002858405384    -1.381492626405912
    C                1.229966903092277    -0.022002858405384    -0.388492626405912
    O                0.813966903092277     0.023997141594616     0.792507373594088
    O                2.206966903092277     0.653997141594616    -0.789492626405912
    H               -0.442033096907723    -0.425002858405384    -1.654492626405912
    H                0.206966903092277    -1.868002858405384    -0.914492626405912
    H                1.050036903092277    -1.099472858405384    -2.311832626405912

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030SER-109GLU-1-dimer.npy', np.array(charges))