import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.392117220261996     0.936346727975775     0.404993559998438
    C               -1.666117220261996     0.964346727975775     1.902993559998438
    H               -1.406117220261996    -0.086653272024225     0.031993559998438
    H               -2.164117220261996     1.498346727975775    -0.120006440001562
    H               -0.423117220261996     1.389346727975775     0.194993559998438
    H               -2.641117220261997     0.510346727975775     2.083993559998438
    H               -1.713117220261996     2.011346727975775     2.193993559998438
    H               -0.910743320261996     0.442656727975775     2.509007559998437
    C                1.931882779738004    -0.643653272024225    -0.581006440001562
    C                1.133882779738004    -1.264653272024225    -1.727006440001562
    H                2.997882779738004    -0.773653272024225    -0.758006440001562
    H                1.702882779738004     0.421346727975775    -0.508006440001562
    H                1.679882779738004    -1.101653272024225     0.372993559998438
    H                0.076882779738004    -1.202653272024225    -1.478006440001562
    H                1.410225779738004    -2.320042272024225    -1.867677440001562
    H                1.300900779738004    -0.698087272024225    -2.654965440001562

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-066ILE-146VAL-1-dimer.npy', np.array(charges))