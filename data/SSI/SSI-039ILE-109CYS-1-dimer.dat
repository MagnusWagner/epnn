import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.202397293279932     2.036178444798701     0.041680098914396
    C                0.871602706720068     3.118178444798702     0.048680098914396
    H               -0.125397293279932     1.456178444798702    -0.876319901085604
    H               -0.145397293279932     1.397178444798701     0.918680098914396
    H               -1.186397293279932     2.498178444798702     0.075680098914396
    H                0.685602706720068     3.800178444798702     0.881680098914396
    H                0.855242706720068     3.684270354798702    -0.894329901085604
    H                1.844932706720068     2.627214444798701     0.195610098914396
    C               -0.572397293279932    -2.558821555201298     0.617680098914396
    S               -0.029397293279932    -1.137821555201298    -0.302319901085604
    H               -0.047397293279932    -1.695821555201298    -1.520319901085604
    H                0.107602706720068    -3.391821555201298     0.443680098914396
    H               -1.559397293279932    -2.842821555201298     0.242680098914396
    H               -0.649477293279932    -2.341269555201298     1.693190098914396

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-039ILE-109CYS-1-dimer.npy', np.array(charges))