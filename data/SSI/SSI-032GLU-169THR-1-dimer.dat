import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.603740669023630     0.227398477218583    -1.160427212407951
    C                1.606740669023630     0.559398477218583    -2.241427212407951
    C                1.058740669023630     0.483398477218583     0.258572787592049
    O                2.246740669023629     0.771398477218583     0.504572787592049
    O                0.202740669023630     0.362398477218583     1.161572787592049
    H               -0.330259330976370     0.760398477218583    -1.350427212407951
    H                0.381740669023630    -0.838601522781417    -1.254427212407951
    H                1.221740669023630     0.170398477218583    -3.184427212407951
    H                2.539740669023630     0.033398477218583    -2.036427212407951
    H                1.810020669023630     1.632928477218583    -2.368747212407951
    C               -2.344259330976371    -1.705601522781417     0.408572787592049
    C               -3.251259330976370    -0.632601522781417     1.006572787592049
    H               -1.766259330976370    -1.301601522781417    -0.420427212407951
    H               -1.660259330976370    -2.071601522781417     1.174572787592049
    H               -2.949259330976371    -2.539601522781417     0.051572787592049
    H               -3.769259330976370    -1.075601522781417     1.856572787592049
    H               -4.001983330976371    -0.261901522781417     0.293132787592049
    H               -2.652193330976370     0.214188477218583     1.372712787592049

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032GLU-169THR-1-dimer.npy', np.array(charges))