import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.412698490059170    -1.423918273539418    -0.610496554271343
    C                2.422698490059169    -0.875918273539418    -1.594496554271343
    H                1.757698490059170    -2.344918273539418    -0.157496554271343
    H                1.331698490059170    -0.726918273539418     0.207503445728657
    H                0.448698490059170    -1.571918273539418    -1.097496554271343
    H                3.364698490059170    -0.707918273539418    -1.068496554271343
    H                2.060698490059170     0.086081726460582    -1.957496554271343
    H                2.596298490059170    -1.546656273539418    -2.448880554271343
    C               -1.346301509940830     0.212081726460582     0.961503445728657
    C               -2.487301509940830     0.952081726460582     0.226503445728657
    C               -0.098301509940830     1.140081726460582     1.080503445728657
    H               -1.685301509940830    -0.074918273539418     1.955503445728657
    H               -1.077301509940830    -0.685918273539418     0.409503445728657
    H               -2.075301509940830     1.511081726460582    -0.615496554271343
    H               -2.949301509940830     1.661081726460582     0.916503445728657
    H                0.658698490059170     0.677081726460582     1.717503445728657
    H                0.332698490059170     1.266081726460582     0.084503445728657
    H               -3.255551509940831     0.264092726460582    -0.156190554271343
    H               -0.359331509940830     2.141171726460582     1.454244445728657

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-041ILE-058ARG-1-dimer.npy', np.array(charges))