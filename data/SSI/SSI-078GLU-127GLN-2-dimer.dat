import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.123892815705566     2.995085420577493    -0.203177342597148
    C                1.182892815705566     2.019085420577493     0.300822657402852
    O                0.879892815705566     0.812085420577493     0.415822657402852
    O                2.320892815705565     2.451085420577493     0.575822657402852
    H               -0.081107184294434     2.797085420577493    -1.258177342597148
    H                0.478892815705566     4.026085420577493    -0.117177342597148
    H               -0.810787184294434     2.899735420577493     0.368902657402852
    C               -2.232107184294435    -1.199914579422507     0.102822657402852
    C               -1.111107184294434    -2.143914579422507    -0.289177342597148
    O               -1.313107184294434    -3.350914579422507    -0.401177342597148
    N                0.079892815705566    -1.614914579422507    -0.500177342597148
    H                0.830892815705566    -2.224914579422507    -0.765177342597148
    H                0.259892815705566    -0.641914579422507    -0.232177342597148
    H               -1.828107184294434    -0.211914579422507     0.287822657402852
    H               -2.669107184294435    -1.566914579422507     1.030822657402852
    H               -3.002047184294435    -1.134974579422507    -0.680107342597148

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-078GLU-127GLN-2-dimer.npy', np.array(charges))