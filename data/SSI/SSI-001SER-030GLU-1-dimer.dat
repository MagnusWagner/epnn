import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.079758702627671     1.783529728033247    -1.861891766089139
    C                0.726758702627671     3.220529728033247    -1.458891766089140
    O                2.359758702627671     1.748529728033247    -2.449891766089140
    H                1.066758702627671     1.132529728033247    -0.987891766089140
    H                0.344758702627671     1.415529728033247    -2.578891766089140
    H               -0.314241297372329     3.226529728033248    -1.125891766089139
    H                2.549758702627671     0.852529728033247    -2.750891766089140
    H                0.813648702627671     3.912709728033247    -2.309381766089140
    H                1.343828702627671     3.535199728033247    -0.604371766089140
    C               -0.275241297372329    -0.676470271966753     0.765108233910860
    C                1.075758702627671    -1.184470271966753     1.256108233910860
    C               -1.442241297372329    -1.505470271966753     1.231108233910860
    O               -1.330241297372329    -2.174470271966753     2.280108233910860
    O               -2.496241297372329    -1.430470271966753     0.561108233910860
    H               -0.403241297372329     0.339529728033247     1.143108233910860
    H               -0.271241297372329    -0.609470271966753    -0.323891766089140
    H                1.085758702627671    -1.232470271966753     2.345108233910860
    H                1.822758702627671    -0.449470271966753     0.956108233910860
    H                1.370428702627671    -2.159762271966752     0.841408233910860

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-001SER-030GLU-1-dimer.npy', np.array(charges))