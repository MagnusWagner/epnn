import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.958898421782734    -1.758703184528186     2.195626686081821
    C               -2.026898421782734    -2.843703184528187     2.271626686081821
    H               -1.408898421782735    -0.764703184528186     2.210626686081820
    H               -0.261898421782734    -1.851703184528186     3.028626686081820
    H               -0.398898421782734    -1.931703184528186     1.286626686081821
    H               -1.590898421782734    -3.785703184528187     1.959626686081821
    H               -2.883252421782734    -2.619843184528186     1.618523686081821
    H               -2.350469421782734    -2.973133184528187     3.314962686081820
    C                0.867101578217266     0.328296815471814    -0.074373313918179
    C                1.699101578217266    -0.705703184528186    -0.834373313918179
    C                0.312101578217266     1.413296815471814    -0.977373313918179
    O                0.731101578217266     1.499296815471814    -2.153373313918180
    O               -0.546898421782734     2.191296815471814    -0.506373313918179
    H                0.021101578217266    -0.144703184528186     0.396626686081821
    H                1.484101578217266     0.786296815471814     0.700626686081821
    H                2.595101578217266    -0.210703184528186    -1.214373313918179
    H                1.127471578217266    -1.113903184528186    -1.680901313918179
    H                2.022991578217266    -1.496703184528187    -0.141976313918179

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-091VAL-094ASP-1-dimer.npy', np.array(charges))