import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.508917321371181     1.804852804212871    -1.777006497652101
    C                0.843917321371181     1.034852804212871    -0.465006497652102
    O                1.104917321371181    -0.190147195787129    -0.469006497652102
    O                0.711917321371181     1.658852804212871     0.619993502347899
    H                0.891917321371181     2.824852804212871    -1.698006497652102
    H               -0.579082678628819     1.874852804212871    -1.851006497652102
    H                0.878127321371181     1.375692804212872    -2.720136497652101
    C               -2.076082678628819    -2.175147195787128     0.521993502347899
    N               -0.899082678628819    -1.813147195787129     1.349993502347898
    H               -0.998082678628819    -0.891147195787129     1.758993502347898
    H               -0.767082678628819    -2.470147195787129     2.110993502347899
    H               -0.043082678628819    -1.798147195787129     0.801993502347898
    H               -2.999082678628819    -2.141147195787128     1.106993502347899
    H               -1.961082678628819    -3.222147195787128     0.217993502347898
    H               -2.153272678628819    -1.582367195787129    -0.401396497652102

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007GLU-033LYS-2-dimer.npy', np.array(charges))