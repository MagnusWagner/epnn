import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.514469994475726    -1.146130568480196     1.443164835436292
    C               -0.866469994475726     0.172869431519804     1.733164835436292
    C                0.435530005524274     1.918869431519804     1.430164835436292
    C               -1.082469994475726     1.039869431519804     2.759164835436292
    N                0.076530005524274     0.753869431519804     0.907164835436292
    N               -0.254469994475726     2.119869431519804     2.552164835436292
    H                1.143530005524274     2.607869431519804     0.989164835436293
    H               -1.724469994475726    -1.198130568480196     0.375164835436292
    H               -2.460469994475726    -1.190130568480196     1.978164835436292
    H               -0.220469994475726     2.952869431519804     3.130164835436293
    H               -1.785469994475726     0.900869431519804     3.569164835436292
    H               -0.912681994475726    -2.016741568480196     1.742977835436292
    C                1.249530005524274    -0.037130568480196    -3.329835164563707
    C                0.717530005524274    -1.175130568480196    -2.470835164563708
    O                0.552530005524274    -0.979130568480196    -1.259835164563708
    O                0.509530005524274    -2.290130568480195    -3.012835164563707
    H                0.705530005524274     0.006869431519804    -4.275835164563707
    H                2.293530005524274    -0.258130568480196    -3.561835164563707
    H                1.208671005524274     0.944910431519804    -2.835947164563708

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-091HIE-122ASP-1-dimer.npy', np.array(charges))