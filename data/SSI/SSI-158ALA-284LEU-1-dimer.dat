import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.012029983845737     0.469213741725933    -1.168853084858398
    C               -2.062029983845737    -0.517786258274067    -2.342853084858398
    H               -2.238029983844736    -0.032786258274067    -0.227853084858398
    H               -1.025029983845736     0.926213741725933    -1.125853084858398
    H               -2.740029983845736     1.261213741725933    -1.343853084858398
    H               -1.777029983845737     0.012213741725933    -3.253853084858398
    H               -3.077899983845736    -0.925346258274067    -2.451940084858398
    H               -1.347359983845737    -1.335076258274067    -2.166004084858398
    C                1.021970016154264     0.010213741725933     0.778146915141602
    C                2.182970016154263     1.019213741725933     0.885146915141602
    C                0.939970016154263    -0.983786258274067     1.909146915141602
    H                0.101970016154263     0.592213741725933     0.770146915141602
    H                1.091970016155263    -0.520786258274067    -0.172853084858398
    H                3.120970016155264     0.467213741725933     0.956146915141602
    H                1.089970016154263    -0.493786258274067     2.869146915141602
    H                2.066080016155264     1.632143741725933     1.791048915141602
    H                2.250430016154263     1.624923741725933    -0.030588084858398
    H               -0.070659983845737    -1.417856258274067     1.894531915141602
    H                1.711050016154263    -1.755596258274067     1.768619915141602

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-158ALA-284LEU-1-dimer.npy', np.array(charges))