import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.260266090228812    -1.458028348809300     1.501665107728496
    C                0.656266090228812    -1.870028348809301     2.910665107728496
    H                1.150266090228812    -1.397028348809300     0.875665107728496
    H               -0.411733909771188    -2.205028348809301     1.074665107728496
    H               -0.245733909771188    -0.494028348809300     1.528665107728496
    H                1.179266090228812    -2.819028348809300     2.826665107728496
    H                1.321336090228812    -1.119858348809301     3.363344107728496
    H               -0.241097909771188    -2.022468348809300     3.528322107728497
    C               -0.386733909771188     0.579971651190699    -1.540334892271504
    C               -1.492733909771188     1.586971651190699    -1.872334892271504
    C                0.939266090228812     1.209971651190699    -1.112334892271504
    H               -0.749733909771188    -0.023028348809300    -0.708334892271504
    H               -0.230733909771188    -0.103028348809300    -2.372334892271504
    H               -1.660733909771188     2.231971651190700    -1.006334892271504
    H                0.737266090228812     2.076971651190699    -0.488334892271504
    H                1.476266090228812     0.487971651190700    -0.499334892271504
    H               -2.426587909771188     1.060741651190700    -2.119310892271504
    H               -1.200831909771188     2.238691651190699    -2.709024892271504
    H                1.584616090228812     1.505401651190700    -1.952720892271504

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012LEU-039ARG-1-dimer.npy', np.array(charges))