import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.280060062780165    -0.003947713262493     2.029106792462149
    C                2.771060062780164     0.288052286737507     2.187106792462149
    H                1.119060062780165    -0.810947713262493     1.317106792462149
    H                0.855060062780165    -0.296947713262493     2.983106792462149
    H                0.762060062780165     0.889052286737507     1.693106792462149
    H                3.275060062780164    -0.623947713262493     2.497106792462148
    H                2.852060062780164     1.007052286737507     3.001106792462148
    H                3.241820062780165     0.676322286737507     1.271886792462149
    C               -1.127939937219835    -0.377947713262493    -0.923893207537851
    C               -1.563939937219835    -1.050947713262493    -2.240893207537851
    C               -1.430939937219835     1.115052286737507    -1.109893207537851
    H               -0.058939937219835    -0.543947713262493    -0.787893207537851
    H               -1.674939937219835    -0.789947713262493    -0.073893207537851
    H               -0.985939937219835    -1.951947713262493    -2.444893207537851
    H               -2.628939937219835    -1.281947713262493    -2.204893207537852
    H               -2.346939937219835     1.378052286737507    -0.576893207537851
    H               -1.377964937219835    -0.271307713262493    -2.994273207537852
    H               -1.585229937219836     1.222902286737507    -2.193663207537851
    H               -0.592509937219835     1.751652286737507    -0.790873207537851

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037ILE-162PRO-1-dimer.npy', np.array(charges))