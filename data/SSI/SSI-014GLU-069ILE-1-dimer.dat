import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.214646560866161     2.254614873352324     0.173902903532590
    C                0.777353439133839     1.181614873352324    -0.157097096467410
    O                0.807353439133839     0.761614873352324    -1.338097096467410
    O                1.392353439133839     0.684614873352324     0.791902903532590
    H               -1.035646560866161     1.815614873352324     0.748902903532590
    H               -0.658646560866161     2.591614873352325    -0.764097096467410
    H                0.195853439133839     3.091408873352324     0.758082903532590
    C               -1.082646560866161    -1.930385126647676     0.813902903532590
    C               -1.610646560866161    -2.856385126647676    -0.297097096467410
    H               -1.220646560866161    -0.887385126647676     0.530902903532590
    H               -1.590646560866161    -2.121385126647676     1.755902903532590
    H               -0.023646560866161    -2.105385126647676     0.994902903532590
    H               -1.543646560866161    -3.887385126647676     0.020902903532590
    H               -1.006286560866161    -2.760318126647676    -1.211167096467410
    H               -2.659106560866161    -2.608841126647676    -0.519457096467410

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-014GLU-069ILE-1-dimer.npy', np.array(charges))