import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.506664051758297     2.254946784449383     1.604430768026164
    O                1.214664051758298     0.957946784449383     1.115430768026164
    H                0.257664051758297     0.851946784449383     1.047430768026164
    H                1.019664051758297     2.392946784449383     2.570430768026164
    H                1.118664051758298     2.999946784449383     0.917430768026164
    H                2.593344051758298     2.379811784449383     1.720733768026164
    C               -0.010335948241703    -0.376053215550617    -1.849569231973836
    C               -0.775335948241703    -0.920053215550617    -0.675569231973836
    O               -0.160335948241703    -1.653053215550617     0.160430768026164
    O               -1.951335948241703    -0.524053215550617    -0.580569231973836
    H                0.938664051758297    -0.900053215550617    -1.809569231973836
    H                0.193664051758297     0.681946784449383    -1.674569231973836
    H               -0.470228948241703    -0.474345215550617    -2.843972231973836

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028SER-056GLU-1-dimer.npy', np.array(charges))