import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.776040228413444     1.347003743930088     0.055935177828087
    O                1.414040228413444    -0.034996256069912     0.107935177828087
    H                1.920040228413444    -0.446996256069912     0.823935177828087
    H                2.855040228413444     1.433003743930088     0.183935177828087
    H                1.495050228413444     1.769563743930088    -0.920020822171913
    H                1.279830228413444     1.889243743930088     0.874322177828087
    C               -2.043959771586556    -0.886996256069912    -0.636064822171913
    O               -1.243959771586556    -0.390996256069912     0.429935177828087
    H               -0.322959771586556    -0.311996256069912     0.120935177828087
    H               -2.934959771586556    -1.356996256069912    -0.231064822171913
    H               -2.331489771586556    -0.049556256069912    -1.288764822171913
    H               -1.469779771586556    -1.642686256069912    -1.192165822171913

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-079THR-110THR-1-dimer.npy', np.array(charges))