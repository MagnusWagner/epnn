import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.334492040393771     1.575521780201159     0.182168467990351
    C                1.138492040393771     1.068521780201160     1.600168467990351
    H                1.244492040393771     2.661521780201160     0.159168467990351
    H                2.331492040393771     1.297521780201159    -0.157831532009649
    H                0.608492040393771     1.153521780201159    -0.504831532009649
    H                1.336492040393771    -0.004478219798841     1.600168467990351
    H                0.101458740393771     1.237971780201159     1.925508467990351
    H                1.868198040393771     1.545861780201159     2.270748467990351
    C               -1.419507959606229    -1.739478219798841    -1.291831532009649
    O               -0.900507959606229    -0.734478219798841    -0.443831532009649
    H               -1.070507959606229    -1.009478219798841     0.467168467990351
    H               -1.015507959606229    -2.700478219798841    -1.009831532009649
    H               -1.139507959606229    -1.524478219798840    -2.322831532009649
    H               -2.516945959606229    -1.771288219798840    -1.223871532009649

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-253ALA-302SER-1-dimer.npy', np.array(charges))