import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.491713968335030     0.824786440861955     2.861860825421286
    O                1.496713968335030    -0.124213559138045     1.797860825421286
    H                2.409713968335030    -0.199213559138045     1.460860825421286
    H                2.477713968335030     0.840786440861955     3.330860825421286
    H                1.261123968335030     1.830426440861955     2.480387825421286
    H                0.754973968335030     0.521426440861955     3.620269825421286
    C               -1.733286031664970    -0.601213559138046    -2.322139174578713
    C               -0.781286031664970    -0.119213559138045    -1.234139174578714
    O               -0.319286031664970     1.023786440861955    -1.242139174578714
    N               -0.483286031664970    -0.987213559138046    -0.280139174578714
    H                0.149713968335030    -0.687213559138045     0.457860825421287
    H               -0.892286031664970    -1.909213559138046    -0.272139174578713
    H               -2.753286031664970    -0.472213559138045    -1.962139174578714
    H               -1.576286031664970    -1.665213559138046    -2.500139174578713
    H               -1.624076031664970    -0.062343559138045    -3.274866174578714

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015THR-061GLN-1-dimer.npy', np.array(charges))