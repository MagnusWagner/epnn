import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                2.568703370141880    -1.046636171089872     2.033668457908601
    O                1.889703370141880     0.013363828910128     1.380668457908601
    H                1.896703370141880     0.758363828910128     2.015668457908601
    H                2.430703370141880    -1.970636171089872     1.471668457908601
    H                2.140703370141880    -1.181636171089872     3.027668457908602
    H                3.643033370141880    -0.830906171089872     2.130028457908602
    C                0.240703370141880     0.089363828910128    -2.323331542091399
    C               -1.248296629858120     0.240363828910128    -0.352331542091399
    N               -0.037296629858120     0.226363828910128    -0.887331542091399
    N               -2.316296629858120     0.113363828910128    -1.115331542091399
    N               -1.394296629858120     0.374363828910128     0.950668457908601
    H                0.757703370141880     0.300363828910128    -0.260331542091399
    H                1.174703370141880     0.606363828910128    -2.550331542091399
    H               -0.533296629858120     0.577363828910128    -2.918331542091399
    H               -2.209296629858120     0.018363828910128    -2.111331542091399
    H               -3.239296629858120     0.185363828910128    -0.718331542091399
    H               -0.584296629858120     0.486363828910128     1.539668457908601
    H               -2.315296629858120     0.413363828910128     1.360668457908601
    H                0.333593370141880    -0.960556171089872    -2.638021542091399

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044SER-093ARG-1-dimer.npy', np.array(charges))