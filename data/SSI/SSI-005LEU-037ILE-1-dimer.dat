import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.579626763182860    -1.187494108379100     0.884932707302560
    C                2.642626763182860    -1.999494108379100     1.632932707302559
    H                1.955626763182860    -0.820494108379100    -0.070067292697440
    H                0.732626763182860    -1.835494108379100     0.668932707302560
    H                1.230626763182860    -0.355494108379100     1.501932707302559
    H                3.123626763182860    -2.680494108379100     0.943932707302560
    H                3.410226763182860    -1.347477108379100     2.075262707302560
    H                2.196676763182860    -2.580022108379100     2.453972707302560
    C               -1.154373236817140     1.000505891620900    -0.368067292697440
    C               -0.492373236817140     1.546505891620900    -1.655067292697441
    C               -2.645373236817139     0.708505891620900    -0.526067292697440
    H               -0.650373236817140     0.088505891620900    -0.058067292697440
    H               -1.073373236817140     1.719505891620900     0.445932707302560
    H               -1.131373236817140     2.338505891620900    -2.044067292697441
    H               -2.806373236817139    -0.098494108379100    -1.238067292697440
    H               -3.070373236817140     0.415505891620900     0.427932707302560
    H               -3.163373236817140     1.601505891620900    -0.862067292697440
    H                0.497796763182860     1.982065891620900    -1.455467292697440
    H               -0.420083236817140     0.756405891620900    -2.416977292697441

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005LEU-037ILE-1-dimer.npy', np.array(charges))