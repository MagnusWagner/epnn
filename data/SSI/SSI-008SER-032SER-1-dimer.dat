import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.750649858772116     1.377768336678910     1.735816777142722
    O               -0.042649858772116     1.175768336678910     0.521816777142722
    H               -0.433649858772116     1.766768336678910    -0.140183222857278
    H               -1.797649858772116     1.096768336678910     1.616816777142722
    H               -0.698649858772116     2.435768336678910     2.001816777142722
    H               -0.280319858772116     0.789138336678910     2.537252777142722
    C                1.025350141227884    -1.486231663321090    -1.416183222857278
    O               -0.210649858772116    -1.161231663321090    -0.823183222857278
    H               -0.097649858772116    -0.329231663321090    -0.331183222857278
    H                1.803350141227884    -0.858231663321090    -0.981183222857278
    H                0.978350141227884    -1.298231663321090    -2.491183222857278
    H                1.275460141227884    -2.542001663321090    -1.235071222857278

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008SER-032SER-1-dimer.npy', np.array(charges))