import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.735966525996387     1.334079329978281    -1.678702307892330
    C               -1.306966525996387     2.756079329978280    -1.714702307892330
    H                0.333033474003613     1.348079329978281    -1.897702307892330
    H               -0.900966525996387     0.898079329978281    -0.694702307892329
    H               -1.243966525996387     0.685079329978281    -2.392702307892329
    H               -2.371966525996387     2.697079329978281    -1.484702307892330
    H               -1.186836525996387     3.206019329978281    -2.711252307892330
    H               -0.818916525996387     3.390829329978281    -0.960442307892329
    C                0.477033474003613    -0.805920670021719     1.162297692107670
    C                1.554033474003613    -1.386920670021719     2.033297692107670
    C                0.044033474003613    -1.940920670021719     0.278297692107671
    H                0.906033474003613    -0.014920670021719     0.546297692107671
    H               -0.356966525996387    -0.417920670021719     1.741297692107670
    H                2.225033474003613    -0.593920670021719     2.334297692107671
    H                1.146033474003613    -1.872920670021719     2.908297692107670
    H               -0.348966525996387    -1.574920670021719    -0.670702307892330
    H               -0.723966525996387    -2.518920670021719     0.790297692107670
    H                2.018633474003613    -2.149007670021719     1.390357692107670
    H                0.940773474003613    -2.563456670021719     0.142997692107671

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-135ILE-180PRO-1-dimer.npy', np.array(charges))