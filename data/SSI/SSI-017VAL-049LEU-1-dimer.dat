import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.175034122534130    -0.559485249498083    -2.129647878396339
    C                0.194965877465870    -1.223485249498083    -3.436647878396339
    H               -0.181034122534130     0.523514750501917    -2.223647878396338
    H               -1.171034122534130    -0.884485249498083    -1.827647878396339
    H                0.528965877465870    -0.847485249498083    -1.351647878396339
    H               -0.597034122534130    -1.016485249498083    -4.157647878396339
    H                1.148045877465870    -0.853395249498083    -3.842455878396339
    H                0.254155877465870    -2.315175249498084    -3.315348878396339
    C               -0.186034122534130     0.861514750501917     1.459352121603661
    C                1.300965877465870     0.855514750501917     1.803352121603661
    C               -1.136034122534130     0.119514750501917     2.404352121603661
    H               -0.497034122534130     1.905514750501917     1.409352121603661
    H               -0.311034122534130     0.457514750501917     0.456352121603661
    H                1.843965877465870     1.302514750501917     0.972352121603661
    H               -0.628034122534130    -0.047485249498083     3.347352121603661
    H                1.661685877465870    -0.172095249498083     1.957952121603661
    H                1.456975877465870     1.460844750501916     2.708472121603661
    H               -2.033728122534130     0.714854750501917     2.627332121603661
    H               -1.460924122534130    -0.866045249498083     2.039492121603661

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017VAL-049LEU-1-dimer.npy', np.array(charges))