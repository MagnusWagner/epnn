import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.291419744992863    -0.181026542886088    -3.386263459153121
    C                0.752419744992863    -0.995026542886088    -2.170263459153121
    O                0.333419744992863    -0.675026542886088    -1.042263459153121
    O                1.562419744992863    -1.938026542886088    -2.355263459153121
    H                0.283419744992863    -0.817026542886088    -4.271263459153122
    H                1.028419744992863     0.605973457113912    -3.559263459153121
    H               -0.692550255007137     0.300773457113912    -3.287936459153121
    C               -1.729580255007137     1.429973457113912     3.204736540846879
    C               -0.666580255007137     0.933973457113912     2.228736540846878
    O                0.290419744992863     0.283973457113912     2.681736540846879
    N               -0.821580255007137     1.143973457113912     0.913736540846879
    H               -0.241580255007137     0.594973457113912     0.275736540846879
    H               -1.618580255007137     1.644973457113912     0.542736540846879
    H               -1.235580255007137     2.016973457113912     3.975736540846879
    H               -2.160580255007137     0.548973457113912     3.682736540846879
    H               -2.543310255007137     2.029753457113912     2.771035340846879

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-054GLU-141GLN-1-dimer.npy', np.array(charges))