import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.100812177485841    -0.650324794419634    -3.007481802992365
    N                0.336812177485841     0.436675205580366    -2.287481802992364
    H                0.360812177485841     0.323675205580366    -1.271481802992365
    H                0.746812177485841     1.343675205580366    -2.476481802992364
    H               -0.630187822514159     0.476675205580366    -2.583481802992365
    H                2.119812177485842    -0.724324794419633    -2.615481802992365
    H                1.140812177485841    -0.465324794419634    -4.086481802992365
    H                0.544092177485841    -1.577944794419634    -2.808497802992365
    C               -1.830187822514159    -0.216324794419634     1.421518197007636
    C               -0.294187822514159     0.061675205580366     1.435518197007635
    O                0.204812177485841     0.610675205580366     0.421518197007635
    O                0.415812177485841    -0.299324794419634     2.426518197007635
    H               -2.099187822514159    -0.732324794419633     0.499518197007635
    H               -2.351187822514159     0.742675205580366     1.435518197007635
    H               -2.173927822514159    -0.810764794419633     2.280867197007635

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015LYS-220ASP-1-dimer.npy', np.array(charges))