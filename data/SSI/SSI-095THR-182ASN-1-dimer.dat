import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.008667766544908     0.859112448137364     2.562719601690540
    O                1.852667766544908     1.429112448137364     1.267719601690540
    H                2.623667766544908     1.180112448137364     0.743719601690540
    H                2.843667766544908     1.352112448137364     3.062719601690540
    H                1.089107766544908     1.000802448137364     3.149519601690540
    H                2.236607766544908    -0.212057551862636     2.459569601690540
    C               -2.272332233455092     0.083112448137364    -0.674280398309460
    C               -0.989332233455092    -0.632887551862636    -1.010280398309460
    O                0.043667766544908    -0.363887551862636    -0.403280398309460
    N               -1.027332233455092    -1.533887551862636    -1.971280398309460
    H               -3.047332233455092     0.217112448137364    -1.391280398309460
    H               -1.942332233455092     1.123112448137364    -0.670280398309460
    H               -0.179332233455092    -2.026887551862635    -2.203280398309460
    H               -1.930332233455092    -1.842887551862636    -2.302280398309460
    H               -2.596612233455092    -0.068167551862636     0.365889601690540

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-095THR-182ASN-1-dimer.npy', np.array(charges))