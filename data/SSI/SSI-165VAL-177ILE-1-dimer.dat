import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.134422537375954    -0.446274218172945     1.087219028749195
    C                3.134422537375954     0.588725781827055     1.576219028749195
    H                2.000422537375954    -1.235274218172945     1.828219028749195
    H                1.169422537375954     0.034725781827055     0.926219028749195
    H                2.477422537375954    -0.883274218172945     0.149219028749195
    H                2.741422537375954     1.040725781827055     2.486219028749195
    H                4.111772537375954     0.132625781827055     1.792454028749195
    H                3.236952537375954     1.373555781827055     0.812327028749195
    C               -1.271577462624046    -0.130274218172945    -0.709780971250805
    C               -1.824577462624046    -0.853274218172945    -1.947780971250805
    C               -2.258577462624046     0.825725781827055    -0.056780971250805
    H               -0.963577462624046    -0.870274218172945     0.031219028749195
    H               -0.388577462624046     0.441725781827055    -0.982780971250805
    H               -2.200577462624046    -0.107274218172945    -2.646780971250805
    H               -3.033577462624046     0.274725781827055     0.475219028749195
    H               -1.730577462624046     1.458725781827055     0.655219028749195
    H               -2.717577462624046     1.460725781827055    -0.813780971250805
    H               -1.017747462624046    -1.425604218172945    -2.428884971250805
    H               -2.662557462624046    -1.512814218172945    -1.677970971250805

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-165VAL-177ILE-1-dimer.npy', np.array(charges))