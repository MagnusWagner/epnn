import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.175838919609356    -0.826544955022455     1.832845961246732
    C                1.030838919609356    -0.202544955022455     3.251845961246732
    H                2.159838919609356    -1.284544955022455     1.725845961246732
    H                0.402838919609356    -1.579544955022455     1.677845961246732
    H                1.058838919609356    -0.043544955022455     1.083845961246732
    H                0.043838919609356     0.242455044977545     3.316845961246733
    H                1.781268919609356     0.586330044977545     3.408485961246733
    H                1.115738919609356    -0.956527955022455     4.048275961246732
    C               -0.821161080390644     0.113455044977545    -1.107154038753268
    C               -1.880161080390644     0.326455044977545    -2.182154038753268
    C                0.441838919609356     0.593455044977545    -1.855154038753268
    H               -0.736161080390644    -0.947544955022455    -0.864154038753268
    H               -1.019161080390644     0.705455044977545    -0.214154038753268
    H               -2.725161080390644    -0.344544955022455    -2.015154038753268
    H               -2.212161080390644     1.364455044977545    -2.185154038753268
    H                1.354838919609356     0.232455044977545    -1.379154038753268
    H                0.453838919609356     1.683455044977546    -1.895154038753268
    H               -1.362701080390644     0.101011044977545    -3.126297038753267
    H                0.313048919609356     0.189732044977545    -2.870251038753267

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025LEU-060PRO-1-dimer.npy', np.array(charges))