import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -4.177465576550530     0.635376708191142     0.045435006214678
    C               -2.654465576550530     0.741376708191142     0.181435006214678
    O               -2.069465576550529    -0.095623291808858     0.901435006214678
    O               -2.040465576550529     1.636376708191142    -0.443564993785322
    H               -4.633465576550529     0.534376708191142     1.032435006214679
    H               -4.413465576550529    -0.267623291808858    -0.517564993785322
    H               -4.611611576550528     1.500073708191141    -0.477834993785322
    C                3.576534423449471    -1.219623291808859    -1.469564993785322
    C                1.468534423449471     0.311376708191142     1.059435006214678
    C                1.139534423449471    -1.112623291808859    -0.584564993785322
    C                2.455534423449471    -0.775623291808858    -0.576564993785322
    N                0.549534423449471    -0.420623291808858     0.445435006214678
    N                2.639534423449471     0.120376708191142     0.458435006214678
    H               -0.449465576550529    -0.385623291808858     0.646435006214678
    H                1.284534423449471     0.972376708191142     1.899435006214679
    H                0.657534423449471    -1.787623291808859    -1.273564993785322
    H                4.015534423449471    -0.332623291808858    -1.919564993785322
    H                3.172534423449471    -1.839623291808858    -2.271564993785322
    H                4.365415423449472    -1.770256291808858    -0.936204993785322

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-129ASP-140HIE-1-dimer.npy', np.array(charges))