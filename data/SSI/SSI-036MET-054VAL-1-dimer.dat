import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.558691050937960    -0.178891807192583    -0.170243667523936
    C                1.794691050937960    -2.123891807192583     1.185756332476064
    S                0.193691050937960    -1.300891807192583     1.165756332476064
    H               -0.059308949062040    -0.440891807192583    -1.024243667523936
    H                0.342691050937960     0.808108192807417     0.220756332476064
    H                1.612691050937960    -0.190891807192583    -0.442243667523936
    H                1.781691050937960    -2.876891807192583     1.965756332476065
    H                2.547691050937960    -1.378891807192583     1.447756332476065
    H                2.095351050937960    -2.639621807192583     0.261836332476064
    C               -1.101308949062040     2.210108192807417    -1.115243667523936
    C               -1.741308949062040     2.855108192807418    -2.336243667523935
    H               -1.544308949062040     2.515108192807417    -0.170243667523936
    H               -1.314308949062040     1.153108192807417    -1.224243667523936
    H               -0.031308949062040     2.418108192807417    -1.114243667523936
    H               -2.755308949062040     2.479108192807417    -2.439243667523936
    H               -1.800692949062040     3.945938192807417    -2.207573667523936
    H               -1.194252949062040     2.585168192807417    -3.251593667523935

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-036MET-054VAL-1-dimer.npy', np.array(charges))