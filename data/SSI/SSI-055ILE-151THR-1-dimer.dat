import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.500361606803503    -0.990529783333097    -0.767198570848192
    C                0.414361606803503    -1.294529783333097    -1.825198570848192
    C                1.220361606803503    -1.572529783333097     0.616801429151808
    H                2.469361606803502    -1.312529783333097    -1.121198570848192
    H                1.554361606803503     0.092470216666903    -0.647198570848192
    H               -0.516638393196497    -0.820529783333097    -1.514198570848192
    H                1.816361606803503    -1.041529783333097     1.359801429151808
    H                0.157361606803503    -1.462529783333097     0.825801429151808
    H                1.483361606803503    -2.629529783333097     0.639801429151808
    H                0.705990606803503    -0.896209783333097    -2.808198570848192
    H                0.238435606803503    -2.378087783333096    -1.895568570848192
    C               -0.939638393196497     1.681470216666903     0.519801429151808
    C               -2.097638393196497     2.102470216666903     1.403801429151808
    H               -0.087638393196497     1.422470216666903     1.149801429151808
    H               -1.221638393196497     0.805470216666903    -0.061198570848192
    H               -0.639638393196497     2.486470216666903    -0.152198570848192
    H               -2.283638393196497     1.322470216666903     2.143801429151808
    H               -3.000408393196497     2.243210216666903     0.791261429151808
    H               -1.840217393196497     3.045310216666903     1.908561429151808

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-055ILE-151THR-1-dimer.npy', np.array(charges))