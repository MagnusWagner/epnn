import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.096909106627914    -1.077620196710034    -1.950473978158193
    C                0.020090893372086    -2.608620196710034    -1.988473978158194
    C               -1.532909106627914    -0.626620196710034    -1.793473978158193
    H                0.538090893372086    -0.664620196710034    -1.178473978158193
    H                0.294090893372086    -0.684620196710034    -2.889473978158194
    H                1.069090893372086    -2.894620196710033    -2.094473978158193
    H               -2.243909106627914    -1.363620196710034    -2.157473978158194
    H               -1.729909106627914    -0.489620196710034    -0.737473978158194
    H               -0.568299106627914    -3.005875196710034    -2.828705978158194
    H               -0.386379106627914    -3.068363196710034    -1.075556978158194
    H               -1.710959106627914     0.307232803289966    -2.346840978158193
    C                1.353090893372086     1.606379803289966     2.334526021841806
    C                0.367090893372086     1.041379803289966     1.363526021841806
    O                0.433090893372086    -0.166620196710034     1.112526021841806
    O               -0.511909106627914     1.830379803289966     0.879526021841806
    H                0.876090893372086     1.549379803289966     3.315526021841806
    H                1.494090893372086     2.673379803289967     2.164526021841807
    H                2.303740893372086     1.062346803289966     2.436004021841807

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051GLN-089GLU-1-dimer.npy', np.array(charges))