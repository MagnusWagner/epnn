import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.440585386097064     0.583546422450240     2.073659449933067
    C               -1.028585386097064     1.727546422450240     2.889659449933066
    H               -0.605585386097064    -0.379453577549760     2.554659449933067
    H               -0.935585386097064     0.554546422450240     1.104659449933067
    H                0.627414613902936     0.724546422450240     1.900659449933067
    H               -2.100585386097064     1.559546422450240     3.000659449933067
    H               -0.561697386097064     1.760537422450240     3.885112449933067
    H               -0.891123386097064     2.681820422450240     2.360069449933067
    C                1.777414613902936    -0.740453577549760    -0.963340550066933
    C                0.297414613902936    -0.577453577549760    -1.279340550066933
    O               -0.082585386097064     0.442546422450240    -1.896340550066933
    O               -0.494585386097064    -1.473453577549759    -0.911340550066933
    H                2.117414613902936    -1.724453577549760    -1.294340550066933
    H                1.916414613902936    -0.671453577549760     0.118659449933067
    H                2.381980613902936     0.029916422450240    -1.464370250066933

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-003VAL-012GLU-1-dimer.npy', np.array(charges))