import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.890901429969315    -0.294605141228289    -1.272918857005557
    C                2.139901429969315     0.589394858771711    -1.445918857005557
    C                1.096901429969315    -1.394605141228289    -0.219918857005557
    H                0.029901429969315     0.315394858771711    -1.030918857005557
    H                0.692901429969315    -0.777605141228289    -2.230918857005556
    H                2.065901429969315     1.118394858771711    -2.396918857005556
    H                3.014901429969315    -0.061605141228289    -1.513918857005556
    H                2.029901429969315    -1.922605141228289    -0.411918857005557
    H                1.177901429969315    -0.914605141228289     0.758081142994443
    H                2.297221429969315     1.312902858771711    -0.632418857005557
    H                0.263881429969315    -2.112581141228289    -0.195768857005557
    C               -2.018098570030685     0.824394858771711     0.684081142994443
    C               -2.059098570030685     0.263394858771711     2.172081142994444
    H               -2.830098570030684     1.541394858771711     0.545081142994443
    H               -1.065098570030685     1.328394858771711     0.523081142994444
    H               -2.142098570030685     0.007394858771711    -0.024918857005557
    H               -1.272098570030685    -0.484605141228289     2.238081142994444
    H               -3.013908570030685    -0.226580141228289     2.413481142994443
    H               -1.850588570030685     1.019497858771711     2.943331142994444

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032LYS-091LEU-2-dimer.npy', np.array(charges))