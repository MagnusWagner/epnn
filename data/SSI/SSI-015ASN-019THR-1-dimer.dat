import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.048999965760529    -0.192838200355490     0.936044401004894
    C                1.180999965760529    -0.870838200355490    -0.411955598995106
    O                2.077999965760529    -1.682838200355490    -0.642955598995106
    N                0.280999965760529    -0.533838200355490    -1.322955598995106
    H                0.298999965760529    -0.985838200355490    -2.223955598995106
    H               -0.440000034239471     0.139161799644510    -1.089955598995106
    H                0.309999965760529    -0.745838200355490     1.517044401004894
    H                0.667999965760529     0.814161799644510     0.774044401004894
    H                1.997595965760530    -0.152088200355490     1.491477401004894
    C               -2.209000034239470     1.916161799644510     1.277044401004894
    O               -1.943000034239471     1.153161799644510     0.107044401004894
    H               -2.347000034239470     0.286161799644510     0.245044401004894
    H               -1.460000034239471     1.664161799644510     2.022044401004894
    H               -2.118706134239471     2.985351799644510     1.034827401004894
    H               -3.205790634239471     1.668051799644510     1.670552401004894

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015ASN-019THR-1-dimer.npy', np.array(charges))