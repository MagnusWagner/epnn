import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.023288020041015    -1.233715181033526     0.228852947191377
    C                1.455288020041015    -0.309715181033526     1.371852947191377
    C               -0.126711979958985    -2.182715181033526     0.579852947191377
    H                0.687288020041015    -0.595715181033526    -0.587147052808623
    H                1.876288020041015    -1.798715181033526    -0.151147052808623
    H                0.571288020041015     0.149284818966474     1.820852947191377
    H               -0.871711979958985    -1.634715181033526     1.153852947191377
    H                2.111028020041015     0.483519818966474     0.983542947191377
    H                1.980438020041015    -0.883267181033526     2.149832947191377
    H               -0.610451979958985    -2.529994881033526    -0.345027052808623
    H                0.240958020041015    -3.035083161033526     1.170012947191377
    C               -0.571711979958985     1.707284818966474    -1.577147052808622
    C               -1.712711979958985     1.928284818966474    -0.583147052808623
    H               -0.595711979958985     2.476284818966474    -2.350147052808623
    H                0.364288020041015     1.787284818966474    -1.031147052808623
    H               -0.623711979958985     0.719284818966474    -2.035147052808623
    H               -1.736711979958985     1.089284818966474     0.112852947191377
    H               -2.673521979958984     1.998135818966474    -1.114157052808622
    H               -1.522751979958985     2.852882818966474    -0.018317052808623

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-065LEU-080VAL-1-dimer.npy', np.array(charges))