import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.928270687459395    -0.676764890584851    -3.006992484388082
    C                2.284270687459395    -0.761764890584851    -3.688992484388082
    H                0.156270687459395    -0.945764890584851    -3.710992484388082
    H                0.900270687459395    -1.374764890584851    -2.170992484388082
    H                0.750270687459395     0.324235109415149    -2.614992484388082
    H                3.036270687459395    -0.395764890584851    -2.996992484388083
    H                2.328454687459395    -0.136064890584851    -4.592622484388081
    H                2.517465687459395    -1.809704890584851    -3.928662484388083
    C               -0.509729312540605     0.305235109415149     0.305007515611918
    C               -1.917729312540605    -0.137764890584851    -0.081992484388082
    C               -0.333729312540605     0.410235109415149     1.814007515611918
    O               -0.363729312540605    -0.634764890584851     2.493007515611918
    O               -0.154729312540605     1.545235109415149     2.311007515611918
    H                0.215270687459395    -0.401764890584851    -0.094992484388082
    H               -0.284729312540605     1.265235109415149    -0.152992484388082
    H               -2.041729312540605    -1.161764890584851     0.250007515611918
    H               -2.057759312540605    -0.062074890584851    -1.170412484388082
    H               -2.665929312540605     0.498065109415149     0.413907515611918

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-073VAL-111ASP-1-dimer.npy', np.array(charges))