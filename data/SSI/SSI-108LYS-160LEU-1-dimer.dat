import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.103709937929865    -1.050034523793010    -0.113925493483578
    C                1.728709937929865    -1.129034523793010    -1.498925493483578
    C                0.599709937929865    -2.392034523793010     0.413074506516422
    H                1.845709937929865    -0.670034523793010     0.593074506516422
    H                0.284709937929865    -0.336034523793010    -0.148925493483578
    H                2.413709937929865    -1.982034523793010    -1.520925493483578
    H                0.033709937929865    -2.885034523793010    -0.377925493483578
    H                1.441709937929865    -3.035034523793010     0.673074506516422
    H                2.286799937929865    -0.207354523793010    -1.720365493483577
    H                0.931029937929865    -1.269929523793010    -2.243135493483578
    H               -0.078770062070135    -2.277883523793010     1.271344506516422
    C               -1.203290062070135     1.727965476206990     0.870074506516422
    C               -2.151290062070135     2.768965476206990     0.317074506516422
    H               -0.195290062070135     1.883965476206990     0.493074506516422
    H               -1.170290062070135     1.803965476206990     1.958074506516422
    H               -1.558290062070135     0.738965476206990     0.590074506516422
    H               -1.755290062070135     3.753965476206990     0.559074506516422
    H               -2.265760062070135     2.683295476206990    -0.773595493483578
    H               -3.137060062070135     2.682343476206991     0.797434506516422

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-108LYS-160LEU-1-dimer.npy', np.array(charges))