import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -0.995783223193089     1.098267851833367     0.063570079668456
    C               -2.250783223193089     1.486267851833367     0.830570079668456
    N                0.240216776806911     1.393267851833366     0.848570079668456
    H               -1.050783223193089     0.030267851833367    -0.170429920331544
    H               -0.971783223193089     1.638267851833366    -0.886429920331544
    H               -2.323783223193089     0.868267851833367     1.729570079668456
    H               -3.124783223193089     1.280267851833367     0.208570079668456
    H                0.273216776806911     0.864267851833367     1.719570079668456
    H                1.063216776806911     1.150267851833366     0.299570079668456
    H                0.318216776806911     2.390267851833367     1.041570079668456
    H               -2.245743223193089     2.550205851833367     1.109870079668456
    C                1.520216776806911    -1.734732148166634    -0.228429920331544
    C                1.385216776806911    -2.345732148166633    -1.618429920331544
    H                0.549216776806911    -1.413732148166633     0.146570079668456
    H                1.916216776806911    -2.491732148166634     0.449570079668456
    H                2.238216776806911    -0.914732148166634    -0.228429920331544
    H                2.378216776806911    -2.589732148166633    -1.991429920331544
    H                0.908806776806911    -1.636119148166634    -2.310874920331544
    H                0.795706776806911    -3.272819148166633    -1.563725920331544

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-077LYS-178VAL-1-dimer.npy', np.array(charges))