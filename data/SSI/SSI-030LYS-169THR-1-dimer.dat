import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.307464195550784     1.477646959826137     1.127643940217324
    N                0.139464195550784     0.637646959826137     1.472643940217324
    H               -0.378535804449217     0.388646959826137     0.630643940217324
    H                0.432464195550783    -0.226353040173863     1.910643940217324
    H               -0.497535804449216     1.111646959826136     2.101643940217324
    H                1.918464195550783     0.981646959826136     0.368643940217324
    H                1.932464195550784     1.616646959826137     2.015643940217325
    H                1.014462195550784     2.471206959826137     0.757533940217324
    C               -1.108535804449216    -1.577353040173863    -1.544356059782676
    O               -0.339535804449216    -0.490353040173863    -1.074356059782676
    H                0.601464195550784    -0.656353040173864    -1.306356059782676
    H               -1.626535804449217    -2.020353040173863    -0.694356059782676
    H               -1.859259804449216    -1.206653040173863    -2.257796059782676
    H               -0.455142804449217    -2.350331040173863    -1.975146059782676

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030LYS-169THR-1-dimer.npy', np.array(charges))