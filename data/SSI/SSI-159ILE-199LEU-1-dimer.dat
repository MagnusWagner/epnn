import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.116428623606190    -0.340712650491045     0.408685986128068
    C                3.603428623606190    -0.382712650491045     0.873685986128068
    H                1.472428623606190    -0.766712650491045     1.180685986128068
    H                1.812428623606190     0.683287349508955     0.219685986128068
    H                1.994428623606190    -0.913712650491045    -0.513314013871932
    H                4.234428623606191     0.044287349508955     0.091685986128068
    H                3.918248623606190    -1.419512650491045     1.063275986128068
    H                3.777918623606190     0.229067349508955     1.771055986128068
    C               -1.498571376393810     0.050287349508955    -0.194314013871932
    C               -1.596571376393810     1.520287349508955    -0.643314013871932
    C               -2.736571376393809    -0.845712650491045    -0.462314013871932
    H               -0.626571376393810    -0.376712650491045    -0.692314013871932
    H               -1.310571376393810     0.082287349508955     0.880685986128068
    H               -2.306571376393810     2.037287349508955     0.002685986128068
    H               -2.783571376393810    -1.083712650491045    -1.529314013871932
    H               -1.936411376393810     1.565597349508955    -1.688524013871932
    H               -0.620751376393810     2.015047349508955    -0.529364013871932
    H               -2.630211376393810    -1.777562650491045     0.112435986128068
    H               -3.663361376393810    -0.336042650491045    -0.160164013871932

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-159ILE-199LEU-1-dimer.npy', np.array(charges))