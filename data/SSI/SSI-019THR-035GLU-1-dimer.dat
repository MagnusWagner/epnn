import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.759130661150400     0.431396062536571    -0.957971213994277
    C                3.137130661150400     0.774396062536571    -1.501971213994277
    H                0.987130661150400     0.767396062536571    -1.651971213994277
    H                1.684130661150400    -0.646603937463429    -0.829971213994277
    H                1.606130661150400     0.895396062536571     0.016028786005723
    H                3.886130661150400     0.522396062536571    -0.756971213994277
    H                3.227424561150400     1.843586062536571    -1.744188213994277
    H                3.342910661150400     0.184136062536571    -2.407092513994277
    C               -1.628869338849600    -0.642603937463429     0.328028786005723
    C               -2.505869338849600     0.580396062536571     0.628028786005723
    C               -0.877869338849600    -1.187603937463429     1.530028786005723
    H               -2.252869338849600    -1.431603937463429    -0.096971213994277
    H               -0.895869338849600    -0.347603937463429    -0.421971213994277
    H               -1.908869338849600     1.304396062536571     1.162028786005723
    H               -0.350869338849600    -0.356603937463429     2.002028786005723
    H               -1.593869338849600    -1.590603937463429     2.249028786005723
    H               -3.383875338849600     0.324026062536571     1.239077786005723
    H               -2.816076338849600     1.019616062536571    -0.331585213994277
    H               -0.146239338849600    -1.963793937463429     1.261237786005723

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019THR-035GLU-1-dimer.npy', np.array(charges))