import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.439675050808421    -1.023590063214645     1.396061012126444
    C               -1.734675050808421    -0.622590063214645     2.086061012126444
    C                0.766324949191579    -0.039590063214645     1.719061012126444
    H               -0.157675050808421    -2.031590063214645     1.694061012126444
    H               -0.561675050808421    -1.013590063214645     0.315061012126444
    H               -1.985675050808421     0.393409936785355     1.794061012126444
    H                1.054324949191579    -0.120590063214645     2.767061012126444
    H                1.622324949191579    -0.315590063214645     1.104061012126444
    H                0.478324949191579     0.987409936785355     1.496061012126444
    H               -2.547755050808421    -1.289670063214645     1.763721012126444
    H               -1.648985050808421    -0.649500063214645     3.182388012126444
    C                0.461324949191579     0.294409936785355    -2.035938987873556
    C                0.918324949191579     1.325409936785355    -3.062938987873556
    H                0.931324949191579     0.489409936785355    -1.072938987873556
    H               -0.623675050808421     0.342409936785355    -1.923938987873556
    H                0.731324949191579    -0.707590063214645    -2.372938987873556
    H                0.436324949191579     1.093409936785355    -4.014938987873555
    H                2.009894949191579     1.273249936785355    -3.188424987873556
    H                0.599454949191579     2.334079936785355    -2.761422987873556

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-236ILE-260ALA-1-dimer.npy', np.array(charges))