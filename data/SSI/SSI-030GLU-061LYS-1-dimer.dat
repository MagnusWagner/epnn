import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.552760401089939     1.897598833728236     2.085350319512928
    C                0.567760401089939     1.414598833728236     0.638350319512928
    O               -0.467239598910061     0.952598833728236     0.099350319512928
    O                1.651760401089939     1.479598833728236     0.022350319512928
    H                0.802760401089939     2.956598833728236     2.139350319512928
    H                1.349760401089939     1.366598833728236     2.608350319512928
    H               -0.379939598910061     1.677418833728236     2.625340319512928
    C               -1.332239598910061    -2.011401166271764    -0.883649680487072
    C               -0.292239598910061    -2.580401166271764     0.053350319512928
    N               -0.656239598910061    -1.044401166271764    -1.795649680487072
    H               -1.796239598910061    -2.822401166271764    -1.455649680487072
    H               -2.112239598910061    -1.503401166271764    -0.302649680487072
    H                0.244760401089939    -1.759401166271764     0.536350319512928
    H                0.428760401089939    -3.181401166271764    -0.504649680487072
    H                0.168760401089939    -1.438401166271764    -2.234649680487072
    H               -1.271239598910061    -0.732401166271764    -2.540649680487072
    H               -0.367239598910061    -0.226401166271764    -1.244649680487072
    H               -0.748539598910061    -3.190241166271764     0.847010319512928

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030GLU-061LYS-1-dimer.npy', np.array(charges))