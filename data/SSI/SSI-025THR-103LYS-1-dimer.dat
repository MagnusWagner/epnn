import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.453272947989551     1.450826165864509    -1.916720967383261
    O                0.771272947989551     1.106826165864508    -0.573720967383261
    H                0.821272947989551     1.938826165864509    -0.041720967383261
    H                0.418272947989551     2.535826165864508    -2.001720967383262
    H                1.236352947989551     1.052724165864509    -2.578764967383261
    H               -0.534927052010449     1.039076165864508    -2.169549967383261
    C               -0.629727052010449    -2.093173834135492     1.182279032616739
    N               -0.600727052010449    -0.600173834135491     1.245279032616739
    H               -0.204727052010449    -0.183173834135491     0.403279032616739
    H               -1.534727052010449    -0.229173834135491     1.383279032616739
    H               -0.035727052010449    -0.285173834135491     2.027279032616739
    H               -1.350727052010449    -2.430173834135492     0.428279032616739
    H               -0.961727052010449    -2.490173834135491     2.148279032616739
    H                0.353722947989551    -2.527368834135491     0.949261032616739

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025THR-103LYS-1-dimer.npy', np.array(charges))