import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.658901492520309    -2.505695988396529     0.372846236305734
    C               -2.158901492520309    -2.640695988396529     0.579846236305734
    C               -0.021901492520309    -1.769695988396529     1.546846236305734
    H               -0.214901492520309    -3.498695988396529     0.278846236305734
    H               -0.476901492520309    -1.952695988396529    -0.550153763694266
    H               -2.572901492520309    -1.641695988396529     0.727846236305734
    H               -2.352901492520309    -3.236695988396529     1.472846236305734
    H               -0.559901492520309    -0.829695988396529     1.709846236305734
    H               -0.134901492520309    -2.385695988396529     2.442846236305734
    H               -2.659291492520309    -3.097945988396529    -0.286486763694266
    H                1.041728507479691    -1.557852988396529     1.362954656305734
    C                0.654098507479691     2.748304011603471     0.385846236305734
    C                0.714098507479691     1.661304011603471    -0.681153763694266
    O                0.440098507479691     0.489304011603471    -0.368153763694266
    O                1.044098507479691     1.963304011603471    -1.854153763694266
    H               -0.173901492520309     3.394304011603472     0.092846236305734
    H                1.581098507479691     3.326304011603471     0.356846236305734
    H                0.488478507479691     2.399925011603471     1.415992306305734

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008LYS-068GLU-1-dimer.npy', np.array(charges))