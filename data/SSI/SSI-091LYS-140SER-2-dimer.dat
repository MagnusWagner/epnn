import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -0.531177093142226     2.041042316888870    -0.892736899628100
    N               -1.249177093142225     0.743042316888870    -0.753736899628100
    H               -1.877177093142226     0.733042316888870     0.044263100371900
    H               -1.799177093142226     0.531042316888870    -1.581736899628100
    H               -0.599177093142226    -0.034957683111130    -0.635736899628100
    H               -1.243177093142226     2.865042316888870    -1.006736899628100
    H                0.091822906857774     2.020042316888869    -1.795736899628100
    H                0.116722906857774     2.234182316888870    -0.025026899628100
    C                1.155822906857774    -1.230957683111130     1.496263100371900
    O                0.681822906857774    -1.410957683111130     0.172263100371900
    H                0.592822906857775    -2.362957683111130    -0.002736899628100
    H                0.484822906857774    -1.743957683111130     2.187263100371900
    H                1.160822906857774    -0.175957683111130     1.758263100371900
    H                2.169622906857775    -1.642227683111130     1.610583100371900

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-091LYS-140SER-2-dimer.npy', np.array(charges))