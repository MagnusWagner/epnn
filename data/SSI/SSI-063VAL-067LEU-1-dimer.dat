import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.993360600751961    -0.351471082625807    -1.068014356479930
    C               -3.271360600751961    -0.158471082625807    -1.875014356479930
    H               -2.229360600751961    -0.672471082625807    -0.053014356479930
    H               -1.373360600751961    -1.113471082625807    -1.544014356479930
    H               -1.419360600751961     0.572528917374193    -1.043014356479930
    H               -2.983360600751961     0.267528917374193    -2.836014356479930
    H               -3.971933200751961     0.531378917374193    -1.381754356479930
    H               -3.761086600751961    -1.124259082625807    -2.068459356479930
    C                1.386639399248039    -0.066471082625807     0.688985643520070
    C                2.395639399248039     0.920528917374193     0.129985643520070
    C                1.573639399248039    -0.344471082625807     2.175985643520070
    H                0.382639399248039     0.325528917374193     0.523985643520070
    H                1.471639399248039    -1.011471082625807     0.146985643520070
    H                3.394639399248039     0.579528917374193     0.398985643520070
    H                1.525639399248039     0.598528917374193     2.718985643520070
    H                2.215224399248039     1.920329917374193     0.551706643520070
    H                2.367483399248039     0.903923917374193    -0.969528356479930
    H                0.746467399248039    -0.966121082625807     2.549266043520070
    H                2.548862399248039    -0.807252082625807     2.387583843520070

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-063VAL-067LEU-1-dimer.npy', np.array(charges))