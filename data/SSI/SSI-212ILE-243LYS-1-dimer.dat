import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.303467541459921    -2.054263065732846     1.552944335752124
    C               -1.107532458540079    -1.831263065732846     2.022944335752124
    H                0.638467541459921    -3.060263065732846     1.803944335752124
    H                0.344467541459921    -1.950263065732846     0.468944335752124
    H                0.969467541459921    -1.324263065732846     2.009944335752124
    H               -1.735532458540079    -2.566263065732846     1.555944335752124
    H               -1.399532458540079    -0.854263065732846     1.639944335752124
    H               -1.240382458540079    -1.866263065732846     3.114331335752124
    C                0.292467541459921     0.717736934267154    -1.093055664247876
    C                1.583467541459921     1.570736934267154    -0.860055664247875
    N               -0.936532458540079     1.460736934267154    -1.482055664247876
    H                0.501467541459921     0.023736934267154    -1.913055664247876
    H                0.098467541459921     0.111736934267154    -0.202055664247876
    H                1.804467541459921     2.139736934267154    -1.765055664247876
    H                2.415467541459922     0.881736934267154    -0.704055664247876
    H               -0.832532458540079     1.873736934267154    -2.406055664247876
    H               -1.735532458540079     0.829736934267154    -1.490055664247876
    H               -1.144532458540079     2.217736934267154    -0.837055664247876
    H                1.565707541459921     2.263256934267154    -0.005594664247876

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-212ILE-243LYS-1-dimer.npy', np.array(charges))