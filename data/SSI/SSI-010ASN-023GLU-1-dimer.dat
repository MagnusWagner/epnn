import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.199449985190624     1.082861465668141    -0.535300137059792
    C                1.486449985190624     2.395861465668141    -1.261300137059792
    C                1.073449985190624     1.266861465668141     0.945699862940208
    O                1.722449985190624     2.131861465668141     1.533699862940208
    N                0.214449985190624     0.476861465668141     1.566699862940208
    H                0.305449985190624     0.606861465668141    -0.933300137059792
    H                2.026449985190625     0.386861465668141    -0.678300137059792
    H                2.334449985190625     2.878861465668141    -0.770300137059792
    H                0.113449985190624     0.564861465668141     2.564699862940209
    H               -0.346550014809376    -0.203138534331859     1.048699862940208
    H                0.624942985190624     3.074211465668141    -1.173870137059792
    H                1.827568985190625     2.218101465668141    -2.291850137059792
    C               -2.183550014809375    -1.895138534331859    -1.794300137059792
    C               -1.352550014809376    -1.796138534331859    -0.514300137059792
    O               -1.815550014809376    -1.208138534331859     0.483699862940208
    O               -0.246550014809376    -2.365138534331859    -0.477300137059792
    H               -2.735550014809375    -2.837138534331859    -1.799300137059792
    H               -1.495550014809376    -1.921138534331859    -2.641300137059791
    H               -2.902011014809375    -1.071168534331859    -1.916320137059792

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-010ASN-023GLU-1-dimer.npy', np.array(charges))