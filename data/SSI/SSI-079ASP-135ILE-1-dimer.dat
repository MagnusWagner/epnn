import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.352552316713366    -1.496896654681000     0.946128655205809
    C               -0.214552316713366    -1.418896654681000    -0.057871344794190
    O                0.979447683286634    -1.475896654681000     0.315128655205810
    O               -0.501552316713366    -1.235896654681000    -1.260871344794190
    H               -1.981552316713366    -2.362896654681000     0.735128655205809
    H               -1.963552316713366    -0.599896654681000     0.830128655205809
    H               -0.991926316713366    -1.545746654681000     1.984185655205809
    C                0.633447683286634     2.070103345319001     0.316128655205810
    C                0.441447683286634     3.452103345319000    -0.248871344794190
    H               -0.135552316713366     1.831103345319000     1.049128655205809
    H                0.560447683286634     1.351103345319000    -0.496871344794190
    H                1.620447683286634     1.985103345319000     0.771128655205810
    H               -0.558552316713366     3.520103345319000    -0.678871344794191
    H                1.156447683286634     3.576103345319000    -1.059871344794190
    H                0.569897683286634     4.249033345319001     0.498387655205810

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-079ASP-135ILE-1-dimer.npy', np.array(charges))