import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.154248290766955    -1.331504968019027    -0.073394712649735
    C                1.150248290766955    -1.346504968019028    -1.610394712649735
    C                2.328248290766955    -0.592504968019028     0.538605287350265
    H                0.233248290766955    -0.877504968019028     0.284605287350265
    H                1.193248290766955    -2.358504968019028     0.292605287350265
    H                2.001248290766955    -1.938504968019027    -1.946394712649735
    H                2.223248290766955     0.482495031980972     0.395605287350265
    H                2.360248290766955    -0.792504968019028     1.610605287350265
    H                3.254248290766955    -0.941504968019028     0.084605287350265
    H                0.226058290766955    -1.815388968019027    -1.979214712649735
    H                1.260808290766955    -0.337074968019028    -2.033264712649734
    C               -1.574751709233045     1.299495031980972     0.548605287350265
    C               -2.981751709233045     1.884495031980973     0.589605287350265
    H               -1.428751709233045     0.743495031980972    -0.374394712649735
    H               -0.840751709233045     2.103495031980972     0.587605287350265
    H               -1.421751709233045     0.636495031980972     1.399605287350265
    H               -3.108751709233045     2.530495031980972    -0.279394712649735
    H               -3.738811709233045     1.087205031980973     0.555128287350265
    H               -3.121331709233045     2.507545031980972     1.485331287350265

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053ILE-077LEU-1-dimer.npy', np.array(charges))