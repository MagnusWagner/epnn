import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.493648417333242     0.698340249722743     2.354347605048995
    S               -0.058648417333242    -0.464659750277257     1.092347605048994
    H               -0.187648417333242    -1.574659750277256     1.835347605048995
    H                0.132351582666758     0.528340249722743     3.234347605048994
    H               -1.520648417333242     0.465340249722743     2.646347605048994
    H               -0.414598417333242     1.751320249722743     2.046141605048994
    C                0.253351582666758    -0.491659750277257    -2.091652394951006
    C                0.393351582666758     0.850340249722743    -2.767652394951006
    H               -0.685648417333242    -0.654659750277257    -1.574652394951005
    H                0.365351582666758    -1.296659750277257    -2.818652394951006
    H                1.073351582666758    -0.595659750277257    -1.382652394951005
    H                1.368351582666758     1.280340249722744    -2.532652394951006
    H               -0.403288417333242     1.526340249722743    -2.423583394951006
    H                0.310581582666758     0.724980249722743    -3.857346394951005

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051CYS-156THR-1-dimer.npy', np.array(charges))