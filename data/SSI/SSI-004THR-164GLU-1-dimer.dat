import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.352753715312201     0.941242611772163     0.763741074746468
    C                1.025753715312200     2.199242611772164     1.561741074746469
    C                2.852753715312201     0.826242611772163     0.540741074746468
    O                0.896753715312200    -0.207757388227837     1.467741074746469
    H                0.871753715312201     0.988242611772163    -0.212258925253532
    H                1.496753715312201     2.141242611772163     2.529741074746469
    H                3.058753715312201    -0.094757388227837    -0.005258925253532
    H                3.235753715312201     1.651242611772163    -0.059258925253532
    H                3.378753715312201     0.786242611772163     1.493741074746469
    H               -0.048246284687799    -0.249757388227837     1.230741074746468
    H               -0.061736284687799     2.307155611772163     1.687131074746469
    H                1.398443715312201     3.067643611772163     0.998731074746468
    C               -1.019246284687799    -0.749757388227837    -2.434258925253531
    C               -1.569246284687799    -0.938757388227837    -1.028258925253531
    O               -1.445246284687799     0.015242611772163    -0.217258925253531
    O               -2.108246284687799    -2.045757388227837    -0.763258925253532
    H               -0.708246284687799    -1.717757388227837    -2.841258925253531
    H               -0.115246284687799    -0.144757388227837    -2.375258925253532
    H               -1.809356284687799    -0.338029188227837    -3.079398925253531

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004THR-164GLU-1-dimer.npy', np.array(charges))