import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.545710684295785    -2.276940666633649    -0.852580263482807
    C                0.305710684295785    -1.824940666633649    -2.206580263482807
    N                1.661710684295785    -1.297940666633649    -0.440580263482807
    H               -0.345289315704215    -2.159940666633649    -0.227580263482807
    H                0.885710684295785    -3.318940666633649    -0.855580263482807
    H                1.177710684295785    -2.051940666633649    -2.827580263482807
    H                0.227710684295785    -0.732940666633649    -2.183580263482807
    H                1.243710684295785    -0.402940666633649    -0.174580263482807
    H                2.130710684295785    -1.625940666633649     0.395419736517193
    H                2.367710684295785    -1.156940666633649    -1.153580263482807
    H               -0.607054315704215    -2.114960666633649    -2.747644263482807
    C               -1.886289315704215     1.798059333366351     1.530419736517193
    C               -0.614289315704215     1.360059333366351     0.874419736517193
    O               -0.241289315704215     0.177059333366351     1.015419736517193
    O               -0.005289315704215     2.161059333366351     0.155419736517193
    H               -1.841289315704215     2.861059333366351     1.779419736517193
    H               -2.034289315704215     1.247059333366351     2.460419736517193
    H               -2.744117315704214     1.620049333366351     0.865259736517193

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-050LYS-056GLU-1-dimer.npy', np.array(charges))