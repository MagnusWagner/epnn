import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.032851887257947    -0.861581609400774     2.311089480758249
    C                1.659851887257947    -1.482581609400774     1.067089480758249
    O                1.434851887257947    -1.033581609400774    -0.054910519241751
    N                2.460851887257946    -2.518581609400774     1.247089480758249
    H                0.242851887257946    -0.186581609400774     1.980089480758249
    H                1.787851887257947    -0.272581609400774     2.835089480758249
    H                2.922851887257946    -2.856581609400774     0.414089480758249
    H                2.877851887257946    -2.680581609400774     2.148089480758249
    H                0.595471887257946    -1.614841609400774     2.982879480758249
    C               -2.863148112742053     0.691418390599226    -0.981910519241751
    C               -1.589148112742053     1.488418390599226    -1.111910519241751
    O               -0.618148112742054     1.254418390599226    -0.398910519241751
    N               -1.578148112742054     2.440418390599226    -2.028910519241751
    H               -3.326148112742054     0.578418390599226    -1.963910519241751
    H               -3.545148112742054     1.263418390599226    -0.351910519241751
    H               -0.740148112742053     2.992418390599226    -2.140910519241751
    H               -2.394148112742053     2.614418390599226    -2.595910519241751
    H               -2.696398112742053    -0.299711609400774    -0.534860519241751

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-054ASN-141ASN-1-dimer.npy', np.array(charges))