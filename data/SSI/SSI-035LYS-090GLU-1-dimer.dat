import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.491622070845730     1.307510488629425    -0.526814271869940
    C                1.383622070845730     0.851510488629425    -1.985814271869940
    C                0.535622070845730     2.444510488629425    -0.142814271869940
    H                1.299622070845730     0.462510488629425     0.132185728130060
    H                2.517622070845730     1.624510488629425    -0.335814271869940
    H                1.679622070845730     1.674510488629425    -2.637814271869940
    H               -0.493377929154270     2.109510488629425    -0.261814271869940
    H                0.681622070845730     2.681510488629425     0.912185728130060
    H                0.361882070845730     0.534940488629425    -2.242375271869940
    H                2.103034070845730     0.043250488629425    -2.183725271869940
    H                0.670131070845730     3.360890488629425    -0.736234271869940
    C               -0.969377929154270    -1.266489511370575     2.090185728130060
    C               -0.835377929154270    -1.145489511370575     0.581185728130060
    O               -0.023377929154270    -1.891489511370575    -0.016814271869940
    O               -1.546377929154270    -0.296489511370575     0.002185728130060
    H               -1.954377929154270    -1.668489511370575     2.334185728130060
    H               -0.880377929154270    -0.274489511370575     2.539185728130060
    H               -0.195917929154270    -1.918279511370575     2.522540728130060

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035LYS-090GLU-1-dimer.npy', np.array(charges))