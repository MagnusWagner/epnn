import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.629343053850908     1.724972708221942    -0.533252297611581
    O               -0.340343053850908     1.159972708221942    -0.778252297611581
    H                0.230656946149092     1.876972708221942    -1.088252297611581
    H               -1.943343053850908     2.273972708221942    -1.422252297611581
    H               -2.358703053850908     0.924032708221942    -0.342142297611581
    H               -1.582443053850908     2.432072708221942     0.308057702388419
    C                1.436656946149092    -1.942027291778058     0.403747702388419
    O                0.496656946149092    -1.041027291778058     0.964747702388419
    H                0.394656946149092    -0.289027291778058     0.352747702388419
    H                2.327656946149093    -1.965027291778058     1.033747702388419
    H                1.725656946149092    -1.599027291778058    -0.592252297611581
    H                1.019326946149092    -2.957287291778058     0.332517702388419

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-027THR-036SER-1-dimer.npy', np.array(charges))