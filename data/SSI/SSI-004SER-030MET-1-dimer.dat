import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.054910057939831     1.392575259017536    -2.648319203560847
    O                1.403910057939831     1.093575259017536    -1.435319203560847
    H                1.680910057939831     0.213575259017536    -1.141319203560847
    H                3.095910057939831     1.646575259017536    -2.449319203560847
    H                1.570910057939831     2.267575259017535    -3.084319203560848
    H                2.017690057939831     0.560048259017536    -3.366309203560847
    C               -1.759089942060169     0.583575259017536     0.979680796439153
    C               -0.799089942060169    -1.779424740982464     1.950680796439153
    S               -0.503089942060169    -0.656424740982464     0.619680796439153
    H               -2.688089942060169     0.081575259017536     1.253680796439153
    H               -1.950089942060169     1.185575259017536     0.102680796439153
    H               -0.206089942060169    -2.673424740982464     1.778680796439153
    H               -1.853089942060169    -2.066424740982464     1.949680796439153
    H               -0.566089942060169    -1.310424740982464     2.905680796439153
    H               -1.430753942060169     1.221444259017536     1.813540796439153

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004SER-030MET-1-dimer.npy', np.array(charges))