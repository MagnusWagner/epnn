import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.844111133776921     0.598532780337279     0.758648289733409
    C               -2.729111133776921     1.091532780337279     1.913648289733409
    H               -1.539111133776921    -0.435467219662721     0.913648289733409
    H               -2.405111133776921     0.663532780337279    -0.171351710266591
    H               -0.971111133776921     1.241532780337279     0.667648289733409
    H               -3.684111133776921     0.570532780337279     1.891648289733409
    H               -2.944111133776921     2.146532780337279     1.759648289733409
    H               -2.267971133776921     0.960902780337279     2.903742289733409
    C                1.651888866223079    -0.343467219662721    -0.369351710266591
    C                1.216888866223079    -1.769467219662721    -0.636351710266591
    C                1.819888866223079     0.399532780337279    -1.678351710266591
    H                0.916888866223079     0.156532780337279     0.255648289733409
    H                2.604888866223079    -0.352467219662721     0.156648289733409
    H                1.980888866223079    -2.236467219662721    -1.262351710266591
    H                0.285888866223079    -1.750467219662721    -1.206351710266591
    H                2.534888866223079    -0.147467219662721    -2.300351710266590
    H                0.861888866223079     0.428532780337279    -2.201351710266591
    H                1.061338866223079    -2.391667219662721     0.257335289733409
    H                2.190278866223079     1.423762780337279    -1.524201710266591

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-040ILE-057LYS-1-dimer.npy', np.array(charges))