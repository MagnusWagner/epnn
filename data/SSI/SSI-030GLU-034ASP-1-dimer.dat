import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -2 1
    --
    -2 1
    C               -0.762939969393077     2.206745153624759     1.423254391272247
    C               -0.097939969393077     2.240745153624759     0.044254391272247
    O                1.052060030606923     1.760745153624759    -0.069745608727753
    O               -0.711939969393077     2.732745153624759    -0.932745608727753
    H               -0.079939969393077     2.622745153624759     2.167254391272247
    H               -0.974939969393077     1.171745153624759     1.702254391272247
    H               -1.701029969393077     2.780145153624759     1.457914391272247
    C               -1.216939969393077    -1.830254846375241    -0.168745608727753
    C                0.205060030606923    -2.263254846375241    -0.118745608727753
    O                1.055060030606923    -1.389254846375241     0.162254391272247
    O                0.479060030606923    -3.462254846375241    -0.347745608727753
    H               -1.242939969393077    -0.748254846375241    -0.329745608727753
    H               -1.676939969393077    -2.034254846375241     0.786254391272247
    H               -1.771129969393077    -2.324884846375241    -0.980055608727753

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030GLU-034ASP-1-dimer.npy', np.array(charges))