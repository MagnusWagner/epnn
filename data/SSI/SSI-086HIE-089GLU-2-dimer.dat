import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.497319757805599    -1.159991778556279     2.335870074877105
    C               -1.417319757805599    -0.548991778556280     1.324870074877105
    C               -2.026319757805599     0.335008221443720    -0.596129925122894
    C               -2.737319757805599    -0.242991778556280     1.405870074877105
    N               -0.997319757805599    -0.178991778556280     0.068870074877105
    N               -3.095319757805599     0.297008221443720     0.185870074877105
    H               -2.001319757805599     0.710008221443720    -1.615129925122895
    H               -0.282319757805599    -2.183991778556280     2.024870074877105
    H               -1.007319757805599    -1.197991778556279     3.298870074877105
    H               -4.019319757805599     0.622008221443720    -0.077129925122895
    H               -3.378319757805599    -0.399991778556279     2.264870074877106
    H                0.448710242194401    -0.609891778556280     2.447338074877106
    C                2.560680242194401     1.614008221443721    -0.395129925122895
    C                2.500680242194401     0.276008221443721    -1.142129925122895
    O                1.546680242194401    -0.517991778556280    -0.934129925122895
    O                3.408680242194401     0.038008221443720    -1.979129925122895
    H                2.171680242194401     1.442008221443720     0.589870074877105
    H                1.955680242194401     2.357008221443721    -0.918129925122894
    H                3.584300242194401     1.987608221443721    -0.244682925122895

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-086HIE-089GLU-2-dimer.npy', np.array(charges))