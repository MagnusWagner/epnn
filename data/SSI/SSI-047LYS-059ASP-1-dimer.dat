import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.248301004608780    -0.349431616899107    -3.157865974459814
    N               -1.091301004608780    -0.799431616899107    -2.012865974459814
    H               -0.581301004608780    -0.728431616899108    -1.124865974459814
    H               -1.919301004608780    -0.225431616899107    -1.922865974459814
    H               -1.391301004608780    -1.759431616899107    -2.121865974459814
    H                0.066698995391220     0.689568383100893    -3.013865974459814
    H               -0.826301004608780    -0.403431616899108    -4.086865974459814
    H                0.643148995391220    -0.986601616899107    -3.254495974459814
    C                1.150698995391220     0.072568383100893     2.566134025540185
    C                0.335698995391220     0.320568383100893     1.322134025540186
    O                0.121698995391220    -0.595431616899108     0.491134025540186
    O               -0.104301004608780     1.473568383100893     1.160134025540186
    H                1.075698995391219     0.910568383100892     3.258134025540186
    H                2.194698995391219     0.017568383100893     2.253134025540186
    H                0.882948995391220    -0.863851616899107     3.077428025540186

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-047LYS-059ASP-1-dimer.npy', np.array(charges))