import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.130139069290486    -2.246595488050839     0.274758325577722
    C                0.261139069290486    -2.791595488050839     1.690758325577722
    H               -0.825860930709514    -2.535595488050839    -0.161241674422278
    H                0.192139069290486    -1.165595488050839     0.308758325577722
    H                0.942139069290486    -2.622595488050839    -0.347241674422278
    H                1.202139069290486    -2.445595488050840     2.121758325577722
    H                0.258899069290486    -3.890985488050839     1.654188325577722
    H               -0.568270930709514    -2.399095488050839     2.297418325577722
    C               -0.660860930709514     1.623404511949161     0.741758325577722
    C               -0.078860930709514     1.235404511949161    -0.577241674422278
    O               -0.832860930709514     1.025404511949161    -1.537241674422278
    O                1.169139069290486     1.231404511949161    -0.634241674422278
    H               -0.467860930709514     2.686404511949160     0.900758325577722
    H               -0.176860930709514     1.066404511949161     1.545758325577722
    H               -1.744580930709514     1.438984511949161     0.780918325577722

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-212ALA-221GLU-1-dimer.npy', np.array(charges))