import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.352685534700166     1.131138170682368    -1.461804787249851
    C               -0.850685534700166     2.012138170682368    -2.628804787249850
    H                0.359314465299834     1.683138170682368    -0.848804787249851
    H               -1.196685534700166     0.842138170682368    -0.835804787249851
    H                0.124314465299834     0.239138170682368    -1.865804787249851
    H               -1.208685534700166     2.957138170682368    -2.224804787249850
    H               -0.040955534700166     2.191359170682369    -3.351446787249850
    H               -1.685675534700166     1.514188170682368    -3.143425787249850
    C                0.828314465299834    -0.719861829317632     1.621195212750149
    C                1.026314465299834    -1.641861829317632     0.410195212750149
    C               -0.591685534700166    -0.831861829317632     2.168195212750149
    H                1.533314465299834    -0.977861829317632     2.411195212750150
    H                1.007314465299834     0.313138170682368     1.319195212750149
    H                0.302314465299834    -1.370861829317632    -0.355804787249851
    H                0.823314465299834    -2.674861829317631     0.696195212750149
    H               -0.714685534700166    -0.109861829317632     2.978195212750149
    H               -1.295685534700166    -0.580861829317632     1.374195212750149
    H                2.039784465299834    -1.581484829317632    -0.013162787249851
    H               -0.756615534700166    -1.845421829317632     2.562523912750149

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007LEU-017ARG-1-dimer.npy', np.array(charges))