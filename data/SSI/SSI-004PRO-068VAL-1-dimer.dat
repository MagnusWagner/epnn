import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.493656721897385    -1.001128989924298     0.936144360076820
    C               -1.071656721897385    -1.901128989924298     1.989144360076820
    C                0.322343278102615    -0.011128989924298     1.725144360076820
    H               -1.301656721897385    -0.487128989924298     0.414144360076820
    H                0.122343278102615    -1.560128989924298     0.229144360076820
    H               -2.000656721897385    -2.345128989924298     1.630144360076820
    H               -0.352656721897385    -2.673128989924298     2.264144360076820
    H                0.508343278102615     0.904871010075702     1.163144360076820
    H                1.271343278102615    -0.465128989924298     2.006144360076820
    H               -1.231518721897385    -1.218148989924298     2.836484360076820
    H               -0.284759721897385     0.170571010075702     2.624264360076820
    C                0.101343278102615     1.432871010075702    -1.729855639923180
    C                1.106343278102615     1.408871010075702    -2.870855639923180
    H                0.066343278102615     0.455871010075702    -1.259855639923180
    H                0.414343278102615     2.163871010075702    -0.981855639923180
    H               -0.892656721897385     1.693871010075702    -2.084855639923180
    H                2.052343278102615     1.029871010075702    -2.487855639923180
    H                0.774705278102615     0.756411010075702    -3.692015639923180
    H                1.274256278102615     2.426521010075702    -3.253205639923180

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004PRO-068VAL-1-dimer.npy', np.array(charges))