import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.222195497397768     1.573556463496538    -1.310290412501954
    C                0.163195497397768     2.976556463496537    -1.909290412501954
    O                0.045195497397768     1.635556463496538     0.089709587498046
    H               -0.537804502602232     0.931556463496538    -1.759290412501954
    H                1.205195497397768     1.141556463496538    -1.509290412501954
    H                0.761195497397768     3.640556463496537    -1.283290412501954
    H                0.338195497397768     0.766556463496538     0.460709587498046
    H               -0.873064502602232     3.343796463496538    -1.945410412501954
    H                0.617655497397768     2.967136463496537    -2.910980412501954
    C               -0.084804502602232    -2.527443536503462    -0.304290412501954
    C               -0.116804502602232    -1.532443536503462     0.847709587498046
    O               -1.079804502602232    -1.581443536503462     1.645709587498046
    O                0.817195497397768    -0.705443536503462     0.949709587498046
    H                0.862195497397768    -2.449443536503463    -0.835290412501954
    H               -0.879804502602232    -2.281443536503462    -1.012290412501954
    H               -0.231514502602232    -3.560217536503463     0.044789587498046

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032SER-057GLU-1-dimer.npy', np.array(charges))