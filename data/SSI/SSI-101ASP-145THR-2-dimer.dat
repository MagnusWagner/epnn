import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.049718099241423    -1.926121647697315    -1.606367236446147
    C                0.576718099241424    -0.942121647697315    -0.561367236446147
    O                0.533718099241423     0.266878352302685    -0.865367236446147
    O                0.230718099241424    -1.373121647697315     0.560632763553853
    H                1.361718099241424    -2.848121647697315    -1.111367236446147
    H                1.918718099241423    -1.505121647697315    -2.115367236446147
    H                0.271398099241423    -2.139761647697315    -2.353747236446147
    C               -1.470281900758577     1.624878352302685     1.740632763553853
    O               -0.775281900758577     2.079878352302685     0.582632763553853
    H               -0.301281900758576     1.314878352302685     0.185632763553853
    H               -1.913281900758577     0.652878352302685     1.517632763553853
    H               -0.758421900758577     1.531248352302685     2.573992763553853
    H               -2.266021900758576     2.346238352302685     1.978202763553853

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-101ASP-145THR-2-dimer.npy', np.array(charges))