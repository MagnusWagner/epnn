import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.936799494188076     0.600272421922786    -1.170776704744201
    C                1.589799494188076     1.392272421922786    -2.447776704744201
    H                1.574799494188076     1.116272421922786    -0.282776704744201
    H                1.455799494188076    -0.374727578077214    -1.217776704744201
    H                3.016799494188076     0.461272421922786    -1.099776704744202
    H                0.508799494188076     1.536272421922786    -2.493776704744201
    H                1.880799494188076     0.755272421922786    -3.281776704744201
    H                2.096519494188076     2.365522421922786    -2.525292704744202
    C               -0.124200505811924    -0.751727578077214     2.103223295255799
    C               -0.939200505811924    -0.503727578077214     0.859223295255799
    O               -1.153200505811924    -1.419727578077214     0.028223295255799
    O               -1.379200505811924     0.649272421922786     0.697223295255799
    H               -0.199200505811924     0.086272421922786     2.795223295255798
    H                0.919799494188076    -0.806727578077214     1.790223295255799
    H               -0.391950505811924    -1.688147578077214     2.614517295255799

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-049ILE-059ASP-1-dimer.npy', np.array(charges))