import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.438970174708977     0.863459666481976    -3.288793832670715
    C               -1.580970174708977    -0.002540333518024    -2.397793832670715
    O               -1.560970174708977     0.258459666481976    -1.180793832670715
    O               -0.924970174708977    -0.932540333518024    -2.912793832670715
    H               -2.908970174708977     1.658459666481976    -2.704793832670715
    H               -3.244970174708977     0.267459666481976    -3.712793832670715
    H               -1.838893174708977     1.330186666481976    -4.083823832670714
    C                1.840029825291023     0.849459666481976     3.666206167329285
    C                1.183029825291023    -1.155540333518024     0.715206167329285
    C                0.477029825291023     0.790459666481976     1.464206167329285
    C                1.370029825291023     0.295459666481976     2.359206167329285
    N                0.392029825291023    -0.129540333518024     0.449206167329285
    N                1.792029825291023    -0.927540333518024     1.874206167329285
    H               -0.207970174708977    -0.061540333518024    -0.363793832670715
    H                1.308029825291023    -2.032540333518024     0.089206167329285
    H               -0.066970174708977     1.719459666481976     1.540206167329285
    H                1.906029825291023     1.936459666481976     3.604206167329286
    H                2.850029825291023     0.473459666481976     3.830206167329286
    H                1.188336825291023     0.557969666481976     4.503066167329285

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028GLU-072HIE-1-dimer.npy', np.array(charges))