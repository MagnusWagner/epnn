import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.969977641588421    -1.590889386372379    -1.494892938451069
    C                2.089977641588421    -2.586889386372379    -1.250892938451069
    H                1.367977641588421    -0.666889386372379    -1.913892938451069
    H                0.248977641588421    -2.018889386372379    -2.192892938451069
    H                0.448977641588421    -1.374889386372379    -0.562892938451069
    H                1.686977641588421    -3.441889386372379    -0.706892938451069
    H                2.900960641588421    -2.120179386372379    -0.672544938451069
    H                2.471785641588422    -2.931449386372379    -2.223261938451069
    C                0.177977641588421     2.133110613627621     0.952107061548931
    C               -0.819022358411579     1.005110613627621     0.749107061548931
    O               -1.012022358411579     0.131110613627621     1.591107061548931
    N               -1.430022358411579     0.986110613627621    -0.413892938451069
    H               -0.238022358411579     3.061110613627621     0.556107061548931
    H                1.068977641588421     1.893110613627621     0.373107061548931
    H               -2.094022358411579     0.250110613627621    -0.603892938451069
    H               -1.174022358411579     1.659110613627621    -1.125892938451069
    H                0.440639641588421     2.286390613627621     2.009237061548931

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083THR-087GLN-1-dimer.npy', np.array(charges))