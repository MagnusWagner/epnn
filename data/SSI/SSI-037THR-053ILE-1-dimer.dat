import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.723953719645241    -0.990990315276054     2.387735943552616
    O               -0.293953719645241    -0.094990315276054     1.382735943552616
    H               -0.978953719645241    -0.058990315276054     0.705735943552616
    H               -0.942953719645241    -1.968990315276054     1.957735943552616
    H                0.006657080354759    -1.090880315276054     3.203965943552616
    H               -1.644476119645240    -0.522760315276053     2.766415943552616
    C                0.480046280354759    -0.059990315276054    -1.549264056447384
    C                0.641046280354759     1.206009684723946    -2.403264056447384
    H                0.917046280354759     0.115009684723946    -0.577264056447384
    H               -0.533953719645241    -0.424990315276054    -1.433264056447384
    H                1.058046280354759    -0.863990315276054    -2.009264056447384
    H                0.881046280354759     0.879009684723946    -3.417264056447384
    H                1.475359280354759     1.827875684723946    -2.046604056447384
    H               -0.301223219645241     1.770367684723946    -2.463504056447384

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037THR-053ILE-1-dimer.npy', np.array(charges))