import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.296534619920978    -1.704008638655969    -2.262598184211221
    C                0.072465380079022    -1.154008638655969    -2.642598184211221
    O                0.312465380079022     0.033991361344031    -2.332598184211222
    O                0.898465380079022    -1.870008638655969    -3.243598184211221
    H               -2.030534619920978    -1.280008638655969    -2.919598184211221
    H               -1.547534619920978    -1.355008638655969    -1.259598184211221
    H               -1.358144619920978    -2.802278638655969    -2.261878184211221
    C               -0.774534619920978     0.129991361344031     3.820401815788778
    C                0.685465380079022     1.900991361344031     1.011401815788779
    C               -0.261534619920978    -0.066008638655969     1.295401815788779
    C               -0.276534619920978     0.586991361344031     2.486401815788778
    N                0.347465380079022     0.773991361344031     0.390401815788779
    N                0.334465380079022     1.809991361344031     2.292401815788778
    H                0.491465380079022     0.572991361344031    -0.604598184211221
    H                1.183465380079022     2.746991361344031     0.548401815788779
    H               -0.628534619920978    -1.068008638655969     1.111401815788779
    H               -1.607534619920978    -0.557008638655969     3.656401815788779
    H               -1.151534619920978     0.991991361344031     4.372401815788779
    H               -0.002434619920978    -0.369388638655969     4.424121815788779

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083ASP-089HIE-1-dimer.npy', np.array(charges))