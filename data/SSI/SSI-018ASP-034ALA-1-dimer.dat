import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.549161941405478     0.309125674776481    -0.193440085173323
    C                1.183161941405478    -0.330874325223519    -0.076440085173323
    O                0.694161941405478    -0.443874325223519     1.070559914826677
    O                0.610161941405478    -0.728874325223519    -1.118440085173323
    H                2.418161941405478     1.383125674776481    -0.337440085173323
    H                3.071161941405478    -0.086874325223519    -1.067440085173323
    H                3.161011941405478     0.145917174776481     0.706004114826677
    C               -2.072838058594522     0.926125674776481    -0.390440085173323
    C               -2.873838058594522     0.236125674776481     0.703559914826677
    H               -1.767838058594522     0.201125674776481    -1.145440085173323
    H               -2.687838058594522     1.688125674776481    -0.873440085173323
    H               -1.189838058594522     1.402125674776481     0.035559914826677
    H               -3.271838058594522     1.018125674776481     1.353559914826677
    H               -2.242448058594522    -0.427861925223519     1.312215214826677
    H               -3.732018058594522    -0.291207425223519     0.261467014826677

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-018ASP-034ALA-1-dimer.npy', np.array(charges))