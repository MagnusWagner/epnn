import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.232346541892589    -2.136417034769468    -0.224648439323783
    C                0.713346541892589    -2.489417034769468    -1.622648439323783
    H                1.947346541892589    -1.316417034769468    -0.286648439323783
    H                0.409346541892589    -1.836417034769468     0.422351560676217
    H                1.718346541892589    -3.001417034769468     0.229351560676217
    H                0.359346541892589    -1.587417034769468    -2.118648439323783
    H                1.531686541892589    -2.947487034769468    -2.197528439323783
    H               -0.133913458107411    -3.171137034769469    -1.457098439323783
    C               -0.546653458107411     1.160582965230532     0.268351560676217
    C                0.274346541892589     2.409582965230532     0.376351560676217
    C               -1.708653458107411     1.133582965230532     1.214351560676217
    H               -0.939653458107411     1.075582965230532    -0.746648439323783
    H                0.093346541892589     0.305582965230532     0.464351560676217
    H               -0.374653458107411     3.287582965230532     0.354351560676217
    H               -1.342653458107411     1.127582965230532     2.242351560676217
    H               -2.293653458107411     2.045582965230532     1.071351560676217
    H                0.956266541892589     2.414932965230532    -0.486758439323783
    H                0.851256541892589     2.412492965230532     1.312921560676217
    H               -2.362493458107411     0.263232965230532     1.056301560676217

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007VAL-026GLU-1-dimer.npy', np.array(charges))