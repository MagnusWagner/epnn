import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.716145901922102    -0.454959109761229     2.103157463665648
    C               -0.934145901922102     0.869040890238771     2.842157463665648
    H               -1.290145901922102    -0.450959109761229     1.178157463665649
    H                0.341854098077898    -0.579959109761229     1.876157463665649
    H               -1.049145901922102    -1.284959109761229     2.728157463665649
    H               -0.592145901922102     1.690040890238771     2.218157463665649
    H               -0.345145901922102     0.854040890238771     3.757157463665649
    H               -1.995045901922102     1.017960890238771     3.091777463665649
    C                0.051854098077898     0.010040890238771    -1.657842536334352
    C                0.417854098077898    -1.482959109761229    -1.888842536334351
    C                1.192854098077898     1.058040890238771    -1.514842536334352
    H               -0.572145901922102     0.282040890238771    -2.511842536334351
    H               -0.562145901922102     0.033040890238771    -0.757842536334351
    H                0.898854098077898    -1.876959109761229    -0.992842536334351
    H                1.703854098077898     1.175040890238771    -2.469842536334351
    H                1.100664098077898    -1.571959109761229    -2.746662536334351
    H               -0.502945901922102    -2.075569109761229    -1.993462536334351
    H                0.758154098077898     2.022940890238771    -1.214822536334351
    H                1.959384098077898     0.774730890238771    -0.778522536334351

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-264ILE-271LEU-1-dimer.npy', np.array(charges))