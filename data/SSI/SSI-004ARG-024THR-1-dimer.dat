import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.411551828505292     1.890740605918722     0.023996328269927
    C               -0.787448171494708     0.886740605918722     0.644996328269927
    N               -1.520448171494708    -0.213259394081278     0.684996328269927
    N                0.461551828505292     0.796740605918722     0.209996328269927
    N               -1.314448171494708     2.040740605918723     1.002996328269927
    H               -1.144448171494708    -1.072259394081278     0.307996328269927
    H               -2.488448171494708    -0.166259394081278     0.959996328269927
    H                0.732551828505292    -0.105259394081278    -0.166003671730073
    H               -0.782448171494708     2.887740605918722     0.907996328269927
    H               -2.269448171494708     2.086740605918723     1.321996328269927
    H                0.974551828505292     2.625740605918723    -0.653003671730073
    H                2.307551828505292     1.502740605918722    -0.439003671730073
    H                1.710016528505292     2.415860605918722     0.943326328269927
    C                1.351551828505292    -3.006259394081277    -1.043003671730073
    O                0.367551828505292    -2.005259394081278    -1.271003671730073
    H               -0.213448171494708    -2.332259394081278    -1.974003671730073
    H                1.337551828505292    -3.714259394081278    -1.870003671730073
    H                2.341601728505292    -2.529809394081278    -0.990143671730073
    H                1.113389628505292    -3.511629394081278    -0.095437671730073

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004ARG-024THR-1-dimer.npy', np.array(charges))