import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.732564449283291    -1.335769600442030    -0.401021002899545
    C                2.862564449283290    -2.363769600442029    -0.445021002899545
    H                1.023564449283290    -1.599769600442030     0.380978997100455
    H                2.145564449283290    -0.355769600442030    -0.168021002899545
    H                1.219564449283290    -1.299769600442030    -1.362021002899545
    H                3.262564449283291    -2.445769600442030     0.560978997100455
    H                2.551624449283291    -3.367520600442030    -0.770291002899544
    H                3.676854449283291    -2.019149600442030    -1.099363002899545
    C               -0.997435550716709     1.236230399557970     0.344978997100456
    C               -1.688435550716709     1.863230399557970    -0.858021002899545
    C               -1.986435550716710     0.680230399557970     1.373978997100455
    H               -0.356435550716709     0.432230399557970    -0.014021002899545
    H               -0.364435550716709     1.980230399557971     0.830978997100455
    H               -2.413435550716709     2.598230399557970    -0.510021002899544
    H               -2.732435550716709     0.057230399557970     0.881978997100455
    H               -2.214815550716709     1.107399399557971    -1.459387002899544
    H               -0.948885550716709     2.426215699557970    -1.446333002899545
    H               -1.425345550716709     0.048821399557970     2.078605997100455
    H               -2.505005550716709     1.483034399557970     1.918583997100455

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-084LEU-090LEU-1-dimer.npy', np.array(charges))