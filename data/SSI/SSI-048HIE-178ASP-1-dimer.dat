import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.027833708606551     2.861006005877441     2.328334896381523
    C               -0.489833708606552     1.133006005877441    -0.460665103618477
    C               -1.284833708606552     1.923006005877441     1.427334896381523
    C               -0.659833708606552     0.750006005877441     1.700334896381523
    N               -1.171833708606552     2.144006005877441     0.067334896381523
    N               -0.168833708606552     0.280006005877441     0.504334896381523
    H               -0.251833708606552     1.009006005877441    -1.511665103618477
    H                0.292166291393448    -0.617993994122559     0.343334896381523
    H               -0.554833708606552     0.297006005877441     2.675334896381523
    H               -1.600833708606552     3.854006005877441     2.187334896381523
    H               -1.876833708606552     2.571006005877441     3.368334896381523
    H               -3.102703708606552     2.896286005877442     2.097233996381523
    C                2.528166291393449    -2.873993994122559    -1.588665103618477
    C                1.281166291393449    -2.056993994122559    -1.286665103618477
    O                0.688166291393448    -2.217993994122558    -0.195665103618477
    O                0.888166291393448    -1.254993994122559    -2.154665103618477
    H                3.333166291393448    -2.216993994122559    -1.916665103618477
    H                2.296166291393448    -3.557993994122559    -2.407665103618477
    H                2.850886291393449    -3.466243994122558    -0.719701103618477

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-048HIE-178ASP-1-dimer.npy', np.array(charges))