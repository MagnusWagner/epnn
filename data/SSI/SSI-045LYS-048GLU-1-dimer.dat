import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.806516409159936    -0.778093135989993     0.587365850580818
    C               -2.900516409159936     0.273906864010006     0.325365850580818
    C               -2.209516409159936    -2.150093135989994     0.074365850580818
    H               -0.917516409159936    -0.502093135989994     0.106365850580818
    H               -1.601516409159936    -0.825093135989994     1.658365850580818
    H               -3.687516409159936     0.170906864010006     1.073365850580818
    H               -3.338516409159936     0.116906864010006    -0.659634149419182
    H               -2.250516409159936    -2.160093135989993    -1.014634149419182
    H               -1.427516409159936    -2.860093135989993     0.365365850580818
    H               -2.510476409159936     1.301722864010007     0.363646850580818
    H               -3.171306409159936    -2.461283135989993     0.508098850580818
    C                2.160483590840064     2.007906864010007    -0.460634149419182
    C                1.698483590840064     0.576906864010006    -0.224634149419182
    O                0.808483590840064     0.127906864010006    -0.988634149419182
    O                2.246483590840064    -0.065093135989994     0.709365850580818
    H                2.066483590840064     2.236906864010006    -1.523634149419182
    H                3.211483590840064     2.117906864010007    -0.181634149419182
    H                1.548473590840064     2.694521864010006     0.142688850580818

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-045LYS-048GLU-1-dimer.npy', np.array(charges))