import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -4.097488184224034    -0.384307113129344    -0.951939532549263
    C               -2.601488184224034    -0.589307113129344    -0.738939532549263
    O               -1.821488184224035     0.192692886870656    -1.312939532549263
    O               -2.208488184224035    -1.512307113129344     0.009060467450736
    H               -4.308488184224035    -0.269307113129344    -2.016939532549263
    H               -4.395488184224035     0.537692886870656    -0.453939532549264
    H               -4.695436184224036    -1.213395113129344    -0.545650532549264
    C                3.230511815775965     1.107692886870656     2.182060467450736
    C                1.670511815775965    -0.448307113129344    -0.699939532549264
    C                1.038511815775965     1.031692886870656     0.798060467450737
    C                2.315511815775965     0.665692886870656     1.080060467450737
    N                0.663511815775965     0.324692886870656    -0.318939532549264
    N                2.694511815775965    -0.261307113129344     0.128060467450736
    H               -0.266488184224035     0.319692886870656    -0.735939532549264
    H                1.654511815775965    -1.124307113129344    -1.547939532549264
    H                0.438511815775965     1.737692886870656     1.351060467450737
    H                3.510511815775965     0.224692886870656     2.752060467450737
    H                2.691511815775965     1.781692886870656     2.850060467450736
    H                4.144076815775965     1.599058886870656     1.816057887450736

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-043ASP-054HIE-1-dimer.npy', np.array(charges))