import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.776076790431882     1.029261507922240    -2.404000096766981
    C                0.160923209568118     0.662261507922240    -1.221000096766981
    O                0.461923209568118    -0.539738492077760    -1.034000096766981
    O                0.669923209568118     1.563261507922240    -0.534000096766981
    H               -0.317076790431882     1.750261507922240    -3.062000096766981
    H               -1.656076790431882     1.508261507922240    -1.976000096766981
    H               -1.122820790431882     0.157081507922240    -2.977650096766980
    C               -0.417076790431882    -1.878738492077760     2.680999903233019
    O               -0.089076790431882    -0.676738492077760     2.070999903233019
    H                0.319923209568118    -0.114738492077760     2.735999903233020
    H               -1.102076790431882    -1.694738492077760     3.509999903233019
    H               -0.892475790431882    -2.557978492077760     1.958069903233019
    H                0.511683209568118    -2.322728492077760     3.068659903233019

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-006ASP-010THR-1-dimer.npy', np.array(charges))