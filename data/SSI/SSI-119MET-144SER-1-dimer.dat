import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.460389476254301     0.928248047170358    -0.588602377837259
    C                0.584389476254301     1.295248047170358    -3.082602377837259
    S               -0.338610523745699     0.386248047170358    -1.876602377837259
    H                0.309389476254301     2.003248047170358    -0.478602377837259
    H                0.081389476254301     0.432248047170358     0.294397622162741
    H                1.526389476254300     0.715248047170359    -0.667602377837259
    H                0.880389476254301     2.253248047170358    -2.651602377837259
    H               -0.061610523745699     1.532248047170358    -3.924602377837259
    H                1.494699476254300     0.750655147170359    -3.373732377837259
    C               -0.603610523745699    -0.740751952829642     2.583397622162741
    C               -0.532610523745699    -2.041751952829642     1.781397622162741
    O                0.680389476254301    -0.371751952829642     3.048397622162741
    H               -1.011610523745699     0.059248047170358     1.966397622162741
    H               -1.272610523745699    -0.873751952829641     3.436397622162741
    H                0.228389476254301    -1.933751952829642     1.007397622162741
    H                0.600389476254301     0.464248047170358     3.535397622162741
    H               -1.505420523745699    -2.232838952829642     1.304817622162741
    H               -0.237250523745699    -2.867332952829642     2.445607622162741

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-119MET-144SER-1-dimer.npy', np.array(charges))