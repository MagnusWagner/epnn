import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                2.159202131948845     0.514482300537275    -0.005932343829231
    S                0.909202131948845    -0.446517699462725    -0.877932343829231
    H                1.466202131948845    -1.654517699462725    -0.697932343829231
    H                3.143202131948845     0.234482300537275    -0.391932343829231
    H                2.134202131948845     0.229482300537275     1.049067656170769
    H                2.042762131948845     1.604492300537275    -0.097122343829231
    C               -1.798797868051155     0.487482300537275     1.638067656170769
    N               -2.159797868051155     0.020482300537275     0.215067656170769
    H               -1.902797868051155     0.697482300537275    -0.503932343829231
    H               -1.707797868051155    -0.864517699462725     0.004067656170769
    H               -3.160797868051155    -0.130517699462725     0.138067656170769
    H               -0.711797868051155     0.536482300537275     1.760067656170769
    H               -2.203797868051155    -0.194517699462725     2.393067656170769
    H               -2.225037868051155     1.492092300537275     1.776177656170769

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-084CYS-090LYS-1-dimer.npy', np.array(charges))