import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.000878316116555    -1.424728511193072    -0.132699693234341
    C                1.639878316116555    -0.261728511193072     0.610300306765659
    C                1.813878316116555    -1.522728511193072    -1.417699693234341
    H               -0.059121683883445    -1.258728511193072    -0.324699693234341
    H                1.134878316116555    -2.336728511193072     0.450300306765659
    H                1.266878316116555     0.679271488806928     0.208300306765659
    H                1.453878316116555    -0.312728511193072     1.683300306765659
    H                1.807878316116555    -2.543728511193072    -1.800699693234341
    H                2.710348316116555    -0.358118511193072     0.376203306765659
    H                2.818808316116555    -1.207168511193072    -1.100629693234341
    H                1.434528316116555    -0.818528511193072    -2.172809693234341
    C               -1.519121683883445     1.293271488806928     0.245300306765659
    C               -2.883121683883445     1.816271488806928     0.689300306765659
    H               -1.591121683883445     0.864271488806928    -0.755699693234341
    H               -0.793121683883445     2.104271488806928     0.224300306765659
    H               -1.181121683883445     0.528271488806928     0.945300306765659
    H               -3.181121683883445     2.587271488806928    -0.011699693234341
    H               -3.607801683883445     0.989503488806928     0.653354306765659
    H               -2.837605683883445     2.269295488806928     1.690648306765659

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028PRO-058LEU-1-dimer.npy', np.array(charges))