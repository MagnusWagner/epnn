import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.071227556486585    -1.156237083137807    -0.410000792976722
    C                0.930772443513415    -1.592237083137807    -1.492000792976721
    C               -0.942227556486585    -2.301237083137807     0.144999207023278
    H                0.484772443513415    -0.719237083137807     0.421999207023279
    H               -0.724227556486585    -0.381237083137807    -0.798000792976721
    H                0.381772443513415    -2.052237083137808    -2.316000792976721
    H               -0.303227556486585    -3.020237083137808     0.655999207023279
    H                1.654592443513415    -2.316057083137807    -1.089300792976721
    H                1.467302443513415    -0.725147083137807    -1.904660792976721
    H               -1.644367556486585    -1.894057083137807     0.887429207023279
    H               -1.457957556486585    -2.825617083137808    -0.672950792976721
    C               -0.616227556486585     2.472762916862193     0.478999207023279
    C                0.696772443513415     2.495762916862192     1.246999207023278
    H               -0.426227556486585     2.323762916862193    -0.585000792976721
    H               -1.240227556486585     1.651762916862193     0.833999207023279
    H               -1.155227556486585     3.412762916862193     0.615999207023279
    H                1.234772443513415     1.561762916862192     1.087999207023278
    H                1.304822443513415     3.351322916862193     0.917939207023279
    H                0.448882443513415     2.599112916862193     2.313709207023279

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-098LEU-101VAL-1-dimer.npy', np.array(charges))