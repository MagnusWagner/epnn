import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.459621104428745     0.084528418866127    -0.120958273984358
    C                2.854621104428746    -0.369471581133873     1.273041726015642
    H                3.354621104428746     0.324528418866127    -0.694958273984358
    H                1.910621104428746    -0.706471581133873    -0.625958273984358
    H                1.830621104428746     0.964528418866127    -0.035958273984358
    H                3.501621104428745    -1.244471581133873     1.196041726015642
    H                3.413231104428745     0.439448418866127     1.766601726015642
    H                1.938861104428746    -0.638601581133873     1.819801726015642
    C               -1.358378895571254    -0.048471581133873    -0.097958273984358
    C               -2.579378895571255     0.585528418866127     0.571041726015642
    C               -1.470378895571254    -0.250471581133873    -1.634958273984358
    H               -0.506378895571254     0.594528418866127     0.122041726015642
    H               -1.205378895571254    -1.015471581133873     0.383041726015642
    H               -3.456378895571254    -0.010471581133873     0.330041726015642
    H               -1.707378895571254     0.704528418866127    -2.112958273984358
    H               -0.487378895571254    -0.579471581133873    -1.980958273984358
    H               -2.740638895571254     1.614238418866127     0.216421726015642
    H               -2.506258895571255     0.529778418866127     1.667191726015642
    H               -2.221798895571255    -0.996171581133873    -1.933808273984358

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-174VAL-273GLU-2-dimer.npy', np.array(charges))