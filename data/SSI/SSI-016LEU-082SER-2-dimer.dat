import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.611526755483303    -0.522238340157746     1.073081467417858
    C               -1.637526755483304    -1.079238340157746     2.052081467417858
    H               -0.381526755483304     0.504761659842254     1.333081467417858
    H                0.309473244516696    -1.102238340157746     1.123081467417858
    H               -1.025526755483303    -0.575238340157746     0.068081467417858
    H               -1.299526755483303    -0.845238340157746     3.062081467417858
    H               -2.648436755483304    -0.669668340157746     1.909531467417858
    H               -1.687616755483304    -2.174748340157746     1.966411467417858
    C                1.258473244516696     1.446761659842254    -1.439918532582142
    O                0.808473244516697     0.111761659842254    -1.479918532582142
    H                1.541473244516696    -0.450238340157746    -1.767918532582142
    H                1.650473244516696     1.733761659842254    -2.417918532582142
    H                2.062473244516696     1.522761659842254    -0.705918532582142
    H                0.442353244516696     2.124511659842254    -1.149048532582142

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016LEU-082SER-2-dimer.npy', np.array(charges))