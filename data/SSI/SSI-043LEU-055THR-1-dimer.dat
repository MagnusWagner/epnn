import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.014920501466122     0.926751133200096     1.144305566970848
    C               -1.387079498533878     1.517751133200096     1.295305566970848
    C                0.974920501466122     1.105751133200096     2.333305566970848
    H               -0.085079498533878    -0.141248866799904     0.944305566970848
    H                0.482920501466122     1.374751133200096     0.268305566970848
    H               -1.938079498533877     0.919751133200096     2.022305566970848
    H                1.052920501466122     2.167751133200096     2.549305566970848
    H               -1.899219498533878     1.507131133200096     0.321858666970848
    H               -1.321129498533878     2.551951133200096     1.664196566970848
    H                0.629250501466122     0.618641133200096     3.257013566970848
    H                1.991620501466122     0.778491133200096     2.070217566970848
    C                0.468920501466122    -1.333248866799904    -1.763694433029152
    C               -0.077079498533878    -2.155248866799904    -2.927694433029153
    H                0.001920501466122    -0.346248866799904    -1.749694433029152
    H                0.239920501466122    -1.844248866799904    -0.826694433029152
    H                1.550920501466122    -1.231248866799904    -1.850694433029152
    H                0.379920501466122    -3.143248866799904    -2.890694433029152
    H                0.147460501466122    -1.680908866799904    -3.894431433029153
    H               -1.169079498533878    -2.266628866799904    -2.856037433029152

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-043LEU-055THR-1-dimer.npy', np.array(charges))