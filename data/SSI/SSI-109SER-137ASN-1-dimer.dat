import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.681475531171122    -1.162157153620633    -1.420344327587535
    C               -2.697475531171122    -0.198157153620633    -0.838344327587535
    O               -0.650475531171122    -0.426157153620633    -2.064344327587535
    H               -1.271475531171122    -1.790157153620633    -0.630344327587535
    H               -2.170475531171122    -1.809157153620633    -2.146344327587534
    H               -2.163475531171122     0.487842846379367    -0.182344327587535
    H               -0.034475531171122    -1.065157153620633    -2.449344327587535
    H               -3.469562531171122    -0.744580153620633    -0.276824327587535
    H               -3.113848531171122     0.396868846379367    -1.664524327587535
    C                0.745524468828878     0.876842846379367     2.433655672412466
    C                1.349524468828878     0.466842846379367     1.104655672412465
    O                2.401524468828878     0.956842846379367     0.703655672412465
    N                0.650524468828878    -0.379157153620633     0.376655672412466
    H                0.966524468828878    -0.560157153620633    -0.560344327587535
    H               -0.197475531171122    -0.777157153620633     0.744655672412466
    H                1.527524468828878     1.306842846379367     3.060655672412466
    H                0.355524468828878    -0.010157153620633     2.935655672412465
    H               -0.063785531171122     1.608737846379367     2.294585672412466

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-109SER-137ASN-1-dimer.npy', np.array(charges))