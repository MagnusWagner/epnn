import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.447514890112030    -0.462846382826388     1.929990067466540
    O               -0.673514890112030    -0.796846382826388     0.786990067466540
    H               -0.293514890112030    -1.694846382826388     0.873990067466540
    H               -2.104514890112030    -1.294846382826388     2.184990067466540
    H               -2.060514890112030     0.408153617173612     1.694990067466540
    H               -0.783024890112030    -0.228746382826388     2.774773067466540
    C                1.761485109887970     0.748153617173612    -1.425009932533460
    O                0.359485109887970     0.605153617173612    -1.333009932533460
    H                0.127485109887970     0.132153617173612    -0.510009932533460
    H                2.218485109887970    -0.239846382826388    -1.388009932533460
    H                1.986025109887970     1.222493617173612    -2.391746932533460
    H                2.155065109887969     1.340683617173612    -0.585956932533460

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028SER-055THR-1-dimer.npy', np.array(charges))