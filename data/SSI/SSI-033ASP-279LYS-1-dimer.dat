import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.927418090406554    -1.792348779980955     0.902119291376862
    C               -0.967418090406554    -0.706348779980955     0.535119291376862
    O               -1.228418090406554     0.494651220019045     0.722119291376862
    O                0.110581909593446    -1.050348779980955     0.018119291376862
    H               -1.421418090406554    -2.556348779980955     1.490119291376862
    H               -2.258418090406554    -2.259348779980955    -0.027880708623138
    H               -2.805026090406554    -1.409338779980955     1.443519291376862
    C                2.599581909593446     1.597651220019045    -0.788880708623138
    N                1.179581909593446     1.241651220019045    -1.183880708623138
    H                0.792581909593446     0.504651220019045    -0.589880708623138
    H                0.561581909593446     2.051651220019045    -1.127880708623138
    H                1.137581909593445     0.858651220019045    -2.129880708623137
    H                2.658581909593445     1.738651220019045     0.293119291376862
    H                2.879581909593446     2.539651220019045    -1.271880708623138
    H                3.321841909593446     0.827771220019045    -1.098110708623138

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-033ASP-279LYS-1-dimer.npy', np.array(charges))