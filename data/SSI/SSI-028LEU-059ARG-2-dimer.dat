import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.732276445930258     1.216687697667567     0.574491512359332
    C                2.864276445930258     0.657687697667567    -0.262508487640668
    H                1.041276445930258     0.427687697667567     0.840491512359332
    H                2.155276445930258     1.624687697667567     1.494491512359332
    H                1.199276445930258     2.017687697667567     0.070491512359332
    H                3.640276445930258     1.420687697667567    -0.314508487640668
    H                2.576966445930258     0.394077697667567    -1.291078487640668
    H                3.295946445930258    -0.222982302332433     0.235571512359332
    C               -1.777723554069742    -0.285312302332433     0.334491512359332
    C               -2.095723554069742    -0.125312302332433    -1.144508487640668
    C               -0.854723554069742    -1.476312302332433     0.523491512359332
    H               -1.276723554069742     0.599687697667567     0.722491512359332
    H               -2.702723554069742    -0.439312302332433     0.891491512359332
    H               -2.682723554069742    -0.986312302332433    -1.469508487640668
    H               -1.151723554069742    -0.151312302332433    -1.694508487640668
    H               -1.361723554069742    -2.357312302332434     0.130491512359332
    H                0.052276445930258    -1.313312302332433    -0.059508487640668
    H               -2.632393554069743     0.789967697667567    -1.434758487640668
    H               -0.586133554069742    -1.654372302332433     1.575231512359332

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028LEU-059ARG-2-dimer.npy', np.array(charges))