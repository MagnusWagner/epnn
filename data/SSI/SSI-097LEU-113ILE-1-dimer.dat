import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.026050648907112     0.305210060211025    -0.149139490504026
    C                3.062050648907112    -0.729789939788975    -0.528139490504026
    H                1.547050648907112     0.017210060211025     0.784860509495974
    H                2.514050648907113     1.267210060211025     0.005860509495974
    H                1.307050648907112     0.424210060211025    -0.952139490504026
    H                2.590050648907113    -1.711789939788975    -0.540139490504026
    H                3.482321648907113    -0.510643939788975    -1.520789490504026
    H                3.876192648907113    -0.737742939788975     0.211530509495974
    C               -1.214949351092888     0.328210060211025     0.088860509495974
    C               -2.295949351092887     0.007210060211025    -0.936139490504026
    C               -1.664949351092888     0.111210060211025     1.527860509495974
    H               -0.416949351092888    -0.381789939788975    -0.086139490504026
    H               -0.862949351092888     1.353210060211025    -0.027139490504026
    H               -3.177949351092888     0.587210060211025    -0.708139490504026
    H               -0.896949351092888     0.500210060211025     2.191860509495974
    H               -2.577949351092887     0.678210060211025     1.709860509495974
    H               -1.854949351092888    -0.935789939788975     1.747860509495974
    H               -1.957953751092887     0.255651060211025    -1.953019490504026
    H               -2.526281451092888    -1.067913939788975    -0.903649490504026

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-097LEU-113ILE-1-dimer.npy', np.array(charges))