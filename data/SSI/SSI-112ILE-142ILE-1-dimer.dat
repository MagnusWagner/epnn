import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.407299878045843     0.293770480147799     0.428221470256349
    C                1.924299878045844     0.984770480147799     1.703221470256349
    C                0.955299878045843     1.239770480147798    -0.688778529743651
    H                2.173299878045844    -0.374229519852201     0.031221470256349
    H                0.564299878045843    -0.336229519852201     0.705221470256349
    H                2.216299878045843     0.202770480147799     2.394221470256349
    H                1.783299878045844     1.865770480147799    -1.024778529743651
    H                0.611299878045844     0.648770480147798    -1.536778529743651
    H                0.133299878045844     1.869770480147799    -0.349778529743651
    H                2.801999878045843     1.613230480147799     1.491831470256349
    H                1.136919878045844     1.573510480147798     2.196591470256349
    C               -2.048700121954156    -1.286229519852201     0.051221470256349
    C               -2.141700121954157    -1.207229519852202    -1.465778529743651
    H               -1.244700121954156    -1.953229519852202     0.359221470256349
    H               -1.850700121954157    -0.291229519852201     0.450221470256349
    H               -2.991700121954156    -1.644229519852201     0.466221470256349
    H               -1.172700121954156    -0.912229519852201    -1.868778529743651
    H               -2.845700121954156    -0.412229519852201    -1.709778529743651
    H               -2.464220121954157    -2.146129519852201    -1.939528529743651

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-112ILE-142ILE-1-dimer.npy', np.array(charges))