import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.637191418450691     2.628880669000567    -1.423357329456090
    C               -0.896191418450691     1.815880669000567    -0.404357329456090
    O               -1.293191418450691     0.678880669000567    -0.077357329456090
    N                0.107808581549309     2.390880669000567     0.167642670543910
    H               -1.841191418450691     1.984880669000567    -2.280357329456090
    H               -1.018191418450691     3.457880669000567    -1.768357329456090
    H                0.605808581549309     1.860880669000567     0.868642670543910
    H                0.361808581549309     3.335880669000567    -0.071357329456090
    H               -2.586091418450691     3.017070669000567    -1.024737329456090
    C                1.004808581549309    -2.564119330999433    -0.838357329456090
    C                0.906808581549309    -1.860119330999433     0.502642670543910
    O               -0.173191418450691    -1.884119330999433     1.128642670543910
    O                1.923808581549310    -1.244119330999433     0.915642670543910
    H                1.013808581549309    -3.638119330999433    -0.683357329456090
    H                1.945808581549310    -2.307119330999433    -1.329357329456090
    H                0.163888581549309    -2.302359330999433    -1.497397329456090

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-055GLN-272GLU-1-dimer.npy', np.array(charges))