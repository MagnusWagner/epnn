import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.272686068629638    -0.461999216437592    -1.456316850512788
    C               -0.035686068629638     0.596000783562408    -2.540316850512788
    C               -1.525686068629638    -1.238999216437592    -1.684316850512788
    H                0.562313931370362    -1.133999216437592    -1.424316850512788
    H               -0.341686068629638     0.047000783562408    -0.496316850512788
    H                0.858313931370362     1.141000783562408    -2.234316850512788
    H               -0.863686068629638     1.307000783562408    -2.479316850512788
    H               -2.404686068629638    -0.601999216437592    -1.558316850512788
    H               -1.513686068629638    -1.665999216437592    -2.689316850512788
    H                0.077953731370362     0.313687783562408    -3.597376850512788
    H               -1.513994068629638    -2.046508516437592    -0.937466850512788
    C                1.072313931370362     0.358000783562408     2.066683149487212
    C                0.736313931370362     0.708000783562408     3.505683149487212
    H                1.194313931370362     1.260000783562408     1.465683149487212
    H                1.988313931370362    -0.230999216437592     2.036683149487212
    H                0.266313931370362    -0.248999216437592     1.654683149487212
    H                0.617313931370362    -0.219999216437592     4.068683149487212
    H               -0.202776768629638     1.279718783562408     3.540993149487212
    H                1.578472531370362     1.264413783562408     3.942913149487212

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-108LYS-131ALA-1-dimer.npy', np.array(charges))