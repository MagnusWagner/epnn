import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.394588375183070    -0.252142708025453     1.876220654645729
    C               -2.362588375183070     0.765857291974547     2.507220654645729
    H               -1.586588375183070    -1.266142708025453     2.228220654645729
    H               -1.539588375183070    -0.254142708025453     0.797220654645729
    H               -0.364588375183070     0.024857291974547     2.100220654645729
    H               -3.366588375183070     0.531857291974547     2.174220654645729
    H               -2.352564375183070     0.693547291974547     3.604795654645729
    H               -2.129578375183069     1.787797291974547     2.173526654645729
    C                1.018411624816930    -0.283142708025453    -1.011779345354271
    C                1.087411624816930    -1.305142708025453    -2.154779345354271
    C                1.720411624816930     1.056857291974547    -1.283779345354271
    H               -0.033588375183070    -0.082142708025453    -0.815779345354271
    H                1.446411624816931    -0.726142708025453    -0.109779345354271
    H                2.126411624816930    -1.394142708025453    -2.468779345354271
    H                1.380411624816930     1.465857291974547    -2.233779345354271
    H                0.495374624816930    -0.966942708025453    -3.017978645354271
    H                0.798837624816930    -2.310842708025453    -1.815238345354271
    H                1.491948624816930     1.782857291974547    -0.489599345354271
    H                2.811425624816930     0.924637291974547    -1.330743345354271

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012VAL-023LEU-1-dimer.npy', np.array(charges))