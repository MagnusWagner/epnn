import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.373817921277170     1.572764672417154    -1.086449188845148
    C                1.132817921277171     0.711764672417154    -0.927449188845148
    O                0.223817921277171     0.751764672417154    -1.751449188845148
    N                1.077817921277171    -0.062235327582846     0.150550811154852
    H                0.214817921277171    -0.550235327582846     0.340550811154852
    H                1.816817921277170    -0.041235327582846     0.834550811154852
    H                3.258817921277171     1.000764672417154    -0.810449188845148
    H                2.274817921277171     2.401764672417154    -0.383449188845148
    H                2.484636621277171     1.972424672417154    -2.105269188845148
    C               -2.670182078722830    -1.923235327582846     1.609550811154852
    O               -1.748182078722829    -0.847235327582846     1.684550811154852
    H               -2.088182078722829    -0.096235327582846     1.135550811154852
    H               -3.690182078722830    -1.538235327582846     1.578550811154852
    H               -2.556182078722829    -2.559235327582846     2.489550811154852
    H               -2.457688078722830    -2.511735327582846     0.704830811154852

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053ASN-063SER-1-dimer.npy', np.array(charges))