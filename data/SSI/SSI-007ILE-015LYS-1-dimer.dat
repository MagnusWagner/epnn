import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.029534232786862     1.269099974208946    -0.873577622492251
    C               -1.114534232786862     2.358099974208947    -1.377577622492251
    H               -2.725534232786862     0.949099974208946    -1.645577622492251
    H               -1.437534232786862     0.405099974208946    -0.588577622492251
    H               -2.577534232786862     1.606099974208946     0.001422377507749
    H               -0.547534232786862     1.965099974208946    -2.222577622492251
    H               -0.408534232786862     2.573099974208946    -0.575577622492251
    H               -1.619674232786862     3.283602974208946    -1.691065622492251
    C                0.933465767213138    -0.838900025791054     0.351422377507749
    C                0.219465767213138    -0.936900025791054     1.684422377507749
    C                2.056465767213138    -1.882900025791054     0.246422377507749
    H                0.212465767213138    -1.064900025791054    -0.434577622492251
    H                1.297465767213138     0.172099974208946     0.193422377507749
    H                0.075465767213138    -1.986900025791054     1.948422377507749
    H               -0.772534232786862    -0.492900025791054     1.584422377507749
    H                2.886465767213138    -1.857900025791054     0.922422377507749
    H                1.589465767213138    -2.860900025791054     0.399422377507749
    H                0.749675767213138    -0.420355025791054     2.498089177507749
    H                2.500015767213138    -1.895281025791054    -0.760113622492251

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007ILE-015LYS-1-dimer.npy', np.array(charges))