import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.262643385330807    -0.582864732161486     0.435657186217869
    C                2.217643385330807     0.008135267838514     1.489657186217869
    C                1.612643385330807    -1.943864732161486    -0.140342813782131
    H                0.279643385330807    -0.677864732161486     0.900657186217868
    H                1.157643385330807     0.123135267838514    -0.390342813782131
    H                3.199643385330807     0.132135267838514     1.037657186217869
    H                1.957643385330807    -2.614864732161486     0.642657186217868
    H                0.710643385330807    -2.376864732161486    -0.573342813782131
    H                2.288303385330807    -0.618714732161486     2.390807186217869
    H                1.829893385330807     1.006755267838514     1.739487186217869
    H                2.372323385330807    -1.883834732161486    -0.933612813782131
    C               -2.155356614669193     0.881135267838514    -0.303342813782131
    C               -2.836356614669193     1.596135267838514    -1.451342813782131
    H               -1.143356614669193     1.245135267838514    -0.159342813782131
    H               -2.711356614669193     1.051135267838514     0.618657186217869
    H               -2.111356614669193    -0.190864732161486    -0.499342813782131
    H               -2.946356614669194     2.647135267838514    -1.189342813782132
    H               -2.252896614669194     1.498775267838514    -2.378762813782132
    H               -3.835586614669193     1.150835267838514    -1.566442813782131

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-192GLN-197VAL-1-dimer.npy', np.array(charges))