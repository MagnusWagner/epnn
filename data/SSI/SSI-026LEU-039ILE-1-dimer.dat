import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.030987012613800     0.158677198763611    -1.768449023000070
    C                2.525987012613800     0.306677198763611    -1.479449023000070
    H                0.460987012613800     0.607677198763611    -0.965449023000070
    H                0.772987012613800     0.679677198763611    -2.686449023000070
    H                0.765987012613800    -0.894322801236390    -1.869449023000070
    H                3.067987012613800    -0.113322801236389    -2.324449023000070
    H                2.805380012613800    -0.231278801236389    -0.561549023000070
    H                2.782917012613800     1.371413198763610    -1.377838023000070
    C               -1.641012987386200    -0.243322801236389     0.749550976999930
    C               -0.856012987386200    -1.379322801236389     1.421550976999930
    C               -1.171012987386200     1.138677198763611     1.141550976999930
    H               -1.519012987386200    -0.331322801236389    -0.330449023000070
    H               -2.710012987386200    -0.334322801236389     0.942550976999930
    H                0.208987012613800    -1.149322801236389     1.367550976999930
    H               -0.088012987386200     1.224677198763610     1.051550976999930
    H               -1.644012987386200     1.874677198763611     0.490550976999930
    H               -1.435012987386200     1.337677198763610     2.161550976999929
    H               -1.139127987386200    -1.510642801236389     2.476350976999930
    H               -1.007607987386200    -2.309629801236389     0.854500976999930

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-026LEU-039ILE-1-dimer.npy', np.array(charges))