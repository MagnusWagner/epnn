import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -3.030037915786098     2.132387631241621    -0.171043639000373
    C               -1.808037915786098     1.345387631241621    -0.590043639000373
    O               -0.891037915786098     1.119387631241621     0.200956360999627
    N               -1.790037915786098     0.905387631241621    -1.841043639000373
    H               -3.164037915786098     2.969387631241621    -0.858043639000373
    H               -2.857037915786097     2.543387631241621     0.819956360999627
    H               -0.978037915786098     0.388387631241621    -2.144043639000373
    H               -2.534037915786098     1.135387631241621    -2.483043639000373
    H               -3.936077915786098     1.508807631241621    -0.186252639000373
    C                2.407962084213902    -2.709612368758379     0.834956360999627
    C                1.837962084213902    -1.329612368758379     0.561956360999627
    O                1.236962084213902    -1.084612368758379    -0.484043639000373
    N                2.022962084213902    -0.413612368758379     1.503956360999627
    H                1.865962084213902    -3.123612368758379     1.684956360999627
    H                3.458962084213902    -2.615612368758379     1.109956360999627
    H                1.615962084213902     0.498387631241621     1.352956360999627
    H                2.531962084213903    -0.630612368758379     2.346956360999627
    H                2.320632084213903    -3.373632368758380    -0.037653639000373

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016GLN-101GLN-1-dimer.npy', np.array(charges))