import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.854852496417481    -0.936190570662281    -0.087114201929903
    C                1.842852496417481    -0.449190570662281    -1.149114201929903
    C                1.471852496417481    -1.439190570662281     1.219885798070097
    H                0.178852496417481    -0.121190570662281     0.141885798070097
    H                0.258852496417481    -1.751190570662281    -0.504114201929903
    H                2.687852496417482    -1.127190570662281    -1.174114201929903
    H                2.052852496417481    -0.638190570662281     1.667885798070097
    H                2.254082496417481     0.534289429337719    -0.877730201929903
    H                1.357142496417481    -0.420410570662281    -2.135651201929903
    H                0.683392496417481    -1.722690570662281     1.932599798070097
    H                2.142512496417481    -2.290850570662281     1.033110798070097
    C               -2.201147503582519     0.900809429337719     0.566885798070097
    C               -1.908147503582519     1.861809429337719    -0.567114201929903
    H               -2.085147503582519    -0.142190570662281     0.280885798070097
    H               -1.521147503582519     1.099809429337719     1.392885798070097
    H               -3.208147503582519     1.053809429337719     0.936885798070097
    H               -0.858147503582519     1.786809429337719    -0.845114201929903
    H               -2.546307503582518     1.587799429337719    -1.420152201929903
    H               -2.114177503582519     2.889049429337718    -0.231955201929903

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-258LEU-261VAL-1-dimer.npy', np.array(charges))