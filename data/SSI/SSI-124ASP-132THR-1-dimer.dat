import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.791713149187873    -1.291404199965127     2.345227704538274
    C               -0.124713149187873    -1.932404199965126     1.139227704538275
    O                0.369286850812127    -1.180404199965127     0.266227704538275
    O               -0.106713149187873    -3.178404199965127     1.054227704538275
    H               -1.467713149187873    -0.514404199965127     1.985227704538274
    H               -0.036713149187873    -0.799404199965127     2.957227704538274
    H               -1.370633149187873    -2.016844199965127     2.935638704538274
    C                0.457286850812127     1.672595800034874    -1.279772295461725
    C               -0.718713149187873     1.279595800034873    -2.184772295461725
    C                0.812286850812127     3.142595800034873    -1.459772295461725
    O                0.118286850812127     1.430595800034874     0.081227704538275
    H                1.328286850812127     1.067595800034874    -1.526772295461726
    H               -1.571713149187873     1.883595800034874    -1.882772295461725
    H               -0.072713149187873     3.732595800034873    -1.682772295461725
    H                1.223286850812127     3.545595800034874    -0.543772295461725
    H                1.540286850812127     3.257595800034873    -2.260772295461726
    H                0.185286850812127     0.451595800034873     0.194227704538275
    H               -0.984323149187873     0.222435800034873    -2.036872295461726
    H               -0.465143149187873     1.458245800034873    -3.240132295461725

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-124ASP-132THR-1-dimer.npy', np.array(charges))