import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.009875493599085     1.882492747673850    -1.732432171450397
    N                2.101875493599085     0.984492747673850    -0.484432171450397
    H                2.412875493599085     1.525492747673850     0.322567828549603
    H                1.185875493599086     0.586492747673850    -0.253432171450397
    H                2.783875493599085     0.234492747673850    -0.612432171450397
    H                1.069875493599086     2.444492747673850    -1.704432171450397
    H                2.014875493599085     1.279492747673850    -2.649432171450397
    H                2.842895493599086     2.600468747673850    -1.756582171450398
    C               -1.559124506400914    -1.754507252326150    -0.341432171450397
    C               -1.094124506400914    -0.706507252326150     0.634567828549603
    O               -0.516124506400915     0.295492747673850     0.161567828549603
    O               -1.294124506400914    -0.885507252326150     1.869567828549603
    H               -2.631124506400915    -1.896507252326150    -0.193432171450397
    H               -1.082124506400914    -2.711507252326149    -0.121432171450397
    H               -1.410714506400914    -1.489487252326150    -1.398662171450398

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032LYS-080GLU-2-dimer.npy', np.array(charges))