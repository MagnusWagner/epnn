import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.367142079903608    -0.270392971721538     0.291075453758325
    C               -3.553142079903608     0.495607028278462    -0.272924546241675
    H               -1.846142079903607    -0.804392971721538    -0.502924546241675
    H               -1.691142079903607     0.450607028278462     0.744075453758325
    H               -2.682142079903608    -0.969392971721538     1.066075453758325
    H               -3.187142079903607     1.303607028278462    -0.904924546241675
    H               -4.067142079903608     0.963607028278462     0.568075453758325
    H               -4.280765079903608    -0.124485971721538    -0.817028546241675
    C                1.023857920096392     0.757607028278462    -0.699924546241675
    C                2.386857920096392     0.723607028278462    -1.400924546241675
    C                0.913857920096393    -0.286392971721538     0.397075453758325
    O                0.935857920096392    -1.498392971721539     0.083075453758325
    O                0.798857920096393     0.108607028278462     1.579075453758325
    H                0.834857920096393     1.737607028278462    -0.277924546241675
    H                0.242857920096393     0.564607028278462    -1.430924546241675
    H                2.496857920096392    -0.268392971721538    -1.833924546241675
    H                3.213527920096392     0.853620028278462    -0.686982546241675
    H                2.435024920096392     1.441806028278461    -2.232712546241675

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ILE-155ASP-1-dimer.npy', np.array(charges))