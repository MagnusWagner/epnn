import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.050055953268974     0.350229678837799     0.662540056324682
    C               -1.757055953268975     1.050229678837799     1.999540056324682
    C               -1.691055953268975     1.259229678837799    -0.507459943675318
    O               -1.303055953268974    -0.855770321162201     0.581540056324682
    H               -3.114055953268974     0.114229678837799     0.606540056324682
    H               -2.263055953268974     2.011229678837799     1.999540056324682
    H               -0.652055953268975     1.583229678837799    -0.449459943675318
    H               -1.843055953268974     0.729229678837799    -1.445459943675318
    H               -2.333055953268975     2.139229678837799    -0.509459943675318
    H               -0.564055953268975    -0.733770321162201    -0.074459943675318
    H               -0.678645953268975     1.222839678837799     2.130870056324682
    H               -2.190515953268974     0.455929678837799     2.817420056324682
    C                2.784944046731026    -0.516770321162201    -1.611459943675318
    C                1.642944046731025    -0.441770321162201    -0.608459943675318
    O                0.508944046731026    -0.742770321162201    -1.038459943675318
    O                1.878944046731025    -0.046770321162201     0.543540056324682
    H                2.617944046731026     0.222229678837799    -2.390459943675318
    H                2.751944046731025    -1.499770321162201    -2.086459943675318
    H                3.795174046731026    -0.387610321162201    -1.195822943675318

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-189THR-207GLU-1-dimer.npy', np.array(charges))