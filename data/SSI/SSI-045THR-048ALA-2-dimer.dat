import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.212254769105533     1.749151375577994     1.489472892858771
    O               -0.150254769105533     1.141151375577994     0.770472892858771
    H                0.677745230894467     1.473151375577994     1.146472892858771
    H               -1.329254769105533     2.775151375577994     1.141472892858771
    H               -2.145994769105533     1.196511375577994     1.308612892858771
    H               -0.966034769105533     1.774501375577994     2.561262892858771
    C                0.574745230894467    -1.823848624422006    -0.508527107141229
    C                0.803745230894467    -1.270848624422006    -1.914527107141229
    H               -0.469254769105533    -1.699848624422006    -0.224527107141229
    H                0.829745230894467    -2.884848624422006    -0.483527107141229
    H                1.206745230894467    -1.292848624422006     0.204472892858771
    H                1.861745230894467    -1.378848624422006    -2.161527107141229
    H                0.523545230894467    -0.208028624422006    -1.958217107141229
    H                0.216325230894467    -1.844608624422006    -2.646467107141229

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-045THR-048ALA-2-dimer.npy', np.array(charges))