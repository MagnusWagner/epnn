import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.851742952648266     2.115580898391836    -2.495791265054263
    C                0.934742952648266    -0.715419101608164    -1.371791265054263
    C                0.944742952648266     1.430580898391836    -0.915791265054263
    C                1.885742952648266     1.180580898391836    -1.858791265054263
    N                0.365742952648266     0.210580898391836    -0.605791265054263
    N                1.891742952648266    -0.173419101608164    -2.128791265054263
    H               -0.342257047351734     0.041580898391836     0.112208734945737
    H                0.721742952648266    -1.764419101608164    -1.315791265054263
    H                0.720742952648266     2.392580898391835    -0.470791265054263
    H                3.839742952648266     1.842580898391836    -2.123791265054263
    H                2.632742952648266     3.110580898391836    -2.122791265054262
    H                2.861862952648266     2.124981898391836    -3.595701265054263
    C               -3.004257047351734    -1.792419101608164     1.446208734945737
    C               -2.005257047351734    -0.903419101608164     2.192208734945738
    O               -1.258257047351734    -0.132419101608164     1.557208734945737
    O               -1.968257047351734    -0.993419101608164     3.447208734945737
    H               -3.978257047351733    -1.718419101608164     1.933208734945737
    H               -2.652257047351734    -2.820419101608164     1.535208734945737
    H               -3.102967047351734    -1.520777101608164     0.384858734945737

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-168HIE-180GLU-1-dimer.npy', np.array(charges))