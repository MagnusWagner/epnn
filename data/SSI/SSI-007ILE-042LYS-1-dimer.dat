import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.142879199785207    -1.906239512984293    -0.485009222968531
    C                0.807879199785207    -3.394239512984293    -0.424009222968531
    H                0.249879199785207    -1.347239512984293    -0.749009222968531
    H                1.553879199785207    -1.534239512984293     0.452990777031469
    H                1.909879199785207    -1.727239512984293    -1.237009222968531
    H                1.736879199785207    -3.950239512984293    -0.341009222968531
    H                0.282539199785207    -3.701999512984293    -1.340139222968531
    H                0.193879199785207    -3.611369512984293     0.462478777031469
    C               -0.342120800214793     1.344760487015707     0.342990777031469
    C               -1.250120800214793     1.811760487015707     1.482990777031469
    C               -0.382120800214793     2.239760487015707    -0.889009222968531
    H                0.686879199785207     1.262760487015707     0.699990777031469
    H               -0.671120800214793     0.359760487015707     0.025990777031469
    H               -2.235120800214793     2.060760487015707     1.091990777031469
    H               -0.169120800214793     3.269760487015707    -0.598009222968531
    H                0.385879199785207     1.911760487015707    -1.588009222968531
    H               -0.821180800214793     2.693710487015707     1.981158777031469
    H               -1.456390800214793     0.989560487015707     2.184021777031469
    H               -1.365710800214793     2.183550487015707    -1.378279222968531

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007ILE-042LYS-1-dimer.npy', np.array(charges))