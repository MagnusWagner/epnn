import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.047810657765121     2.311616919723285     2.466357051778334
    C                1.387810657765121    -0.160383080276715     0.162357051778334
    C               -0.600189342234880     0.737616919723285     0.473357051778334
    C                0.250810657765121     1.268616919723285     1.395357051778334
    N                0.140810657765121    -0.129383080276715    -0.290642948221666
    N                1.491810657765120     0.695616919723285     1.180357051778334
    H               -0.120189342234879    -0.325383080276715    -1.241642948221666
    H                2.221810657765121    -0.677383080276715    -0.298642948221666
    H               -1.635189342234880     0.984616919723285     0.316357051778334
    H                0.625810657765121     3.188616919723285     2.171357051778334
    H                0.468810657765120     1.937616919723285     3.396357051778334
    H               -0.992959342234879     2.621466919723284     2.641867051778334
    C               -1.643189342234880    -2.566383080276715    -2.265642948221666
    O               -0.682189342234880    -1.533383080276715    -2.371642948221666
    H               -0.171189342234879    -1.711383080276715    -1.565642948221666
    H               -1.788189342234880    -2.820383080276715    -1.216642948221666
    H               -2.601409342234880    -2.239943080276715    -2.696042948221666
    H               -1.233209342234880    -3.434163080276715    -2.803112948221666

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-033HIE-062THR-1-dimer.npy', np.array(charges))