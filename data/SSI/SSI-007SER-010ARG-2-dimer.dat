import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.866250735469765    -0.395025761874913    -2.754289769748487
    O                0.536250735469766     0.077974238125087    -2.670289769748487
    H                0.176250735469765     0.113974238125087    -3.570289769748487
    H                2.442250735469766     0.206974238125087    -3.457289769748487
    H                1.845250735469766    -1.429025761874913    -3.104289769748486
    H                2.307270735469765    -0.352228761874913    -1.747479769748487
    C               -0.205749264530235    -0.879025761874913     2.906710230251513
    C               -0.569749264530234     0.296974238125087     0.758710230251514
    N               -0.882749264530234     0.218974238125087    -0.500289769748486
    N               -0.489749264530234    -0.813025761874913     1.475710230251513
    N               -0.391749264530234     1.464974238125087     1.293710230251514
    H               -0.999749264530234    -0.677025761874913    -0.944289769748486
    H               -0.775749264530235     1.013974238125087    -1.109289769748486
    H               -0.725749264530234    -1.678025761874913     1.009710230251514
    H               -0.192749264530234     1.532974238125087     2.275710230251514
    H               -0.583749264530234     2.295974238125087     0.757710230251514
    H               -0.758749264530235    -1.724025761874913     3.321710230251513
    H               -0.577749264530234     0.007974238125087     3.420710230251514
    H                0.858210735469766    -1.016034761874913     3.150040230251514

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007SER-010ARG-2-dimer.npy', np.array(charges))