import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.742874909016208    -2.058046735488374    -0.907446977208207
    C               -0.527125090983792    -1.219046735488374    -0.895446977208207
    O               -1.594125090983792    -1.693046735488374    -1.293446977208207
    N               -0.441125090983792     0.016953264511626    -0.422446977208207
    H               -1.291125090983792     0.558953264511626    -0.388446977208207
    H                0.378874909016208     0.350953264511626     0.061553022791793
    H                0.584874909016208    -2.901046735488374    -1.582446977208207
    H                0.897874909016208    -2.450046735488374     0.098553022791793
    H                1.639718909016209    -1.500297735488374    -1.214997977208207
    C                1.217874909016208     2.845953264511626     1.398553022791793
    O                0.518874909016208     1.659953264511626     1.766553022791793
    H               -0.274125090983792     1.926953264511626     2.254553022791793
    H                1.183874909016208     3.545953264511626     2.233553022791793
    H                2.264776909016208     2.580969264511626     1.189317022791793
    H                0.739477909016208     3.310784264511626     0.523871022791793

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-063ASN-081THR-1-dimer.npy', np.array(charges))