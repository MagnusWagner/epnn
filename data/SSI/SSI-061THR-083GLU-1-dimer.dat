import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.862105175709507    -2.078503343446431    -0.017673437496287
    C                0.458894824290493    -2.285503343446431    -0.773673437496287
    C               -0.668105175709507    -2.319503343446431     1.466326562503713
    O               -1.360105175709507    -0.764503343446431    -0.229673437496287
    H               -1.607105175709507    -2.785503343446431    -0.390673437496287
    H                1.233894824290493    -1.691503343446431    -0.291673437496287
    H                0.136894824290493    -1.689503343446431     1.846326562503713
    H               -1.590105175709507    -2.080503343446431     1.998326562503713
    H               -0.431105175709507    -3.367503343446431     1.649326562503713
    H               -0.670105175709507    -0.136503343446431     0.113326562503713
    H                0.345257824290493    -1.988530843446431    -1.826713737496287
    H                0.732885824290493    -3.350380343446431    -0.742587437496287
    C                1.688894824290493     2.757496656553569     0.238326562503713
    C                0.554894824290493     1.804496656553569    -0.135673437496287
    O                0.268894824290493     0.877496656553569     0.655326562503713
    O               -0.043105175709507     1.986496656553569    -1.219673437496287
    H                1.258894824290493     3.659496656553569     0.676326562503713
    H                2.243894824290493     3.049496656553569    -0.655673437496287
    H                2.388659824290493     2.321044656553569     0.966226562503713

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061THR-083GLU-1-dimer.npy', np.array(charges))