import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.250202966495254    -0.024633831586167    -0.320372970663048
    C               -2.305202966495255    -0.426633831586167     1.190627029336952
    C               -1.808202966495255     1.430366168413833    -0.582372970663048
    H               -1.544202966495255    -0.687633831586167    -0.818372970663048
    H               -3.224202966495255    -0.186633831586167    -0.778372970663048
    H               -1.318202966495255    -0.262633831586167     1.626627029336952
    H               -2.510202966495255    -1.497633831586167     1.238627029336952
    H               -2.496202966495254     2.106366168413833    -0.071372970663048
    H               -0.815202966495255     1.567366168413833    -0.151372970663048
    H               -3.054608966495255     0.107526168413833     1.793177029336952
    H               -1.781023966495255     1.707156168413833    -1.646631970663048
    C                1.313797033504745    -1.647633831586167    -0.166372970663048
    C                1.606797033504745    -0.165633831586167    -0.076372970663048
    O                1.712797033504745     0.496366168413833    -1.134372970663048
    O                1.695797033504745     0.329366168413833     1.057627029336952
    H                0.365797033504745    -1.856633831586167     0.333627029336952
    H                2.065797033504745    -2.209633831586167     0.370627029336952
    H                1.210783033504745    -1.960273831586167    -1.215963970663048

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-188LYS-225GLU-1-dimer.npy', np.array(charges))