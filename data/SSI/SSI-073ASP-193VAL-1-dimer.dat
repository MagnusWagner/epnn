import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.995521807673569     1.308514239228096     0.058154744085944
    C                0.593521807673569     1.235514239228096     0.643154744085944
    O               -0.286478192326431     1.999514239228096     0.199154744085944
    O                0.379521807673569     0.431514239228097     1.573154744085944
    H                2.442521807673570     0.324514239228097     0.104154744085944
    H                2.581521807673569     1.990514239228097     0.678154744085944
    H                2.007001807673569     1.661507239228097    -0.983605255914056
    C               -1.015478192326431    -1.746485760771904    -1.165845255914056
    C               -1.622478192326431    -3.141485760771903    -1.265845255914056
    H               -0.191478192326431    -1.627485760771904    -1.867845255914056
    H               -1.771478192326431    -1.010485760771904    -1.417845255914056
    H               -0.656478192326431    -1.563485760771903    -0.153845255914056
    H               -1.959478192326431    -3.326485760771903    -2.279845255914056
    H               -0.863518192326431    -3.898283760771903    -1.018375255914056
    H               -2.482888192326431    -3.223566760771903    -0.585435255914056

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-073ASP-193VAL-1-dimer.npy', np.array(charges))