import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -2 1
    --
    -2 1
    C               -1.679780470819505    -3.326776355828109    -0.818016742155432
    C               -1.169780470819505    -1.938776355828109    -0.440016742155432
    O                0.058219529180495    -1.688776355828109    -0.435016742155432
    O               -2.053780470819504    -1.084776355828109    -0.164016742155432
    H               -2.462780470819505    -3.242776355828109    -1.575016742155432
    H               -2.138780470819504    -3.766776355828109     0.069983257844568
    H               -0.902780470819505    -4.020736355828110    -1.171136742155432
    C                0.923219529180495     3.382223644171891     0.463983257844568
    C                1.199219529180495     1.920223644171891     0.420983257844568
    O                1.148219529180496     1.167223644171891    -0.601016742155432
    O                1.540219529180495     1.570223644171891     1.568983257844569
    H                0.316219529180495     3.565223644171891    -0.382016742155432
    H                1.911219529180495     3.731223644171891     0.193983257844568
    H                0.938139529180495     3.867563644171891     1.451013257844568

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-221GLU-265GLU-1-dimer.npy', np.array(charges))