import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.067420065581088    -0.812480214680479     0.368575461000981
    C                3.407420065581087    -1.261480214680479     0.940575461000981
    H                1.921420065581088    -1.231480214680479    -0.627424538999019
    H                1.267420065581087    -1.158480214680479     1.022575461000981
    H                2.009420065581088     0.275519785319521     0.317575461000981
    H                3.534420065581088    -0.819480214680479     1.925575461000981
    H                4.221143065581088    -0.898870214680479     0.295305461000981
    H                3.418208065581088    -2.355390214680479     1.055645461000981
    C               -1.398579934418912     0.633519785319521    -0.121424538999019
    C               -1.701579934418912     1.917519785319521    -0.887424538999019
    C               -2.461579934418913    -0.445480214680479    -0.326424538999019
    H               -0.407579934418912     0.259519785319521    -0.376424538999019
    H               -1.390579934418912     0.885519785319521     0.938575461000981
    H               -1.037579934418912     2.697519785319521    -0.508424538999019
    H               -2.724579934418913     2.219519785319521    -0.659424538999019
    H               -2.659579934418912    -0.940480214680479     0.625575461000981
    H               -3.401579934418913     0.011519785319521    -0.640424538999019
    H               -1.580912934418913     1.857539785319521    -1.979139538999019
    H               -2.134939344418912    -1.178720214680479    -1.078527538999019

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-009VAL-035ARG-1-dimer.npy', np.array(charges))