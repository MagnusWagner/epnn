import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.288384115168184    -2.455528140268424     1.042195129268709
    C               -2.632384115168183    -2.878528140268425     0.453195129268710
    H               -1.228384115168184    -2.763528140268424     2.085195129268709
    H               -0.485384115168184    -2.935528140268424     0.481195129268709
    H               -1.153384115168183    -1.378528140268425     0.969195129268710
    H               -2.668384115168184    -2.582528140268424    -0.593804870731291
    H               -3.459451115168184    -2.400000140268424     0.998145129268709
    H               -2.727296115168183    -3.973663140268425     0.494080129268710
    C                1.159615884831816     0.108471859731575    -0.377804870731291
    C                2.197615884831816     0.327471859731575    -1.475804870731291
    C                0.399615884831816     1.358471859731575    -0.018804870731291
    O                1.081615884831816     2.389471859731576     0.074195129268709
    O               -0.819384115168184     1.262471859731575     0.264195129268710
    H                0.472615884831816    -0.683528140268425    -0.673804870731290
    H                1.673615884831817    -0.230528140268425     0.525195129268709
    H                2.762615884831817     1.234471859731575    -1.251804870731291
    H                1.712205884831816     0.426364859731575    -2.457944870731291
    H                2.891195884831816    -0.526106140268425    -1.456980870731291

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051LEU-055ASP-1-dimer.npy', np.array(charges))