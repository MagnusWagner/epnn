import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.902828174633922     1.254458210769152    -1.688930328320900
    C                1.522828174633922     1.302458210769152    -0.227930328320900
    O                0.544828174633922     2.010458210769152     0.082069671679100
    O                2.133828174633922     0.537458210769152     0.539069671679100
    H                1.359828174633921     0.430458210769152    -2.157930328320901
    H                2.968828174633921     1.055458210769152    -1.794930328320900
    H                1.643478174633922     2.189963210769152    -2.206200328320901
    C               -1.368171825366078    -0.961541789230848     0.130069671679100
    C               -1.218171825366078    -0.571541789230848     1.590069671679100
    C               -0.524171825366079    -2.183541789230848    -0.267930328320900
    O               -2.758171825366079    -1.241541789230848    -0.091930328320900
    H               -1.076171825366079    -0.122541789230848    -0.500930328320900
    H               -0.198171825366078    -0.234541789230848     1.769069671679100
    H               -0.860171825366079    -3.070541789230848     0.270069671679100
    H               -0.617171825366078    -2.357541789230848    -1.339930328320900
    H                0.521828174633921    -1.992541789230847    -0.035930328320900
    H               -2.822171825366078    -1.710541789230848    -0.936930328320901
    H               -1.505501825366079    -1.377411789230848     2.281459671679099
    H               -1.904961825366078     0.265125210769152     1.785779671679100

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011GLU-100THR-1-dimer.npy', np.array(charges))