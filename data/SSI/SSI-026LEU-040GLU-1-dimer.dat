import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.427672287808448    -1.176017208660056    -2.673028677837983
    C               -0.308327712191552    -2.266017208660056    -3.454028677837983
    H                0.480672287808448    -1.446017208660056    -1.617028677837983
    H                1.440672287808447    -1.069017208660056    -3.059028677837983
    H               -0.083327712191552    -0.220017208660056    -2.779028677837983
    H               -0.400327712191552    -1.928017208660056    -4.485028677837983
    H               -1.315027712191553    -2.475657208660055    -3.063368677837983
    H                0.274142287808448    -3.198987208660056    -3.471368677837983
    C               -0.592327712191552     0.862982791339944     0.367971322162017
    C               -1.700327712191552     1.711982791339944     0.946971322162017
    C                0.429672287808448     0.437982791339944     1.397971322162017
    O                1.018672287808448     1.299982791339944     2.083971322162017
    O                0.706672287808448    -0.777017208660056     1.465971322162017
    H               -1.046327712191552    -0.012017208660056    -0.103028677837983
    H               -0.050327712191552     1.404982791339944    -0.408028677837983
    H               -1.282327712191553     2.474982791339944     1.604971322162017
    H               -2.355327712191552     1.073982791339944     1.536971322162017
    H               -2.283757712191552     2.204992791339945     0.155421322162017

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-026LEU-040GLU-1-dimer.npy', np.array(charges))