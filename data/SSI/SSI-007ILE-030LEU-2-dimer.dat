import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.332432282699781    -1.777131949607468    -0.300047964594969
    C               -0.741432282699781    -2.064131949607468     1.070952035405030
    H               -1.359432282699781    -0.714131949607468    -0.524047964594969
    H               -0.727432282699781    -2.274131949607468    -1.059047964594969
    H               -2.346432282699781    -2.174131949607468    -0.350047964594969
    H                0.283567717300219    -1.689131949607468     1.086952035405031
    H               -0.682432282699781    -3.138131949607468     1.191952035405030
    H               -1.298672282699781    -1.608731949607468     1.902871035405031
    C                0.714567717300219     1.390868050392531    -0.822047964594969
    C                1.352567717300219     2.456868050392531     0.050952035405031
    H                1.435567717300219     0.998868050392532    -1.538047964594969
    H                0.404567717300219     0.572868050392532    -0.178047964594969
    H               -0.154432282699781     1.787868050392531    -1.340047964594969
    H                2.064567717300219     1.992868050392532     0.721952035405031
    H                1.870847717300219     3.202298050392532    -0.570117964594969
    H                0.589837717300219     2.966558050392532     0.657963035405031

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007ILE-030LEU-2-dimer.npy', np.array(charges))