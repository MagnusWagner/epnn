import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.358287947729673    -2.707072900758590     0.110262464895239
    C               -1.726287947729673    -1.792072900758589    -1.041737535104761
    O               -2.579287947729673    -2.114072900758589    -1.869737535104761
    N               -1.072287947729673    -0.646072900758589    -1.122737535104761
    H               -1.265287947729673    -0.050072900758589    -1.914737535104761
    H               -0.371287947729673    -0.361072900758589    -0.444737535104761
    H               -0.932287947729673    -2.116072900758589     0.922262464895239
    H               -0.586287947729673    -3.393072900758590    -0.216737535104761
    H               -2.240547947729672    -3.245422900758590     0.486822464895239
    C                2.586712052270328     1.026927099241411     1.796262464895239
    C                1.601712052270327     1.788927099241411     0.947262464895239
    O                0.628712052270327     1.223927099241411     0.452262464895239
    N                1.855712052270327     3.070927099241410     0.742262464895239
    H                2.079712052270327     0.705927099241411     2.705262464895239
    H                3.422712052270327     1.669927099241411     2.076262464895239
    H                1.234712052270327     3.580927099241411     0.127262464895239
    H                2.626712052270327     3.541927099241410     1.210262464895239
    H                2.960406052270327     0.145157099241411     1.255122464895239

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-062GLN-110GLN-1-dimer.npy', np.array(charges))