import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.174326477868949     0.464758318981235     3.585441505442244
    C               -0.299326477868949    -0.360241681018765     2.324441505442244
    O               -1.389326477868949    -0.364241681018765     1.709441505442244
    O                0.708673522131051    -1.010241681018765     1.968441505442244
    H                0.876673522131051     0.564758318981235     3.869441505442244
    H               -0.692326477868949    -0.060241681018765     4.389441505442244
    H               -0.614436477868949     1.467108318981235     3.477761505442244
    C                0.926673522131051     0.593758318981235    -1.155558494557756
    C                2.199673522131051     0.444758318981235    -1.994558494557756
    C               -0.329326477868949     0.193758318981235    -1.897558494557756
    O               -1.358326477868949    -0.111241681018765    -1.292558494557756
    N               -0.268326477868949     0.190758318981235    -3.219558494557756
    H                1.017673522131051    -0.067241681018765    -0.300558494557756
    H                0.813673522131051     1.606758318981235    -0.785558494557756
    H                2.216673522131051     1.183758318981235    -2.798558494557756
    H                2.217673522131051    -0.557241681018765    -2.428558494557756
    H               -1.089326477868949    -0.104241681018765    -3.731558494557756
    H                0.580673522131051     0.417758318981235    -3.711558494557756
    H                3.097413522131051     0.560948318981235    -1.369608494557756

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-106ASP-133GLN-1-dimer.npy', np.array(charges))