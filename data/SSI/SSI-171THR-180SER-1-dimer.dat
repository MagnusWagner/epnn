import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.375557463779757    -0.294431330342626     1.891027322671754
    O               -1.352557463779757     0.396568669657374     0.643027322671754
    H               -0.454557463779757     0.348568669657374     0.277027322671754
    H               -0.803557463779757     0.285568669657374     2.617027322671754
    H               -2.411637463779757    -0.411921330342626     2.241367322671754
    H               -0.898707463779757    -1.278201330342627     1.769307322671754
    C                1.288442536220243    -0.407431330342626    -1.879972677328246
    O                1.333442536220243     0.305568669657374    -0.658972677328246
    H                2.122442536220243     0.029568669657374    -0.172972677328246
    H                0.455442536220243    -0.019431330342626    -2.467972677328246
    H                1.112442536220243    -1.467431330342627    -1.690972677328246
    H                2.218762536220243    -0.273191330342626    -2.451372677328246

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-171THR-180SER-1-dimer.npy', np.array(charges))