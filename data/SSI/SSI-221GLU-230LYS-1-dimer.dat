import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.675306081853027     0.581083711504708     2.194711584457012
    C               -1.093306081853027     0.193083711504708     0.875711584457012
    O                0.154693918146972     0.189083711504708     0.818711584457012
    O               -1.847306081853027    -0.016916288495292    -0.084288415542988
    H               -1.482306081853027     1.644083711504708     2.353711584457013
    H               -1.191306081853027     0.024083711504708     2.998711584457013
    H               -2.759026081853027     0.396663711504708     2.233871584457013
    C                2.025693918146973    -0.117916288495292    -2.472288415542987
    N                2.075693918146972    -0.725916288495292    -1.118288415542988
    H                1.238693918146972    -0.483916288495292    -0.574288415542988
    H                2.149693918146973    -1.734916288495292    -1.163288415542987
    H                2.869693918146972    -0.383916288495292    -0.590288415542988
    H                1.269693918146973    -0.624916288495292    -3.078288415542987
    H                2.990693918146972    -0.251916288495292    -2.972288415542987
    H                1.782533918146973     0.954593711504708    -2.447678415542988

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-221GLU-230LYS-1-dimer.npy', np.array(charges))