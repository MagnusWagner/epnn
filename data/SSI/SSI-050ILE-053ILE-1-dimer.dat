import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.260046017920472    -0.625821870534220     1.641945332434628
    C               -1.311046017920472    -0.718821870534220     3.170945332434628
    H               -2.252046017920472    -0.443821870534220     1.223945332434628
    H               -0.599046017920472     0.191178129465780     1.354945332434628
    H               -0.861046017920472    -1.545821870534220     1.213945332434628
    H               -0.347046017920472    -1.086821870534220     3.507945332434628
    H               -2.092416017920472    -1.426488870534220     3.485066332434628
    H               -1.449426017920472     0.264157129465780     3.644869332434629
    C                0.474953982079528     0.214178129465780    -1.327054667565372
    C                0.470953982079528     0.199178129465780    -2.864054667565372
    C                1.648953982079528     0.953178129465780    -0.715054667565372
    H               -0.446046017920472     0.668178129465780    -0.969054667565372
    H                0.513953982079528    -0.812821870534220    -0.961054667565372
    H                1.321953982079528    -0.392821870534220    -3.200054667565372
    H                1.543953982079528     2.028178129465780    -0.858054667565372
    H                1.680953982079528     0.753178129465780     0.356945332434628
    H                2.574953982079528     0.604178129465780    -1.169054667565372
    H               -0.453236017920472    -0.269705870534220    -3.232874667565371
    H                0.581513982079528     1.208608129465780    -3.286924667565371

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-050ILE-053ILE-1-dimer.npy', np.array(charges))