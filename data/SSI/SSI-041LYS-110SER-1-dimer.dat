import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -2.104738902915618    -1.098076367682836     0.082073973682264
    N               -0.673738902915619    -1.481076367682836     0.004073973682264
    H               -0.469738902915619    -2.071076367682836    -0.796926026317736
    H               -0.078738902915619    -0.663076367682836    -0.090926026317736
    H               -0.355738902915619    -1.975076367682836     0.829073973682264
    H               -2.421738902915619    -0.641076367682836    -0.859926026317736
    H               -2.242738902915619    -0.362076367682836     0.882073973682264
    H               -2.750568902915619    -1.964206367682836     0.288743973682264
    C                1.981261097084381     1.615923632317164     0.125073973682264
    O                0.756261097084381     0.951923632317164    -0.170926026317736
    H                0.249261097084381     1.606923632317164    -0.692926026317736
    H                2.271261097084381     1.394923632317164     1.154073973682264
    H                1.849261097084382     2.694923632317164     0.033073973682264
    H                2.778461097084381     1.284773632317164    -0.556696026317736

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-041LYS-110SER-1-dimer.npy', np.array(charges))