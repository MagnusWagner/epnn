import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.579358465668338    -0.802525965605011     1.093638140990840
    C                2.458358465668339    -0.605525965605011     2.317638140990840
    H                1.710358465668338    -1.809525965605011     0.719638140990840
    H                0.554358465668338    -0.742525965605011     1.457638140990839
    H                1.744358465668338    -0.043525965605011     0.328638140990839
    H                2.263358465668338    -1.424525965605011     3.009638140990840
    H                3.523286465668338    -0.625565965605011     2.042818140990839
    H                2.195621465668339     0.338734034394989     2.816984140990840
    C               -1.321641534331662     0.026474034394989    -0.859361859009161
    C               -0.830641534331662     0.087474034394989    -2.305361859009161
    C               -1.962641534331662     1.306474034394989    -0.318361859009160
    H               -2.057641534331662    -0.777525965605011    -0.779361859009160
    H               -0.490641534331662    -0.235525965605011    -0.235361859009160
    H               -0.006641534331662     0.795474034394989    -2.364361859009161
    H               -2.813641534331661     1.574474034394989    -0.943361859009160
    H               -1.651709534331662     0.415144034394989    -2.959945859009161
    H               -0.446561534331662    -0.904615965605011    -2.585087859009160
    H               -2.357322534331662     1.150186034394989     0.696429140990840
    H               -1.247883534331662     2.142036034394988    -0.349281859009160

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004VAL-053LEU-1-dimer.npy', np.array(charges))