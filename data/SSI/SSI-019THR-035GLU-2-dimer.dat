import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.876524343779080     1.695170661551659    -1.326944331944184
    C                2.254524343779080     2.038170661551659    -1.870944331944184
    H                0.104524343779080     2.031170661551659    -2.020944331944184
    H                0.801524343779080     0.617170661551659    -1.198944331944184
    H                0.723524343779080     2.159170661551659    -0.352944331944184
    H                3.003524343779080     1.786170661551659    -1.125944331944184
    H                2.344818243779080     3.107360661551659    -2.113161331944184
    H                2.460304343779080     1.447910661551659    -2.776065631944184
    C               -1.760475656220919     0.076170661551659     1.161055668055816
    C               -0.742475656220919    -1.003829338448341     0.787055668055816
    O               -0.728475656220920    -1.473829338448341    -0.372944331944184
    O                0.041524343779080    -1.399829338448341     1.675055668055816
    H               -1.233475656220919     0.907170661551659     1.633055668055816
    H               -2.476475656220920    -0.326829338448341     1.880055668055816
    H               -2.304500656220920     0.470970661551659     0.290325668055816

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019THR-035GLU-2-dimer.npy', np.array(charges))