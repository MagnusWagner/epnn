import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.043246064516022    -1.693321007500673    -0.897657496013958
    C               -1.161246064516022    -2.614321007500672    -2.110657496013958
    H               -0.095246064516022    -1.857321007500673    -0.382657496013958
    H               -1.098246064516022    -0.656321007500673    -1.228657496013958
    H               -1.862246064516022    -1.876321007500672    -0.201657496013958
    H               -1.984246064516022    -2.267321007500672    -2.735657496013958
    H               -1.359766064516022    -3.658152007500672    -1.826040496013958
    H               -0.236761064516022    -2.552483007500673    -2.703534496013958
    C                0.152753935483978     1.508678992499328     0.811342503986042
    C                0.682753935483978     1.887678992499328     2.176342503986043
    C                1.372753935483978     1.014678992499328     0.073342503986042
    H               -0.309246064516022     2.359678992499327     0.309342503986042
    H               -0.564246064516022     0.693678992499328     0.914342503986042
    H                1.057753935483978     2.911678992499327     2.161342503986043
    H               -0.100246064516022     1.766678992499327     2.926342503986043
    H                1.945753935483978     1.878678992499327    -0.266657496013958
    H                1.113753935483978     0.372678992499328    -0.769657496013958
    H                1.516738935483978     1.186831992499328     2.328928503986043
    H                1.931363935483978     0.466906992499328     0.846582503986042

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-149THR-157PRO-1-dimer.npy', np.array(charges))