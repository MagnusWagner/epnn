import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.297861986591394     2.561723976325504     0.843513786704776
    O                0.850861986591394     1.366723976325504     0.297513786704776
    H                1.812861986591394     1.460723976325504     0.318513786704776
    H                0.686861986591394     2.689723976325503     1.853513786704776
    H                0.584731986591394     3.424490976325504     0.224373786704776
    H               -0.797488013408606     2.474095876325504     0.893793786704776
    C               -1.263138013408606    -2.233276023674496    -0.914486213295224
    N               -0.029138013408606    -1.711276023674496    -0.261486213295224
    H                0.570861986591394    -2.473276023674496     0.035513786704776
    H                0.510861986591394    -1.126276023674496    -0.888486213295224
    H               -0.243138013408606    -1.159276023674496     0.561513786704776
    H               -1.818138013408606    -2.872276023674496    -0.218486213295224
    H               -1.000138013408606    -2.837276023674496    -1.789486213295224
    H               -1.912845013408606    -1.405261023674496    -1.234286213295223

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004THR-132LYS-1-dimer.npy', np.array(charges))