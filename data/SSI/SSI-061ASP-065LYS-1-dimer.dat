import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.762378877992638     0.073219226990933    -2.301451567986391
    C                0.966378877992638     0.506219226990933    -1.094451567986391
    O                0.041378877992638     1.331219226990933    -1.229451567986391
    O                1.304378877992638     0.026219226990933     0.016548432013609
    H                1.747378877992638    -1.014780773009067    -2.387451567986391
    H                2.803378877992638     0.357219226990933    -2.130451567986391
    H                1.450908877992638     0.540423226990933    -3.247341567986391
    C               -1.536621122007362    -0.083780773009067     1.602548432013609
    C               -2.155621122007362    -1.046780773009067     0.603548432013609
    C               -0.429621122007362    -0.776780773009067     2.425548432013609
    H               -1.112621122007362     0.775219226990933     1.084548432013609
    H               -2.312621122007362     0.278219226990933     2.279548432013609
    H               -2.692621122007362    -1.824780773009067     1.147548432013609
    H               -1.365621122007362    -1.509780773009067     0.010548432013609
    H                0.429378877992638    -0.953780773009067     1.775548432013609
    H               -0.105621122007362    -0.091780773009067     3.213548432013609
    H               -2.867761122007363    -0.553591773009067    -0.074401567986391
    H               -0.744861122007362    -1.734994773009067     2.864238432013610

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ASP-065LYS-1-dimer.npy', np.array(charges))