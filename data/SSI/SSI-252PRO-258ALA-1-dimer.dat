import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.297030237032349    -1.384423450963954    -0.009241136593716
    C                0.324030237032349    -2.837423450963954    -0.374241136593716
    C                1.177030237032349    -0.682423450963954    -1.016241136593716
    H                0.615030237032349    -1.196423450963954     1.009758863406284
    H               -0.716969762967651    -1.028423450963954    -0.154241136593716
    H                1.163030237032349    -3.334423450963954     0.115758863406284
    H               -0.614969762967651    -3.304423450963954    -0.088241136593716
    H                2.175030237032348    -0.561423450963954    -0.590241136593716
    H                0.767030237032349     0.295576549036046    -1.268241136593717
    H                0.490698237032349    -2.816403450963954    -1.461338136593716
    H                1.206488237032349    -1.334803450963954    -1.901413136593716
    C               -0.962969762967651     1.672576549036046     0.904758863406284
    C               -0.808969762967651     3.135576549036046     0.506758863406284
    H               -0.057969762967651     1.305576549036046     1.391758863406284
    H               -1.809969762967651     1.562576549036046     1.576758863406283
    H               -1.167969762967651     1.097576549036046     0.004758863406284
    H               -1.712969762967651     3.399576549036046    -0.041241136593716
    H                0.081832237032349     3.272856549036046    -0.123817136593716
    H               -0.729698762967651     3.787036549036046     1.389546863406284

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-252PRO-258ALA-1-dimer.npy', np.array(charges))