import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.790282734393513    -1.200778638529388     0.360348318527415
    C               -1.226282734393513    -2.446778638529388    -0.293651681472585
    C               -1.069282734393513    -0.887778638529388     1.670348318527415
    O               -1.267282734393513    -1.566778638529388     2.680348318527415
    N               -0.252282734393513     0.159221361470612     1.670348318527415
    H               -1.728282734393513    -0.345778638529388    -0.309651681472585
    H               -2.845282734393513    -1.358778638529388     0.588348318527415
    H               -1.357282734393513    -3.256778638529389     0.417348318527415
    H                0.273717265606487     0.378221361470612     2.498348318527415
    H               -0.044282734393513     0.592221361470612     0.768348318527415
    H               -0.152822734393513    -2.286707638529388    -0.472691681472585
    H               -1.721522734393513    -2.647252638529388    -1.255181681472585
    C                1.285717265606487     2.744221361470611    -2.177651681472585
    C                1.366717265606487     1.401221361470612    -1.465651681472586
    O                0.326717265606487     0.814221361470612    -1.115651681472585
    O                2.475717265606487     0.888221361470612    -1.287651681472585
    H                0.791717265606487     2.574221361470611    -3.136651681472585
    H                2.283717265606487     3.134221361470612    -2.390651681472585
    H                0.709067265606487     3.493437361470612    -1.615381681472585

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-095ASN-164ASP-1-dimer.npy', np.array(charges))