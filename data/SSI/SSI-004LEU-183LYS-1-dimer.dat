import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.238155159405218     2.119361255059639    -0.901447750691290
    C                0.384844840594782     3.400361255059638    -1.424447750691290
    H                0.260844840594782     1.823361255059639     0.020552249308710
    H               -1.305155159405218     2.255361255059639    -0.734447750691290
    H               -0.104155159405218     1.327361255059639    -1.640447750691290
    H               -0.012155159405218     3.579361255059638    -2.421447750691291
    H                1.477444840594782     3.289441255059638    -1.487108750691290
    H                0.104044840594782     4.249991255059639    -0.784693750691290
    C               -0.101155159405218    -1.303638744940362     0.804552249308709
    C               -1.192155159405218    -2.246638744940362     0.316552249308710
    C                1.142844840594782    -2.057638744940362     1.260552249308710
    H                0.175844840594782    -0.625638744940361    -0.004447750691290
    H               -0.477155159405218    -0.709638744940361     1.641552249308710
    H               -1.473155159405218    -2.913638744940361     1.132552249308709
    H               -0.841155159405218    -2.840638744940361    -0.526447750691290
    H                1.913844840594782    -1.330638744940361     1.534552249308710
    H                0.890844840594782    -2.639638744940361     2.151552249308710
    H               -2.077065159405218    -1.685148744940361    -0.017617850691290
    H                1.512084840594782    -2.729788744940362     0.471958249308710

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004LEU-183LYS-1-dimer.npy', np.array(charges))