import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.960562306610139    -0.712304258966833     0.349502385049453
    C                1.380562306610139    -2.171304258966833     0.227502385049452
    C                0.730562306610139    -0.230304258966833     1.780502385049453
    H                1.702562306610139    -0.067304258966833    -0.129497614950548
    H                0.057562306610139    -0.655304258966833    -0.207497614950547
    H                0.646562306610139    -2.804304258966833     0.737502385049453
    H                1.585562306610139    -0.461304258966833     2.416502385049453
    H                0.646562306610139     0.854695741033167     1.733502385049453
    H                2.367016306610140    -2.321624258966833     0.690442385049453
    H                1.392825306610139    -2.471384258966833    -0.830707614950548
    H               -0.185909493389861    -0.662264258966833     2.208862385049453
    C               -1.674437693389861     0.962695741033167    -0.686497614950548
    C               -1.322437693389861     2.094695741033167    -1.642497614950547
    H               -1.543437693389860    -0.004304258966833    -1.167497614950547
    H               -1.121437693389861     1.092695741033167     0.237502385049453
    H               -2.730437693389860     1.046695741033167    -0.421497614950547
    H               -1.858437693389861     2.992695741033167    -1.335497614950548
    H               -1.606958693389861     1.833108741033167    -2.672357614950548
    H               -0.242802293389861     2.300891741033167    -1.599247614950547

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-001LYS-027THR-2-dimer.npy', np.array(charges))