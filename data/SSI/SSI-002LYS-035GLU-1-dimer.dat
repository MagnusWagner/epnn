import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.628123022087639    -1.158317980201263     2.954249912229129
    N               -0.535876977912361    -1.024317980201263     2.053249912229129
    H               -0.249876977912361    -1.140317980201264     1.077249912229129
    H               -0.938876977912361    -0.098317980201263     2.103249912229129
    H               -1.257876977912361    -1.700317980201263     2.266249912229129
    H                1.485123022087639    -0.652317980201263     2.497249912229129
    H                0.899123022087639    -2.208317980201263     3.101249912229129
    H                0.419254022087639    -0.681924980201263     3.923489912229129
    C               -0.549876977912361     0.424682019798737    -2.688750087770871
    C                0.010123022087639     0.631682019798737    -1.294750087770871
    O                0.211123022087639    -0.398317980201263    -0.600750087770871
    O                0.303123022087639     1.728682019798736    -0.788750087770871
    H               -1.478876977912361    -0.138317980201263    -2.565750087770871
    H                0.134123022087639    -0.257317980201263    -3.199750087770871
    H               -0.780105977912361     1.209489019798736    -3.424330087770871

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-002LYS-035GLU-1-dimer.npy', np.array(charges))