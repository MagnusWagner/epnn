import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.309640946585508    -2.205796576825799    -1.263437746911698
    C               -0.491359053414492    -2.895796576825799    -0.169437746911698
    H                0.614640946585508    -2.930796576825799    -2.018437746911698
    H               -0.305359053414492    -1.443796576825799    -1.746437746911698
    H                1.192640946585508    -1.729796576825799    -0.837437746911698
    H               -0.889359053414492    -2.113796576825799     0.480562253088302
    H                0.140030946585508    -3.559784176825799     0.439217553088302
    H               -1.349539053414492    -3.423129676825799    -0.611530646911698
    C               -0.045359053414492     1.218203423174201     0.246562253088302
    C               -0.191359053414492     1.518203423174201     1.736562253088302
    C                0.412640946585508     2.441203423174201    -0.540437746911698
    H                0.710640946585508     0.438203423174201     0.136562253088302
    H               -0.989359053414492     0.839203423174201    -0.153437746911698
    H                0.704640946585508     2.034203423174201     2.084562253088302
    H               -0.263359053414492     0.568203423174201     2.268562253088302
    H               -0.316359053414492     3.245203423174201    -0.395437746911698
    H                1.359640946585508     2.787203423174201    -0.108437746911698
    H               -1.090669053414492     2.109491423174201     1.963756253088302
    H                0.550770946585508     2.274265423174201    -1.618886746911698

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-034ALA-133LYS-1-dimer.npy', np.array(charges))