import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.962045889927376    -2.149787360637332    -1.971142477809115
    C                2.187045889927376    -1.099787360637332    -0.893142477809114
    O                1.220045889927376    -0.841787360637332    -0.138142477809114
    O                3.330045889927375    -0.631787360637332    -0.716142477809114
    H                1.022045889927375    -1.936787360637332    -2.483142477809114
    H                1.847045889927376    -3.126787360637333    -1.507142477809114
    H                2.748389789927375    -2.168613360637333    -2.740112477809114
    C               -1.319954110072624     0.340212639362668     1.529857522190885
    C               -2.285954110072624     0.662212639362668     2.653857522190886
    C               -1.671954110072624     1.067212639362668     0.246857522190885
    O               -2.774954110072624     1.588212639362668     0.081857522190886
    N               -0.738954110072624     1.095212639362668    -0.685142477809114
    H               -0.313954110072624     0.621212639362668     1.839857522190885
    H               -1.320954110072624    -0.727787360637332     1.323857522190885
    H               -3.311954110072624     0.610212639362668     2.291857522190885
    H               -2.095954110072625     1.688212639362668     2.974857522190885
    H               -0.924954110072625     1.545212639362668    -1.566142477809115
    H                0.090045889927376     0.513212639362668    -0.529142477809114
    H               -2.205115110072625    -0.005437360637332     3.524327522190886

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-013GLU-056GLN-1-dimer.npy', np.array(charges))