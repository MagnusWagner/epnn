import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.897006481638404    -0.510596681760989    -0.925176297031302
    C                0.201006481638404    -1.146596681760989    -2.130176297031303
    C                2.397006481638404    -0.375596681760989    -1.132176297031302
    H                0.483006481638404     0.488403318239011    -0.777176297031302
    H                0.703006481638404    -1.106596681760989    -0.032176297031302
    H                0.536006481638404    -2.180596681760989    -2.231176297031303
    H                0.528006481638404    -0.604596681760989    -3.020176297031302
    H                2.841006481638404    -1.368596681760989    -1.226176297031302
    H                2.579006481638404     0.177403318239011    -2.055176297031303
    H               -0.898003518361596    -1.110566681760989    -2.100629297031302
    H                2.856466481638404     0.155273318239011    -0.285377697031302
    C               -1.744993518361596     0.317403318239011     1.704823702968697
    C               -1.687993518361596     1.680403318239011     2.427823702968698
    H               -1.221993518361596    -0.449596681760989     2.273823702968698
    H               -2.785993518361596     0.009403318239011     1.596823702968698
    H               -1.302993518361596     0.404403318239011     0.714823702968698
    H               -2.155993518361596     1.581403318239011     3.403823702968698
    H               -0.642263518361596     2.000626318239011     2.545762702968697
    H               -2.257873518361596     2.420175318239011     1.846471702968698

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008LYS-065VAL-1-dimer.npy', np.array(charges))