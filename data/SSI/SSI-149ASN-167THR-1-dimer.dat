import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.668785788736567     2.071097935519243     1.201584571387682
    C               -0.509214211263433     1.291097935519243     0.656584571387682
    O               -1.623214211263433     1.811097935519243     0.588584571387682
    N               -0.295214211263433     0.040097935519243     0.285584571387682
    H               -1.064214211263433    -0.470902064480757    -0.117415428612318
    H                0.630785788736567    -0.341902064480757     0.197584571387682
    H                0.291785788736567     2.864097935519243     1.847584571387682
    H                1.188785788736567     2.530097935519243     0.362584571387682
    H                1.377076788736567     1.441825935519243     1.760454571387682
    C                1.107785788736567    -2.967902064480757    -0.951415428612318
    O                0.547785788736567    -1.775902064480757    -1.482415428612318
    H               -0.087214211263433    -2.029902064480757    -2.167415428612318
    H                1.270785788736567    -3.678902064480757    -1.762415428612318
    H                2.069032788736567    -2.726156064480757    -0.474375428612318
    H                0.402607788736567    -3.398765064480757    -0.225415428612318

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-149ASN-167THR-1-dimer.npy', np.array(charges))