import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.825472596260848    -0.639741928903919     3.573375260682659
    O                0.674472596260848     0.448258071096081     2.678375260682659
    H                0.001472596260848     0.246258071096081     2.019375260682658
    H                0.609472596260848    -1.576741928903920     3.057375260682659
    H                0.119472596260848    -0.519741928903919     4.397375260682659
    H                1.849502596260848    -0.680068928903919     3.973049260682659
    C                1.162472596260848     1.291258071096081    -1.778624739317342
    C               -0.685527403739152    -0.254741928903919    -1.236624739317342
    N                0.024472596260848    -0.795741928903919    -0.262624739317342
    N               -0.180527403739152     0.731258071096081    -1.962624739317342
    N               -1.896527403739152    -0.712741928903919    -1.488624739317342
    H                0.963472596260848    -0.456741928903919    -0.060624739317342
    H               -0.307527403739152    -1.636741928903920     0.184375260682658
    H               -0.744527403739152     1.099258071096080    -2.715624739317342
    H               -2.433527403739152    -0.332741928903919    -2.252624739317342
    H               -2.284527403739152    -1.482741928903919    -0.963624739317342
    H                1.907472596260848     0.501258071096081    -1.891624739317342
    H                1.246472596260848     1.725258071096081    -0.778624739317342
    H                1.380032596260848     2.074032071096081    -2.520199739317341

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-020SER-091ARG-1-dimer.npy', np.array(charges))