import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.295404749615522    -1.846108208721375     0.513253981209483
    C                1.508404749615522    -1.597108208721375     2.067253981209483
    H                2.062404749615522    -2.516108208721374     0.127253981209483
    H                0.315404749615522    -2.293108208721375     0.357253981209483
    H                1.355404749615522    -0.915108208721375    -0.041746018790517
    H                0.568404749615522    -1.240108208721375     2.488253981209483
    H                2.252144749615522    -0.793438208721375     2.171954981209483
    H                1.777704749615522    -2.552728208721375     2.540822981209483
    C               -0.438595250384478     0.953891791278625    -0.694746018790517
    C               -0.693595250384478     2.458891791278625    -0.843746018790517
    C               -1.687595250384478     0.093891791278625    -1.085746018790517
    H                0.403404749615522     0.669891791278625    -1.327746018790517
    H               -0.198595250384478     0.714891791278625     0.340253981209483
    H               -1.682595250384478     2.657891791278626    -0.427746018790517
    H               -1.940595250384478     0.251891791278625    -2.130746018790517
    H               -1.457595250384478    -0.961108208721375    -0.935746018790517
    H               -2.535595250384478     0.360891791278625    -0.454746018790517
    H                0.025564749615522     3.082211791278625    -0.292129018790517
    H               -0.755235250384478     2.778441791278625    -1.894502018790517

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-237ILE-267ILE-1-dimer.npy', np.array(charges))