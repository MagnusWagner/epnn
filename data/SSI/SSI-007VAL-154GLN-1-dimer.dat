import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.513573414954532    -1.672996165151855    -0.085726375201992
    C               -1.750573414954532    -1.950996165151855    -1.561726375201992
    H               -0.484573414954532    -1.906996165151855     0.191273624798008
    H               -1.727573414954532    -0.624996165151855     0.118273624798008
    H               -2.189573414954532    -2.278996165151855     0.518273624798008
    H               -2.756573414954532    -1.612996165151855    -1.810726375201992
    H               -1.684983414954532    -3.031136165151855    -1.759216375201992
    H               -1.030573414954532    -1.389146165151855    -2.174846375201992
    C                0.722426585045468     1.130003834848145     0.962273624798007
    C                2.188426585045469     0.713003834848145     1.089273624798008
    C                0.405426585045468     1.851003834848145    -0.345726375201992
    H                0.089426585045468     0.254003834848145     1.082273624798008
    H                0.496426585045468     1.817003834848145     1.780273624798008
    H                2.823426585045469     1.533003834848145     0.775273624798008
    H                1.029426585045468     2.735003834848145    -0.401726375201992
    H                0.644426585045468     1.203003834848145    -1.185726375201992
    H                2.403876585045468    -0.157896165151855     0.452783624798008
    H                2.420806585045469     0.492243834848145     2.141533624798008
    H               -0.654703414954532     2.134193834848145    -0.422696375201992

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007VAL-154GLN-1-dimer.npy', np.array(charges))