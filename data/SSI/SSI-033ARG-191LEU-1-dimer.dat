import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.900888411326780    -1.616505556239288     0.273663796583723
    C                0.713888411326780    -1.789505556239288    -1.240336203416277
    C                1.755888411326779    -0.406505556239288     0.648663796583723
    H               -0.083111588673220    -1.528505556239288     0.735663796583723
    H                1.378888411326780    -2.510505556239288     0.678663796583723
    H                0.143888411326780    -0.933505556239288    -1.610336203416277
    H                2.796888411326779    -0.606505556239288     0.388663796583723
    H                1.419888411326780     0.469494443760712     0.096663796583723
    H                0.178008411326780    -2.727483556239288    -1.447776203416277
    H                1.686718411326780    -1.777163556239288    -1.753616203416277
    H                1.697368411326780    -0.195531556239288     1.726653796583723
    C               -1.321111588673220     1.384494443760712     0.656663796583723
    C               -1.995111588673220     2.315494443760712    -0.325336203416277
    H               -0.971111588673221     0.506494443760712     0.118663796583723
    H               -0.479111588673220     1.895494443760712     1.123663796583723
    H               -2.029111588673220     1.075494443760712     1.428663796583723
    H               -1.199111588673220     2.685494443760712    -0.955336203416277
    H               -2.791651588673221     1.773014243760712    -0.855646203416277
    H               -2.396671588673220     3.213563443760712     0.166823796583723

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-033ARG-191LEU-1-dimer.npy', np.array(charges))