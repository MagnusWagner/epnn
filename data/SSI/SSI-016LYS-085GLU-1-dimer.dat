import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.127616096134112    -0.543883399966108     0.049902273566528
    C               -3.184616096134112    -1.644883399966108    -0.089097726433472
    N               -1.398616096134112    -0.325883399966108    -1.254097726433472
    H               -2.618616096134112     0.382116600033892     0.368902273566527
    H               -1.421616096134112    -0.831883399966108     0.836902273566527
    H               -3.893616096134112    -1.337883399966108    -0.861097726433472
    H               -3.733616096134113    -1.741883399966108     0.849902273566527
    H               -2.027616096134112     0.041116600033892    -1.963097726433473
    H               -0.656616096134112     0.351116600033892    -1.087097726433472
    H               -0.998616096134112    -1.183883399966108    -1.611097726433472
    H               -2.728178096134112    -2.613843399966107    -0.339677726433472
    C                2.940383903865888     0.182116600033892     0.925902273566528
    C                1.663383903865888     0.643116600033892     0.311902273566528
    O                0.689383903865888     0.685116600033892     1.090902273566528
    O                1.588383903865888     1.045116600033892    -0.861097726433472
    H                2.745383903865887    -0.527883399966108     1.733902273566528
    H                3.421383903865888     1.057116600033892     1.366902273566528
    H                3.630320903865888    -0.290963399966108     0.211632273566528

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016LYS-085GLU-1-dimer.npy', np.array(charges))