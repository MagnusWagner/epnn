import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.965467320811103     1.071524599094195     2.194248476001266
    C               -0.538532679188897     0.892524599094195     2.128248476001266
    O               -1.079532679188897     0.498524599094195     1.094248476001266
    N               -1.226532679188897     1.159524599094195     3.229248476001266
    H                1.264467320811103     1.455524599094195     3.168248476001266
    H                1.247467320811103     1.819524599094195     1.453248476001266
    H               -2.227532679188897     1.037524599094195     3.206248476001266
    H               -0.757532679188897     1.371524599094195     4.104248476001266
    H                1.500903320811103     0.137034599094195     1.970548476001266
    C                1.263467320811103    -0.922475400905805    -3.405751523998735
    C                0.448467320811103    -0.967475400905805    -2.122751523998734
    O               -0.090532679188897    -1.999475400905805    -1.742751523998734
    N                0.307467320811103     0.176524599094195    -1.474751523998734
    H               -0.271532679188897     0.183524599094195    -0.639751523998734
    H                0.723467320811103     1.025524599094195    -1.826751523998734
    H                2.038467320811103    -0.162475400905805    -3.292751523998734
    H                0.605467320811103    -0.613475400905805    -4.218751523998734
    H                1.748810320811103    -1.878865400905805    -3.650209523998734

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-074GLN-094ASN-1-dimer.npy', np.array(charges))