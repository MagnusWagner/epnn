import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.345493956112645    -0.518421396616497     0.002451544622676
    C               -2.041493956112645     0.414578603383503     1.150451544622676
    O               -2.873493956112645     0.616578603383503     2.029451544622676
    N               -0.858493956112645     1.010578603383502     1.160451544622676
    H               -0.624493956112645     1.592578603383503     1.962451544622676
    H               -0.139493956112645     0.820578603383503     0.488451544622676
    H               -1.440493956112645    -0.872421396616498    -0.465548455377324
    H               -2.906493956112645     0.046578603383503    -0.744548455377325
    H               -2.933663956112645    -1.398521396616497     0.301583544622676
    C                2.378506043887355    -1.662421396616497    -0.549548455377324
    C                2.041506043887356    -0.329421396616497    -1.108548455377324
    O                2.878506043887355     0.347578603383503    -1.714548455377324
    N                0.815506043887355     0.075578603383503    -0.955548455377324
    H                0.608506043887355     0.977578603383502    -1.370548455377324
    H                0.129506043887355    -0.610421396616497    -0.693548455377324
    H                3.449506043887355    -1.830421396616497    -0.683548455377324
    H                1.860506043887355    -2.404421396616497    -1.139548455377324
    H                2.121146043887355    -1.761461396616497     0.515324544622676

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-105ASN-154ASN-1-dimer.npy', np.array(charges))