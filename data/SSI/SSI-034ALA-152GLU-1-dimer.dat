import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.167804326799739    -1.311066470740790     0.465952229644503
    C               -2.738804326799739    -0.526066470740790    -0.709047770355497
    H               -2.898804326799739    -2.028066470740789     0.843952229644503
    H               -1.272804326799738    -1.837066470740790     0.138952229644503
    H               -1.888804326799739    -0.625066470740790     1.266952229644503
    H               -1.955804326799739     0.129933529259210    -1.093047770355497
    H               -3.580174326799739     0.094203529259210    -0.366467770355497
    H               -3.015264326799739    -1.212896470740790    -1.522587770355497
    C                2.247195673200262    -0.523066470740790     0.371952229644503
    C                1.186195673200261     0.516933529259210     0.039952229644503
    O                0.911195673200261     0.746933529259210    -1.159047770355498
    O                0.638195673200261     1.125933529259210     0.989952229644503
    H                2.180195673200262    -0.763066470740790     1.433952229644503
    H                3.230195673200262    -0.085066470740790     0.185952229644503
    H                2.152645673200261    -1.449216470740790    -0.213967770355497

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-034ALA-152GLU-1-dimer.npy', np.array(charges))