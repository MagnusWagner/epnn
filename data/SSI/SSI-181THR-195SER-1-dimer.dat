import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.272039726788367    -1.788141343388761     1.320864719410026
    O               -0.426960273211633    -1.382141343388760     0.153864719410026
    H               -0.420960273211633    -2.118141343388761    -0.490135280589974
    H                0.110039726788367    -2.851141343388760     1.493864719410026
    H                1.343179726788368    -1.572047343388761     1.194514719410026
    H               -0.149880273211633    -1.213979343388760     2.158904719410027
    C                0.518039726788367     1.952858656611240    -1.183135280589974
    O               -0.343960273211633     1.325858656611240    -0.243135280589974
    H               -0.270960273211633     0.352858656611240    -0.296135280589974
    H                0.018039726788367     2.819858656611240    -1.617135280589974
    H                0.751039726788367     1.241858656611240    -1.978135280589974
    H                1.447229726788367     2.272719656611240    -0.688875280589974

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-181THR-195SER-1-dimer.npy', np.array(charges))