import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.269177320503784     1.606088279850278     0.030526709696296
    C               -0.978177320503783     1.439088279850278     0.792526709696296
    O                0.092822679496217     1.741088279850278     0.221526709696296
    O               -1.031177320503783     0.973088279850278     1.940526709696296
    H               -3.046177320503784     0.964088279850278     0.442526709696296
    H               -2.081177320503783     1.267088279850278    -0.979473290303704
    H               -2.639556320503783     2.641858279850279     0.032679709696296
    C                1.041822679496217    -1.345911720149722    -0.816473290303704
    C                0.545822679496217    -2.255911720149722    -1.935473290303704
    N                2.290822679496217    -1.884911720149722    -0.200473290303704
    H                1.238822679496217    -0.347911720149722    -1.219473290303704
    H                0.254822679496217    -1.251911720149722    -0.059473290303704
    H                0.280822679496217    -3.227911720149722    -1.516473290303704
    H                1.348822679496217    -2.411911720149722    -2.660473290303704
    H                3.041822679496216    -1.949911720149722    -0.877473290303704
    H                2.611822679496217    -1.281911720149722     0.548526709696296
    H                2.144822679496217    -2.807911720149721     0.192526709696296
    H               -0.330097320503783    -1.852081720149722    -2.464330290303704

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012ASP-024LYS-2-dimer.npy', np.array(charges))