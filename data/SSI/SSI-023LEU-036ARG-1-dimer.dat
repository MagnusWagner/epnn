import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.982766860608411    -1.242136592856878     1.218474194548167
    C                1.531766860608411    -2.475136592856878     1.944474194548167
    H                1.694766860608411    -0.915136592856878     0.462474194548167
    H                0.043766860608411    -1.497136592856878     0.725474194548167
    H                0.810766860608411    -0.435136592856878     1.931474194548167
    H                1.729766860608411    -3.226136592856878     1.180474194548167
    H                0.788256860608411    -2.869566592856878     2.652724194548167
    H                2.478706860608411    -2.262308592856878     2.462164194548167
    C               -1.188233139391589     1.257863407143122    -0.598525805451833
    C                0.141766860608411     2.021863407143122    -0.695525805451833
    C               -1.549233139391589     0.528863407143122    -1.904525805451833
    H               -1.128233139391589     0.516863407143122     0.199474194548167
    H               -1.973233139391589     1.961863407143122    -0.322525805451833
    H                0.915766860608411     1.358863407143122    -1.080525805451833
    H               -1.259233139391589     1.124863407143122    -2.769525805451833
    H               -0.992233139391589    -0.408136592856878    -1.949525805451833
    H                0.441806860608411     2.388834407143122     0.297104194548167
    H                0.041466860608411     2.863263407143122    -1.396935805451833
    H               -2.625713139391589     0.311710407143122    -1.968095805451833

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-023LEU-036ARG-1-dimer.npy', np.array(charges))