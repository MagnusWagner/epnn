import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.803428806880546     1.860888553255737    -3.609166454846216
    C               -1.627428806880546     1.965888553255737    -2.100166454846216
    O               -1.657428806880546     0.920888553255737    -1.421166454846216
    O               -1.448428806880546     3.100888553255736    -1.603166454846216
    H               -1.078428806880545     1.153888553255737    -4.009166454846215
    H               -1.578428806880546     2.820888553255737    -4.067166454846215
    H               -2.818408806880546     1.541548553255737    -3.888146454846216
    C                1.618571193119454    -2.393111446744263     3.503833545153784
    C                0.522571193119455    -0.299111446744263     0.743833545153785
    C                1.334571193119454    -1.761111446744263     2.171833545153785
    C                1.728571193119454    -2.131111446744263     0.924833545153784
    N                0.590571193119455    -0.610111446744263     2.031833545153784
    N                1.204571193119455    -1.202111446744263     0.050833545153784
    H               -0.027428806880545     0.531888553255737     0.327833545153784
    H                1.234571193119454    -1.226111446744263    -0.958166454846216
    H                2.329571193119455    -3.000111446744263     0.679833545153784
    H                2.164571193119455    -1.686111446744263     4.124833545153784
    H                2.284571193119455    -3.227111446744263     3.331833545153784
    H                0.723394193119455    -2.722541446744263     4.051683545153784

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-111ASP-193HIE-1-dimer.npy', np.array(charges))