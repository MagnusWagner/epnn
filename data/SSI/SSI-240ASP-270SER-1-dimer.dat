import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.639994773338862     2.055386069374654    -0.119060441283551
    C                0.713994773338862     0.962386069374654     0.398939558716449
    O               -0.410005226661138     0.870386069374654    -0.198060441283551
    O                1.023994773338862     0.257386069374654     1.370939558716449
    H                1.101994773338862     3.005386069374655    -0.132060441283551
    H                1.907994773338862     1.826386069374654    -1.151060441283551
    H                2.568164773338862     2.177586069374654     0.458499558716449
    C               -1.232005226661138    -2.565613930625346    -0.379060441283551
    O               -1.523005226661138    -1.325613930625346    -0.972060441283551
    H               -1.025005226661138    -0.589613930625346    -0.536060441283551
    H               -1.633005226661138    -3.373613930625345    -0.993060441283551
    H               -1.707005226661138    -2.603613930625345     0.602939558716449
    H               -0.145675226661138    -2.686393930625345    -0.255400441283551

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-240ASP-270SER-1-dimer.npy', np.array(charges))