import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.822509983363567    -0.286493587368967     2.105096222354685
    C               -0.218509983363567    -0.914493587368967     0.876096222354684
    O               -0.732509983363567    -0.703493587368967    -0.246903777645316
    O                0.798490016636433    -1.615493587368967     1.058096222354684
    H               -0.098509983363567     0.441506412631033     2.475096222354684
    H               -0.961509983363567    -1.033493587368967     2.888096222354684
    H               -1.773829983363567     0.224196412631033     1.894896222354685
    C                0.032490016636433     2.300506412631032    -1.760903777645315
    N                0.810490016636433     1.011506412631033    -1.740903777645315
    H                0.944490016636433     0.647506412631033    -2.677903777645316
    H                1.725490016636433     1.124506412631033    -1.302903777645315
    H                0.293490016636433     0.295506412631033    -1.220903777645315
    H                0.562490016636433     3.006506412631033    -2.411903777645316
    H                0.015490016636433     2.717506412631033    -0.746903777645316
    H               -1.007589983363567     2.234256412631033    -2.112823777645315

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-080ASP-087LYS-1-dimer.npy', np.array(charges))