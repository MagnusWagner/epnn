import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.485542551877824     0.731202069449298    -2.386346871412982
    C               -0.188542551877824     2.124202069449298    -1.869346871412982
    H               -0.397542551877824     0.710202069449298    -3.472346871412982
    H                0.222457448122176     0.019202069449298    -1.969346871412982
    H               -1.491542551877824     0.434202069449298    -2.107346871412981
    H               -0.331542551877824     2.126202069449298    -0.787346871412981
    H               -0.882042551877824     2.853282069449298    -2.313760871412981
    H                0.860987448122176     2.376002069449298    -2.081690871412982
    C                0.125457448122176    -0.549797930550702     1.061653128587019
    C               -0.459542551877824    -1.958797930550702     0.971653128587018
    C                1.022457448122176    -0.380797930550702     2.279653128587019
    H                0.703457448122176    -0.339797930550702     0.162653128587019
    H               -0.692542551877824     0.168202069449298     1.130653128587018
    H               -0.938542551877824    -2.194797930550702     1.914653128587019
    H                0.387457448122176    -0.529797930550702     3.157653128587018
    H                1.785457448122176    -1.150797930550702     2.342653128587019
    H                0.351277448122176    -2.680447930550702     0.793319128587018
    H               -1.220682551877824    -2.005517930550702     0.178886128587019
    H                1.473227448122176     0.618572069449298     2.369516128587018

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011ALA-016GLU-1-dimer.npy', np.array(charges))