import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.135190399469072     0.126529729041671     1.654830187569870
    C               -1.220809600530928    -0.597470270958329     1.470830187569870
    C               -0.108809600530928     1.313529729041671     2.585830187569869
    H                0.464190399469072     0.507529729041671     0.688830187569870
    H                0.890190399469072    -0.549470270958329     2.057830187569870
    H               -1.339809600530928    -0.917470270958329     0.435830187569870
    H               -1.289809600530928    -1.450470270958329     2.146830187569870
    H                0.512190399469072     2.170529729041671     2.317830187569870
    H                0.131190399469072     0.986529729041671     3.594830187569870
    H               -1.959730600530928     0.165379729041671     1.757270187569870
    H               -1.185476600530928     1.532619729041671     2.533050187569870
    C                0.429190399469072    -0.405470270958329    -2.069169812430130
    C                0.775190399469072    -0.433470270958329    -3.538169812430130
    H               -0.441809600530928    -1.025470270958329    -1.870169812430130
    H                1.262190399469072    -0.806470270958329    -1.492169812430130
    H                0.231190399469072     0.616529729041671    -1.742169812430130
    H                0.914190399469072    -1.462470270958329    -3.856169812430130
    H               -0.018762920530928     0.069149729041671    -4.110019812430131
    H                1.711569399469072     0.120109729041671    -3.701709812430130

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-018PRO-139LEU-1-dimer.npy', np.array(charges))