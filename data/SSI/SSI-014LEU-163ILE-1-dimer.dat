import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.604560409911121    -1.819380861097257    -1.031833704155190
    C               -1.197560409911121    -3.063380861097257    -1.674833704155190
    H               -0.449560409911121    -1.051380861097257    -1.786833704155190
    H               -1.300560409911121    -1.434380861097257    -0.286833704155190
    H                0.342439590088879    -2.059380861097257    -0.545833704155190
    H               -2.058560409911121    -2.758380861097257    -2.269833704155190
    H               -0.474197409911121    -3.566210861097257    -2.333543704155190
    H               -1.555422409911121    -3.752410861097257    -0.895618704155190
    C                0.654439590088879     1.104619138902743     0.934166295844810
    C                1.189439590088879     1.956619138902743    -0.228833704155190
    C                0.006439590088879     1.899619138902743     2.057166295844810
    H               -0.080560409911121     0.402619138902743     0.546166295844810
    H                1.465439590088879     0.534619138902743     1.387166295844810
    H                1.885439590088879     2.687619138902743     0.181166295844810
    H               -0.910560409911121     2.377619138902743     1.714166295844810
    H               -0.246560409911121     1.224619138902743     2.875166295844810
    H                0.702439590088879     2.650619138902742     2.426166295844809
    H                1.733699590088879     1.321059138902743    -0.942863704155190
    H                0.372639590088879     2.493499138902743    -0.733412704155190

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-014LEU-163ILE-1-dimer.npy', np.array(charges))