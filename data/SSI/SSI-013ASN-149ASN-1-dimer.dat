import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.714578551348043     0.515274844813547    -1.484230858943043
    C               -0.479578551348043     1.217274844813548    -2.022230858943042
    O               -0.571578551348043     2.092274844813547    -2.881230858943043
    N                0.681421448651957     0.856274844813547    -1.500230858943043
    H                1.533421448651957     1.254274844813547    -1.858230858943043
    H                0.696421448651957     0.101274844813547    -0.818230858943043
    H               -2.170578551348043     1.174274844813547    -0.759230858943043
    H               -1.438578551348043    -0.410725155186453    -0.984230858943043
    H               -2.451668551348043     0.286594844813547    -2.268070858943042
    C               -0.570578551348043    -1.440725155186453     2.892769141056958
    C                0.512421448651957    -1.150725155186452     1.880769141056957
    O                0.284421448651957    -1.152725155186453     0.672769141056957
    N                1.720421448651957    -0.926725155186453     2.368769141056957
    H               -0.306578551348043    -0.994725155186453     3.849769141056957
    H               -0.597578551348043    -2.521725155186453     3.026769141056957
    H                2.463421448651957    -0.672725155186453     1.739769141056957
    H                1.840421448651957    -0.842725155186453     3.373769141056957
    H               -1.565438551348043    -1.079485155186452     2.593169141056957

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-013ASN-149ASN-1-dimer.npy', np.array(charges))