import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.177312079211733    -0.556869967581908     2.181491991845526
    C               -0.650687920788267    -0.722869967581908     3.450491991845527
    H               -0.402687920788267    -0.020869967581908     1.429491991845527
    H                1.086312079211733     0.004130032418092     2.402491991845527
    H                0.457312079211733    -1.535869967581908     1.790491991845527
    H               -0.034687920788267    -1.229869967581908     4.184491991845527
    H               -1.551622920788267    -1.320369967581908     3.247241191845526
    H               -0.889825920788267     0.268573032418092     3.862624191845526
    C                0.821312079211733    -0.842869967581908    -1.800508008154473
    C                0.061312079211733     0.407130032418092    -1.441508008154473
    O                0.743312079211733     1.438130032418092    -1.348508008154473
    O               -1.157687920788267     0.311130032418092    -1.158508008154473
    H                0.134312079211733    -1.634869967581908    -2.096508008154473
    H                1.335312079211732    -1.181869967581908    -0.897508008154473
    H                1.569172079211732    -0.685084967581908    -2.591593008154474

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-045LEU-055ASP-1-dimer.npy', np.array(charges))