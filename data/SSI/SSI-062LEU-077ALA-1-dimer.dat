import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.221593926989349    -1.177811573129748    -1.257337630407699
    C                0.704593926989349     0.202188426870252    -1.720337630407699
    C                1.338593926989349    -2.169811573129748    -0.903337630407699
    H               -0.424406073010651    -1.053811573129749    -0.388337630407699
    H               -0.386406073010651    -1.620811573129748    -2.048337630407699
    H                1.274593926989349     0.675188426870251    -0.919337630407699
    H                1.941593926989349    -2.375811573129749    -1.787337630407699
    H               -0.150306073010651     0.849408426870252    -1.965787630407699
    H                1.366383926989349     0.094538426870252    -2.592367630407699
    H                1.986243926989349    -1.754391573129748    -0.117217630407699
    H                0.891723926989349    -3.116981573129749    -0.566917630407699
    C               -0.955406073010651     0.818188426870252     1.695662369592301
    C               -1.289406073010651     2.251188426870252     2.105662369592301
    H               -0.697406073010651     0.219188426870252     2.570662369592301
    H               -1.811406073010651     0.368188426870252     1.192662369592301
    H               -0.105406073010651     0.827188426870251     1.014662369592301
    H               -1.580406073010651     2.806188426870252     1.215662369592301
    H               -0.398896073010651     2.726978426870251     2.542242369592301
    H               -2.143676073010651     2.260548426870251     2.798582369592301

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-062LEU-077ALA-1-dimer.npy', np.array(charges))