import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.006551145438672     0.307759448168654     1.639617735641173
    C                2.394551145438672    -0.866240551831346     0.755617735641173
    H                2.274551145438672     1.249759448168654     1.160617735641173
    H                0.931551145438672     0.308759448168654     1.806617735641173
    H                2.508551145438672     0.231759448168654     2.605617735641173
    H                1.997551145438672    -0.687240551831346    -0.241382264358827
    H                3.487151145438672    -0.977160551831346     0.692956735641173
    H                1.942931145438672    -1.794840551831346     1.134743735641173
    C               -1.029448854561328     0.131759448168654    -0.511382264358827
    C               -2.335448854561328    -0.582240551831346    -0.163382264358827
    C               -1.103448854561328     1.020759448168654    -1.754382264358827
    H               -0.734448854561328     0.749759448168654     0.336617735641173
    H               -0.260448854561328    -0.623240551831346    -0.673382264358827
    H               -2.694448854561328    -1.137240551831346    -1.030382264358827
    H               -1.873448854561328     1.775759448168654    -1.624382264358827
    H               -3.103188854561327     0.141009448168654     0.148842735641173
    H               -2.162158854561328    -1.331710551831346     0.622913735641173
    H               -0.144968854561328     1.539759448168654    -1.902563264358827
    H               -1.368508854561328     0.414399448168654    -2.633059264358827

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004LEU-179LEU-1-dimer.npy', np.array(charges))