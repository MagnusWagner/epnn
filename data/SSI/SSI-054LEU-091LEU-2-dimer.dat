import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.416488062841164     1.087754164993329     0.051524971298197
    C                1.100488062841164     1.773754164993329     1.238524971298197
    C               -0.427511937158836     1.950754164993330    -0.893475028701803
    H                1.184488062841164     0.590754164993329    -0.542475028701803
    H               -0.257511937158836     0.340754164993329     0.470524971298197
    H                0.366488062841164     2.364754164993329     1.790524971298197
    H                0.185488062841164     2.726754164993330    -1.343475028701804
    H                1.909758062841164     2.431143164993329     0.887914971298197
    H                1.482848062841164     1.016947164993329     1.939274971298197
    H               -0.831501937158836     1.309414164993330    -1.690641028701803
    H               -1.252671937158835     2.429696164993329    -0.346005028701803
    C                0.087488062841164    -2.199245835006671    -0.611475028701803
    C               -1.149511937158836    -2.528245835006671     0.213524971298197
    H               -0.187511937158836    -1.807245835006670    -1.589475028701803
    H                0.721488062841164    -1.501245835006671    -0.079475028701803
    H                0.701488062841164    -3.089245835006670    -0.722475028701803
    H               -1.850511937158836    -1.695245835006671     0.163524971298197
    H               -1.620261937158836    -3.437359835006671    -0.188845028701803
    H               -0.878801937158836    -2.689225835006670     1.267474971298197

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-054LEU-091LEU-2-dimer.npy', np.array(charges))