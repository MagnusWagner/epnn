import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.641970999248119    -0.856891260214521    -1.367618877900746
    C               -2.519970999248118     0.035108739785479    -2.240618877900746
    H               -2.116970999248118    -1.824891260214521    -1.206618877900747
    H               -0.678970999248118    -1.011891260214521    -1.853618877900747
    H               -1.478970999248118    -0.374891260214521    -0.405618877900746
    H               -1.952970999248118     0.940108739785479    -2.459618877900747
    H               -3.434248999248118     0.331961739785479    -1.705848877900746
    H               -2.741361999248118    -0.464854260214521    -3.195098877900747
    C                1.576029000751882     1.551108739785479     0.778381122099253
    C                1.020029000751882     0.135108739785479     0.929381122099253
    O                0.130029000751882    -0.099891260214521     1.780381122099254
    O                1.496029000751881    -0.755891260214521     0.189381122099253
    H                1.419029000751882     1.906108739785479    -0.242618877900747
    H                2.656029000751882     1.508108739785479     0.942381122099254
    H                1.166429000751881     2.279450739785479     1.493741122099254

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-114VAL-167GLU-1-dimer.npy', np.array(charges))