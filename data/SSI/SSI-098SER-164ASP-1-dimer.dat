import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.200545362824483    -0.254332600343665    -1.697006113396239
    O               -2.282545362824483     0.071667399656335    -0.337006113396239
    H               -1.452545362824484    -0.204332600343665     0.098993886603761
    H               -1.650545362824484    -1.185332600343665    -1.831006113396239
    H               -1.696545362824484     0.547667399656335    -2.239006113396239
    H               -3.232255362824484    -0.369048600343665    -2.060886113396239
    C                1.125454637175517     1.335667399656335    -0.124006113396239
    C                1.206454637175516    -0.007332600343665     0.587993886603761
    O                0.166454637175517    -0.594332600343666     0.937993886603761
    O                2.315454637175516    -0.520332600343665     0.765993886603761
    H                0.631454637175517     1.165667399656335    -1.083006113396239
    H                2.123454637175517     1.725667399656335    -0.337006113396239
    H                0.548804637175517     2.084883399656335     0.438263886603761

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-098SER-164ASP-1-dimer.npy', np.array(charges))