import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.135306312291349     0.689432803808818    -2.493483261798095
    C               -1.980306312291349     0.771432803808818    -3.757483261798094
    H               -0.436306312291349    -0.144567196191182    -2.570483261798095
    H               -0.564306312291349     1.611432803808818    -2.373483261798095
    H               -1.741306312291349     0.545432803808818    -1.604483261798094
    H               -2.526306312291349     1.717432803808818    -3.749483261798094
    H               -2.709246312291349    -0.052366196191182    -3.755343261798095
    H               -1.367466312291349     0.737939803808818    -4.670333261798094
    C               -0.145306312291349    -0.838567196191182     0.770516738201905
    C                0.068693687708651    -2.202567196191182     1.414516738201905
    C                0.821693687708651     0.222432803808818     1.277516738201905
    O                1.961693687708651    -0.093567196191182     1.638516738201906
    O                0.456693687708651     1.404432803808818     1.296516738201906
    H                0.007693687708651    -0.942567196191182    -0.304483261798095
    H               -1.168306312291349    -0.498567196191182     0.927516738201905
    H                1.114693687708651    -2.487567196191182     1.287516738201906
    H               -0.594466312291349    -2.944190896191182     0.945246738201905
    H               -0.170726312291349    -2.179280396191182     2.487896738201905

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ILE-086ASP-1-dimer.npy', np.array(charges))