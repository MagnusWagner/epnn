import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.619304506684949    -0.160031846509405    -2.740994077663586
    O                0.061695493315051     0.903968153490594    -2.083994077663587
    H                0.120695493315051     0.706968153490594    -1.122994077663587
    H               -1.048304506684949     0.212968153490595    -3.672994077663587
    H               -1.431304506684949    -0.517031846509405    -2.105994077663587
    H                0.058735493315051    -0.994371846509405    -2.973667977663587
    C                0.358695493315051    -0.305031846509405     2.705005922336413
    C                0.127695493315051    -0.201031846509405     1.216005922336413
    O                0.440695493315051     0.873968153490595     0.657005922336413
    O               -0.340304506684949    -1.179031846509405     0.581005922336413
    H                0.622695493315051     0.672968153490594     3.114005922336414
    H                1.203695493315051    -0.967031846509405     2.887005922336414
    H               -0.516064506684949    -0.688431846509405     3.250720922336414

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011SER-223GLU-1-dimer.npy', np.array(charges))