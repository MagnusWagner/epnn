import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.228534824001414    -1.444346178184615    -2.028996113517210
    C                0.924465175998586    -0.873346178184615    -2.846996113517210
    H                0.060465175998586    -1.562346178184615    -0.985996113517210
    H               -1.089534824001414    -0.778346178184615    -2.090996113517210
    H               -0.512534824001414    -2.418346178184615    -2.428996113517210
    H                0.589465175998587    -0.796346178184615    -3.881996113517210
    H                1.799905175998586    -1.538138178184615    -2.806294113517210
    H                1.182135175998587     0.136469821815385    -2.495036113517209
    C               -0.561534824001414     0.355653821815385     1.377003886482790
    C                0.837465175998586     0.224653821815385     1.920003886482790
    C               -1.008534824001414     1.753653821815385     1.677003886482790
    H               -1.232534824001414    -0.384346178184615     1.815003886482790
    H               -0.533534824001413     0.234653821815385     0.296003886482790
    H                0.813465175998586    -0.175346178184615     2.935003886482790
    H                1.434465175998586    -0.408346178184615     1.262003886482790
    H               -1.506534824001414     1.758653821815386     2.649003886482790
    H               -1.691534824001414     2.126653821815386     0.912003886482790
    H                1.209055175998586     1.259857821815386     1.936518886482790
    H               -0.086074824001414     2.351558821815385     1.716671886482790

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-003VAL-083PRO-1-dimer.npy', np.array(charges))