import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.224803467489465    -0.385751834969443     2.042465275974156
    O                1.267803467489465    -1.149751834969443     1.328465275974157
    H                0.438803467489466    -0.641751834969443     1.229465275974157
    H                1.860803467489465    -0.214751834969443     3.052465275974157
    H                2.369803467489465     0.570248165030557     1.552465275974157
    H                3.182987467489465    -0.922708834969443     2.102127275974157
    C                0.311803467489466     1.045248165030557    -1.260534724025843
    C               -1.001196532510535     0.373248165030557    -0.890534724025843
    O               -1.137196532510535    -0.078751834969443     0.268465275974157
    O               -1.897196532510535     0.298248165030557    -1.761534724025843
    H                0.980803467489465     1.047248165030557    -0.401534724025843
    H                0.108803467489466     2.084248165030557    -1.527534724025843
    H                0.813185467489466     0.544586165030557    -2.101934724025843

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-141SER-144ASP-1-dimer.npy', np.array(charges))