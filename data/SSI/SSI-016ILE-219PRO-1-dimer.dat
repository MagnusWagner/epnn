import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.735057719123665    -1.052535517177243    -0.895519330423221
    C                2.696057719123665    -0.073535517177243    -1.586519330423221
    H                2.063057719123665    -2.079535517177243    -1.065519330423222
    H                1.697057719123665    -0.866535517177243     0.177480669576779
    H                0.724057719123665    -0.931535517177243    -1.261519330423222
    H                2.269057719123665     0.912464482822757    -1.393519330423221
    H                2.658607719123665    -0.196994517177243    -2.678927330423222
    H                3.701157719123665    -0.003609517177243    -1.145065330423221
    C               -1.677942280876335    -0.158535517177243     0.559480669576779
    C               -1.276942280876335     0.050464482822757     2.035480669576779
    C               -1.584942280876335     1.203464482822757    -0.083519330423221
    H               -2.683942280876335    -0.572535517177243     0.479480669576779
    H               -0.957942280876335    -0.837535517177243     0.115480669576779
    H               -2.149942280876335     0.313464482822757     2.635480669576778
    H               -0.782942280876335    -0.841535517177243     2.425480669576778
    H               -2.508942280876335     1.746464482822757     0.100480669576779
    H               -1.394942280876335     1.131464482822757    -1.155519330423221
    H               -0.591802280876335     0.908569482822757     1.970340669576778
    H               -0.748132280876335     1.682662482822757     0.445744669576779

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016ILE-219PRO-1-dimer.npy', np.array(charges))