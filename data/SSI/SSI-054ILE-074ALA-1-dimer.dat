import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.771376701020515     0.524484119094946     0.151240140716205
    C               -2.393376701020514    -0.655515880905054     0.916240140716205
    C               -0.555376701020515     1.051484119094946     0.909240140716205
    H               -1.472376701020515     0.209484119094946    -0.849759859283795
    H               -2.493376701020515     1.336484119094946     0.071240140716205
    H               -2.696376701020515    -0.295515880905054     1.897240140716205
    H                0.243623298979485     0.325484119094946     1.008240140716205
    H               -0.168376701020515     1.926484119094946     0.386240140716205
    H               -0.860376701020515     1.365484119094946     1.908240140716204
    H               -3.276923701020515    -1.048205880905054     0.391700140716205
    H               -1.665656701020515    -1.466405880905054     1.067520140716205
    C                1.578623298979485    -0.290515880905054    -1.187759859283795
    C                3.020623298979486    -0.602515880905054    -0.778759859283795
    H                1.328623298979485     0.726484119094946    -0.897759859283795
    H                1.488623298979485    -0.356515880905054    -2.272759859283795
    H                0.893623298979485    -1.011515880905054    -0.746759859283795
    H                3.350623298979485    -1.497515880905054    -1.311759859283796
    H                3.098403298979485    -0.774695880905054     0.304890140716205
    H                3.669283298979486     0.233974119094946    -1.077969859283795

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-054ILE-074ALA-1-dimer.npy', np.array(charges))