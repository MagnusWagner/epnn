import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                2.071828656948742    -2.090014222360951    -1.497078305053540
    C                0.318828656948742    -0.842014222360951    -0.249078305053540
    N               -0.968171343051258    -0.536014222360951    -0.156078305053540
    N                0.712828656948742    -1.621014222360950    -1.247078305053540
    N                1.157828656948742    -0.400014222360951     0.654921694946460
    H               -1.587171343051257    -0.877014222360951    -0.889078305053540
    H               -1.289171343051257     0.152985777639049     0.511921694946460
    H               -0.026171343051258    -1.899014222360951    -1.894078305053540
    H                2.129828656948743    -0.659014222360951     0.601921694946460
    H                0.823828656948743     0.167985777639049     1.416921694946460
    H                2.455828656948742    -2.621014222360951    -0.623078305053540
    H                2.716828656948743    -1.234014222360950    -1.706078305053540
    H                2.090078656948743    -2.763734222360950    -2.366428305053540
    C               -1.817171343051257     3.110985777639049     0.810921694946460
    O               -1.236171343051258     1.940985777639050     1.394921694946460
    H               -1.168171343051257     2.088985777639050     2.352921694946459
    H               -1.335171343051258     3.319985777639050    -0.145078305053540
    H               -1.664171343051257     3.965985777639049     1.470921694946460
    H               -2.895284343051257     2.950655777639050     0.662711694946460

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008ARG-115SER-1-dimer.npy', np.array(charges))