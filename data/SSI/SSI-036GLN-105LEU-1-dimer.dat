import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.919332714534836     1.250340080959497    -0.615539314801485
    C                2.127332714534836     0.593340080959497    -1.320539314801485
    C               -0.037667285465164     1.971340080959497    -1.541539314801485
    H                0.352332714534836     0.473340080959497    -0.108539314801485
    H                1.271332714534835     1.946340080959497     0.147460685198515
    H                2.786332714534836     1.371340080959497    -1.710539314801485
    H               -0.422667285465164     1.294340080959497    -2.302539314801485
    H               -0.885667285465164     2.342340080959497    -0.965539314801485
    H                1.765011014534836    -0.066576919040503    -2.122557314801485
    H                2.679528014534836     0.028186080959497    -0.555241314801485
    H                0.472381714534836     2.826573080959497    -2.008900314801485
    C               -1.093667285465164    -1.248659919040503     1.453460685198515
    C               -1.846667285465164    -2.479659919040503     1.974460685198515
    H               -0.203667285465164    -1.570659919040503     0.912460685198515
    H               -1.738667285465165    -0.696659919040503     0.769460685198515
    H               -0.810667285465164    -0.600659919040503     2.282460685198515
    H               -2.102667285465164    -3.085659919040503     1.106460685198515
    H               -1.202182285465164    -3.066969919040503     2.645063685198514
    H               -2.778298285465164    -2.227599919040503     2.502217685198515

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-036GLN-105LEU-1-dimer.npy', np.array(charges))