import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -1.453241008714387     1.542168966766008     0.949657600469533
    C               -1.954241008714387     2.970168966766008     1.152657600469533
    H               -0.570241008714387     1.351168966766008     1.561657600469533
    H               -2.238241008714387     0.834168966766008     1.220657600469532
    H               -1.204241008714387     1.375168966766008    -0.099342399530467
    H               -2.692241008714388     3.163168966766008     0.371657600469533
    H               -1.141911008714387     3.704828966766008     1.050759600469533
    H               -2.462251008714388     3.093448966766009     2.120502900469533
    C                0.563758991285612    -1.270831033233992    -0.516342399530467
    C                1.491758991285613    -0.457831033233992    -1.431342399530467
    N                1.235758991285613    -2.531831033233992    -0.157342399530467
    H                0.315758991285613    -0.684831033233992     0.375657600469533
    H               -0.365241008714387    -1.483831033233992    -1.056342399530467
    H                0.904758991285612     0.350168966766008    -1.872342399530467
    H                1.858758991285613    -1.087831033233992    -2.245342399530467
    H                2.088758991285613    -2.381831033233992     0.366657600469533
    H                0.631758991285613    -3.109831033233992     0.416657600469533
    H                1.464758991285612    -3.077831033233992    -0.979342399530467
    H                2.337348991285613    -0.012741033233992    -0.886483399530467

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-068ILE-072LYS-1-dimer.npy', np.array(charges))