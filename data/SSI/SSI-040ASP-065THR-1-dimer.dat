import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.687223332502973    -0.319846414080903    -0.452163394701449
    C                1.926223332502973     0.528153585919097    -0.714163394701449
    C               -0.250776667497027    -0.362846414080903    -1.651163394701449
    O               -0.444776667497027    -1.473846414080903    -2.198163394701449
    O               -0.789776667497027     0.703153585919097    -2.031163394701449
    H                0.989223332502973    -1.332846414080903    -0.176163394701449
    H                0.134223332502973     0.118153585919097     0.364836605298551
    H                2.384223332502972     0.198153585919097    -1.646163394701449
    H                2.637178332502972     0.441263585919097     0.120698605298551
    H                1.659881932502973     1.592073585919097    -0.798613394701449
    C               -0.681776667497027     0.826153585919097     3.810836605298551
    O               -0.312776667497027     0.052153585919097     2.677836605298551
    H               -0.932776667497027    -0.683846414080903     2.607836605298551
    H               -0.607776667497027     0.210153585919097     4.707836605298551
    H               -0.002582167497027     1.685603585919097     3.911057605298551
    H               -1.718453667497027     1.178233585919097     3.704343605298551

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-040ASP-065THR-1-dimer.npy', np.array(charges))