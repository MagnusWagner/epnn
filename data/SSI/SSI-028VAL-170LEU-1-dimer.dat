import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.034668051942155     1.209030288132348    -1.558589953025524
    C                1.467331948057845     1.290030288132348    -2.031589953025525
    H               -0.592668051942155     2.077030288132348    -1.887589953025524
    H               -0.501668051942155     0.323030288132348    -1.983589953025524
    H               -0.075668051942155     1.168030288132348    -0.474589953025524
    H                1.466331948057845     1.303030288132348    -3.119589953025524
    H                1.929151948057845     2.224881288132348    -1.681199953025524
    H                2.032081948057844     0.396320288132348    -1.727709953025524
    C               -0.283668051942155    -0.895969711867652     1.260410046974476
    C               -1.146668051942155    -1.602969711867652     2.331410046974475
    H               -0.048668051942155     0.119030288132348     1.581410046974476
    H                0.652331948057845    -1.443969711867652     1.131410046974476
    H               -0.818668051942155    -0.882969711867652     0.311410046974476
    H               -0.668668051942156    -1.464969711867652     3.294410046974475
    H               -2.141828051942156    -1.135457711867652     2.364340046974476
    H               -1.259778051942156    -2.685428711867652     2.171760046974476

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028VAL-170LEU-1-dimer.npy', np.array(charges))