import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.574387966018179    -0.677358814807959     1.913192364006678
    C               -1.234387966018179     0.701641185192041     2.484192364006678
    H               -2.018387966018179    -0.574358814807959     0.920192364006678
    H               -0.662387966018179    -1.261358814807959     1.819192364006678
    H               -2.274387966018179    -1.197358814807959     2.569192364006677
    H               -0.484387966018179     1.165641185192041     1.847192364006678
    H               -2.149757966018179     1.311641185192041     2.483462364006678
    H               -0.831057966018179     0.617071185192041     3.504082364006678
    C                0.784612033981821    -0.383358814807959    -1.090807635993322
    C                1.872612033981821    -0.689358814807959    -2.120807635993322
    C                0.203612033981821     1.016641185192041    -1.258807635993322
    H               -0.025387966017179    -1.105358814807959    -1.160807635993322
    H                1.195612033981821    -0.432358814807959    -0.083807635993322
    H                2.584612033981821     0.137641185192041    -2.119807635993322
    H               -0.293387966018179     1.114641185192041    -2.221807635993322
    H               -0.534387966018179     1.197641185192041    -0.478807635993322
    H                0.994612033981821     1.763641185192041    -1.178807635993322
    H                2.440932033981821    -1.605058814807959    -1.900587635993322
    H                1.437892033981821    -0.753498814807959    -3.129227635993322

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024LEU-260ILE-1-dimer.npy', np.array(charges))