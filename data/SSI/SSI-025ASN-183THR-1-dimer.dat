import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.481339643776508     1.187248176734212     1.193938939148029
    C                1.360339643776508     0.000248176734212     0.852938939148029
    O                2.468339643776508    -0.130751823265788     1.364938939148029
    N                0.864339643776508    -0.876751823265788    -0.000061060851971
    H                1.377339643776508    -1.723751823265788    -0.220061060851971
    H               -0.036660356223492    -0.713751823265788    -0.438061060851971
    H                0.029339643776508     1.577248176734212     0.280938939148029
    H                1.126339643776509     1.957248176734212     1.612938939148029
    H               -0.305660356223492     0.924438176734212     1.916128939148029
    C               -3.077660356223491     0.080248176734212    -1.422061060851971
    O               -1.696660356223491    -0.214751823265788    -1.614061060851971
    H               -1.456660356223492     0.085248176734212    -2.503061060851971
    H               -3.638660356223492    -0.275751823265788    -2.287061060851971
    H               -3.437070356223491    -0.430221823265788    -0.516391060851971
    H               -3.198240356223492     1.169768176734212    -1.330361060851971

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025ASN-183THR-1-dimer.npy', np.array(charges))