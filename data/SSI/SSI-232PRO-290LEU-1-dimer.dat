import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.590525865699045     1.669711991345187     0.100366390332141
    C                1.355525865699045     1.960711991345186    -1.175633609667859
    C                1.482525865699045     0.602711991345187     0.744366390332141
    H               -0.408474134300955     1.294711991345187    -0.104633609667859
    H                0.533525865699045     2.558711991345186     0.729366390332141
    H                1.211525865699045     1.178711991345187    -1.921633609667859
    H                1.070525865699045     2.921711991345187    -1.600633609667859
    H                1.395525865699045    -0.314288008654813     0.157366390332141
    H                1.293525865699045     0.384711991345187     1.795366390332141
    H                2.392392865699045     1.965211991345187    -0.808363609667859
    H                2.484429865699045     1.036411991345187     0.609866390332141
    C               -1.260474134300955    -1.482288008654813     0.411366390332141
    C               -2.147474134300955    -2.638288008654813    -0.071633609667859
    H               -1.821474134300955    -0.851288008654813     1.101366390332141
    H               -0.384474134300955    -1.880288008654813     0.923366390332141
    H               -0.940474134300955    -0.886288008654813    -0.443633609667859
    H               -2.466474134300955    -3.223288008654813     0.791366390332141
    H               -3.037304134300955    -2.243488008654813    -0.583783609667859
    H               -1.568407134300955    -3.281488008654813    -0.750543609667859

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-232PRO-290LEU-1-dimer.npy', np.array(charges))