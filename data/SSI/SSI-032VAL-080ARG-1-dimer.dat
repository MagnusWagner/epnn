import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.049231505429510    -0.659295313230043    -0.471418746203893
    C                3.082231505429510    -1.441295313230043     0.292581253796107
    H                1.538231505429510    -0.025295313230043     0.244581253796107
    H                2.552231505429510    -0.013295313230043    -1.192418746203893
    H                1.332231505429510    -1.282295313230043    -1.005418746203893
    H                3.937231505429510    -1.586295313230043    -0.367418746203893
    H                2.703081505429510    -2.431325313230043     0.585977253796107
    H                3.428751505429510    -0.854985313230043     1.156390253796107
    C               -1.283768494570490     0.848704686769957    -0.160418746203893
    C               -2.349768494570490     0.047704686769957    -0.952418746203893
    C               -1.592768494570491     1.251704686769957     1.294581253796107
    H               -0.400768494570490     0.237704686769957    -0.153418746203893
    H               -1.059768494570490     1.767704686769957    -0.704418746203893
    H               -3.318768494570490     0.549704686769957    -0.857418746203893
    H               -1.881768494570490     0.354704686769957     1.800581253796107
    H               -0.721768494570490     1.752704686769957     1.706581253796107
    H               -2.417827494570490    -0.996365313230043    -0.612872746203893
    H               -2.112632494570490     0.026214686769957    -2.026338746203893
    H               -2.449183494570490     1.935265686769957     1.391008253796107

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032VAL-080ARG-1-dimer.npy', np.array(charges))