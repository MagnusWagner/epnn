import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.257502547479871     1.194117866209170    -0.248717679025860
    C                1.642502547479871     1.621117866209169    -0.768717679025860
    C               -0.743497452520129     2.350117866209170    -0.125717679025860
    H               -0.145497452520129     0.451117866209170    -0.935717679025860
    H                0.361502547479871     0.738117866209170     0.736282320974140
    H                1.981502547479871     2.485117866209170    -0.199717679025860
    H               -0.793497452520129     2.840117866209170    -1.094717679025860
    H                1.619362547479871     1.900998566209169    -1.832267679025860
    H                2.363642547479871     0.823122566209170    -0.538157679025860
    H               -1.750237452520129     1.950141666209170     0.065322320974140
    H               -0.471107452520129     3.124239866209170     0.606772320974140
    C               -0.549497452520129    -2.259882133790830    -0.182717679025860
    C               -0.590497452520129    -2.820882133790831     1.305282320974140
    H               -1.361497452520129    -1.542882133790831    -0.321717679025860
    H                0.403502547479871    -1.755882133790830    -0.343717679025860
    H               -0.673497452520129    -3.076882133790831    -0.891717679025860
    H                0.196502547479871    -3.568882133790831     1.371282320974140
    H               -1.545307452520129    -3.310857133790830     1.546682320974140
    H               -0.381987452520129    -2.064779133790831     2.076532320974140

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031LEU-091LEU-1-dimer.npy', np.array(charges))