import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.647923560973738    -0.423543196438179    -1.461615126749910
    C               -1.200923560973737    -0.728543196438179    -1.141615126749910
    O               -0.309923560973737     0.079456803561821    -1.388615126749910
    N               -0.958923560973737    -1.901543196438179    -0.579615126749910
    H               -2.948923560973737     0.418456803561821    -0.845615126749910
    H               -3.274923560973738    -1.273543196438179    -1.194615126749910
    H               -0.026923560973737    -2.093543196438179    -0.229615126749910
    H               -1.708923560973737    -2.546543196438179    -0.390615126749910
    H               -2.801739560973738    -0.161913196438179    -2.518918426749911
    C                1.270076439026262     0.541456803561821     1.498384873250090
    C                2.416076439026262     0.582456803561821     0.487384873250090
    O                1.206076439026263     1.728456803561821     2.270384873250090
    H                0.322076439026263     0.431456803561821     0.975384873250090
    H                1.393076439026263    -0.316543196438179     2.158384873250090
    H                2.198076439026262    -0.160543196438179    -0.281615126749910
    H                2.053076439026262     1.843456803561821     2.745384873250089
    H                3.370119439026262     0.350366803561821     0.983305873250090
    H                2.463204439026263     1.572146803561821     0.009579873250090

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-039ASN-081SER-1-dimer.npy', np.array(charges))