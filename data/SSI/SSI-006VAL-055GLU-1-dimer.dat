import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.348974562304892     0.776954723142404    -1.614183181797912
    C                2.452974562304892     1.347954723142404    -2.459183181797913
    H                1.458974562304892    -0.302045276857596    -1.517183181797912
    H                1.377974562304892     1.227954723142404    -0.622183181797913
    H                0.386974562304892     1.000954723142404    -2.074183181797912
    H                2.315974562304892     2.428954723142404    -2.496183181797913
    H                2.394776562304892     0.949294723142404    -3.482743181797912
    H                3.429001562304892     1.138084723142404    -1.997313181797913
    C               -0.490025437695108    -1.460045276857596     0.606816818202088
    C                0.453974562304892    -1.666045276857596     1.772816818202088
    C               -1.125025437695108    -0.067045276857596     0.600816818202088
    O               -1.103025437695108     0.625954723142404     1.641816818202088
    O               -1.646025437695108     0.329954723142404    -0.468183181797913
    H                0.039974562304892    -1.616045276857596    -0.331183181797913
    H               -1.296025437695108    -2.194045276857596     0.663816818202088
    H               -0.110025437695108    -1.594045276857596     2.704816818202088
    H                1.195974562304892    -0.865045276857596     1.764816818202087
    H                0.991437562304892    -2.625805276857596     1.774266818202088

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-006VAL-055GLU-1-dimer.npy', np.array(charges))