import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.372519957120345    -1.324587916281221     1.371395266418455
    C               -2.341519957120345    -1.348587916281221     2.534395266418455
    H               -1.798519957120345    -0.800587916281221     0.512395266418455
    H               -0.457519957120345    -0.811587916281221     1.671395266418455
    H               -1.097519957120345    -2.341587916281221     1.088395266418455
    H               -1.965519957120345    -2.070587916281221     3.261395266418455
    H               -3.333573957120346    -1.687097916281221     2.200865266418455
    H               -2.386129957120345    -0.375807916281221     3.045965266418455
    C                0.897480042879655     0.829412083718779    -0.863604733581545
    C                2.428480042879654     0.784412083718779    -0.807604733581545
    C                0.437480042879655     1.109412083718779    -2.287604733581545
    H                0.489480042879655    -0.122587916281221    -0.526604733581545
    H                0.521480042879655     1.620412083718779    -0.214604733581545
    H                2.795480042879655     1.670412083718779    -1.315604733581546
    H                0.820480042879655     2.084412083718779    -2.583604733581546
    H                0.870480042879655     0.363412083718779    -2.955604733581545
    H                2.814503042879655    -0.101167916281221    -1.333655733581545
    H                2.789478042879655     0.864712083718779     0.228364266418455
    H               -0.650797447120345     1.111592083718779    -2.447752733581545

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-154ILE-159GLN-1-dimer.npy', np.array(charges))