import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.328350980973644     1.042612184344033    -0.012483901464679
    C                2.760350980973644    -0.212387815655967     0.749516098535321
    H                3.157350980973644     1.743612184344034    -0.098483901464679
    H                1.986350980973644     0.764612184344033    -1.008483901464679
    H                1.505350980973644     1.527612184344034     0.507516098535321
    H                1.939350980973644    -0.921387815655967     0.799516098535321
    H                3.074830980973644     0.048422184344033     1.770826098535321
    H                3.586000980973644    -0.716467815655967     0.225876098535321
    C               -2.223649019026356     0.870612184344033    -0.003483901464679
    C               -1.238649019026356    -0.270387815655967    -0.199483901464679
    O               -1.425649019026356    -1.070387815655967    -1.143483901464679
    O               -0.285649019026356    -0.374387815655967     0.593516098535321
    H               -1.925649019026356     1.500612184344033     0.839516098535321
    H               -3.206649019026356     0.456612184344033     0.237516098535321
    H               -2.322709019026356     1.493902184344033    -0.904423901464679

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008ALA-035GLU-1-dimer.npy', np.array(charges))