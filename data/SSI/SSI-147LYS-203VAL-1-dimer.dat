import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.405487110902422     1.408731106296149    -0.196468624273060
    C                0.091487110902422     2.797731106296149    -0.681468624273060
    C                1.852487110902422     0.984731106296149    -0.452468624273060
    H                0.229487110902422     1.350731106296149     0.880531375726940
    H               -0.269512889097578     0.711731106296149    -0.693468624273060
    H               -0.008512889097578     2.778731106296149    -1.767468624273060
    H                0.918487110902422     3.462731106296149    -0.430468624273060
    H                2.529487110902422     1.670731106296149     0.070531375726940
    H                2.008487110902422    -0.022268893703851    -0.047468624273060
    H               -0.826682889097578     3.230451106296149    -0.257528624273060
    H                2.058717110902422     0.991361106296149    -1.532943624273059
    C               -0.458512889097578    -2.249268893703851     0.634531375726941
    C               -1.863512889097578    -2.843268893703851     0.682531375726940
    H               -0.059512889097578    -2.104268893703851     1.638531375726940
    H                0.201487110902422    -2.929268893703851     0.095531375726940
    H               -0.481512889097578    -1.300268893703851     0.110531375726940
    H               -1.831512889097578    -3.799268893703851     1.195531375726941
    H               -2.549542889097578    -2.178028893703851     1.227341375726940
    H               -2.246032889097578    -3.037768893703852    -0.330308624273060

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-147LYS-203VAL-1-dimer.npy', np.array(charges))