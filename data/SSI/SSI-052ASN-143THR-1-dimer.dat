import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.120642511685052     0.480766005506607     1.173090233761418
    C                0.825642511685052     1.120766005506607     0.750090233761418
    O                0.257642511685052     0.770766005506607    -0.281909766238582
    N                0.343642511685052     2.062766005506607     1.546090233761418
    H                2.695642511685052     1.183766005506607     1.770090233761418
    H                2.687642511685052     0.248766005506607     0.274090233761418
    H               -0.510357488314948     2.531766005506606     1.296090233761418
    H                0.848642511685052     2.294766005506606     2.392090233761418
    H                1.969032511685052    -0.448403994493393     1.742000233761418
    C               -1.986357488314948    -2.540233994493394    -1.061909766238582
    O               -1.233357488314948    -1.648233994493393    -1.878909766238582
    H               -1.854357488314948    -1.070233994493393    -2.339909766238581
    H               -2.620357488314948    -3.150233994493393    -1.707909766238582
    H               -1.311127488314948    -3.191783994493393    -0.487849766238582
    H               -2.623837488314948    -1.956183994493393    -0.381839766238582

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-052ASN-143THR-1-dimer.npy', np.array(charges))