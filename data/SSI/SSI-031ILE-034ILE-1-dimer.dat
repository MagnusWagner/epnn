import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.691624720931812    -0.679086563469029     2.030246368893476
    C               -1.626624720931812    -0.173086563469029     3.104246368893476
    H               -1.081624720931812    -1.596086563469029     1.587246368893476
    H               -0.577624720931812     0.076913436530971     1.257246368893476
    H                0.301375279068188    -0.873086563469029     2.433246368893476
    H               -1.183624720931812     0.720913436530971     3.546246368893476
    H               -1.778245720931812    -0.921036563469029     3.896446368893476
    H               -2.598171720931813     0.096823436530971     2.664656368893476
    C                0.585375279068188    -0.060086563469029    -1.377753631106523
    C                1.677375279068188    -0.455086563469029    -2.378753631106524
    C                0.091375279068188     1.358913436530971    -1.478753631106524
    H               -0.261624720931812    -0.739086563469029    -1.468753631106524
    H                0.991375279068188    -0.172086563469029    -0.373753631106524
    H                2.542375279068187     0.187913436530971    -2.205753631106524
    H               -0.528624720931812     1.469913436530971    -2.362753631106524
    H               -0.507624720931812     1.605913436530971    -0.603753631106524
    H                0.929375279068188     2.051913436530971    -1.539753631106524
    H                1.979055279068188    -1.499876563469029    -2.213223631106524
    H                1.346435279068188    -0.308636563469029    -3.417513631106524

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031ILE-034ILE-1-dimer.npy', np.array(charges))