import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.582711784296611     2.633970292082383     0.525296649387690
    C                0.165288215703389     1.483970292082383     1.173296649387690
    O                0.216288215703389     0.397970292082383     0.584296649387690
    O                0.689288215703389     1.657970292082383     2.283296649387690
    H               -0.049711784296611     3.571970292082384     0.690296649387690
    H               -1.556711784296611     2.711970292082383     1.012296649387690
    H               -0.742348984296611     2.482279292082384    -0.552433350612310
    C               -0.325711784296611    -2.259029707917616    -1.022703350612310
    C               -1.310711784296611    -1.764029707917617    -2.074703350612310
    C                1.139288215703389    -2.187029707917617    -1.462703350612310
    H               -0.506711784296611    -1.739029707917617    -0.090703350612310
    H               -0.544711784296611    -3.311029707917617    -0.825703350612310
    H               -1.176711784296611    -0.690029707917617    -2.181703350612310
    H                1.319288215703389    -2.847029707917617    -2.310703350612310
    H                1.385288215703389    -1.163029707917617    -1.745703350612310
    H               -2.333831884296611    -1.985692707917617    -1.736933350612310
    H               -1.090203584296611    -2.239025707917617    -3.042043350612310
    H                1.813708215703389    -2.509767707917617    -0.655863350612310

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008ASP-018ARG-1-dimer.npy', np.array(charges))