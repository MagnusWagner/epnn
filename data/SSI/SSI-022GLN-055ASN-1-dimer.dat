import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                3.176177120643278    -0.857347041893706     1.286993069058387
    C                1.910177120643278    -0.142347041893706     0.917993069058387
    O                1.145177120643278     0.384652958106294     1.744993069058387
    N                1.663177120643278    -0.116347041893706    -0.364006930941613
    H                3.949177120643278    -0.598347041893706     0.561993069058387
    H                2.997177120643277    -1.926347041893706     1.193993069058387
    H                0.892177120643278     0.498652958106294    -0.637006930941613
    H                2.085177120643278    -0.817347041893706    -0.959006930941613
    H                3.553237120643277    -0.603317041893706     2.288633069058387
    C               -3.296822879356722    -0.029347041893706    -1.403006930941613
    C               -1.926822879356722     0.240652958106294    -0.821006930941613
    O               -1.814822879356722     0.623652958106294     0.354993069058387
    N               -0.881822879356722    -0.031347041893706    -1.595006930941613
    H               -3.775822879356722    -0.768347041893706    -0.759006930941613
    H               -3.183822879356722    -0.472347041893706    -2.390006930941613
    H               -0.156822879356722    -0.544347041893706    -1.132006930941613
    H               -1.024822879356722    -0.200347041893706    -2.594006930941612
    H               -3.929592879356722     0.868862958106294    -1.456096930941613

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-022GLN-055ASN-1-dimer.npy', np.array(charges))