import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.333202435182620    -0.282638766364932     2.418824357750465
    C                1.385202435182620    -1.319638766364932     2.774824357750465
    H                0.735202435182620     0.432361233635068     1.707824357750464
    H               -0.536797564817380    -0.777638766364932     1.982824357750465
    H                0.021202435182620     0.266361233635068     3.300824357750464
    H                0.896202435182620    -2.069638766364932     3.394824357750465
    H                2.182875435182620    -0.827598766364932     3.350684357750465
    H                1.782803435182620    -1.821568766364932     1.880405357750464
    C                0.740202435182620     0.366361233635068    -0.997175642249536
    C                0.958202435182620     0.693361233635068    -2.464175642249535
    C               -0.745797564817380     0.224361233635068    -0.687175642249536
    O               -1.321797564817380     1.196361233635068    -0.148175642249536
    O               -1.339797564817380    -0.837638766364932    -1.008175642249536
    H                1.234202435182620    -0.582638766364933    -0.792175642249536
    H                1.204202435182620     1.131361233635068    -0.377175642249536
    H                0.723202435182620     1.748361233635068    -2.611175642249536
    H                0.241202435182620     0.117361233635068    -3.049175642249535
    H                1.953863435182620     0.478771233635068    -2.879636642249535

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-026VAL-041GLU-1-dimer.npy', np.array(charges))