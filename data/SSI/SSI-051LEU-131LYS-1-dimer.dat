import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.656840113623029     1.139932799512650     0.050520185597392
    C               -2.433840113623029     2.227932799512651     0.794520185597392
    H               -1.470840113623029     0.294932799512651     0.713520185597392
    H               -2.236840113623029     0.800932799512651    -0.807479814402608
    H               -0.709840113623029     1.543932799512651    -0.307479814402608
    H               -2.630840113623029     3.042932799512651     0.106520185597392
    H               -1.826530113623029     2.584708799512651     1.639439185597392
    H               -3.397870113623029     1.839594799512651     1.154863185597392
    C                0.984159886376971    -1.587067200487349    -0.348479814402608
    C                1.699159886376971    -1.223067200487350     0.948520185597392
    C                1.467159886376971    -0.672067200487349    -1.463479814402608
    H                1.190159886376971    -2.623067200487349    -0.616479814402608
    H               -0.089840113623029    -1.451067200487349    -0.246479814402608
    H                1.470159886376971    -0.184067200487349     1.200520185597392
    H                2.766159886376971    -1.290067200487349     0.763520185597392
    H                1.280159886376971     0.364932799512651    -1.182479814402607
    H                2.543159886376971    -0.811067200487349    -1.596479814402608
    H                1.446039886376971    -1.859472200487350     1.809285185597392
    H                0.954739886376971    -0.891780200487349    -2.411714814402607

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051LEU-131LYS-1-dimer.npy', np.array(charges))