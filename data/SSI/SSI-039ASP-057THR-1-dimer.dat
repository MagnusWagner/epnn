import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.630373894877539    -0.494860610817840    -0.489499268172171
    C               -1.173373894877539    -0.094860610817840    -0.304499268172171
    O               -0.350373894877539    -0.993860610817840    -0.036499268172171
    O               -0.843373894877539     1.107139389182160    -0.418499268172171
    H               -2.867373894877538    -1.366860610817840     0.113500731827829
    H               -2.747373894877539    -0.788860610817840    -1.533499268172172
    H               -3.324158894877538     0.330489389182160    -0.271658268172171
    C                2.542626105122461     0.811139389182160     0.935500731827829
    O                2.125626105122461    -0.347860610817840     0.228500731827829
    H                1.138626105122461    -0.368860610817840     0.204500731827828
    H                3.438626105122461     0.542139389182160     1.497500731827829
    H                2.813236105122461     1.618689389182160     0.239340731827829
    H                1.774793105122461     1.119859389182160     1.660156731827828

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-039ASP-057THR-1-dimer.npy', np.array(charges))