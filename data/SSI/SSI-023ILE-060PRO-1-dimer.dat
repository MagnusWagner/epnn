import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.753609492294248    -1.324882056033512    -0.828612933147312
    C               -2.494609492294248    -2.179882056033511     0.206387066852688
    H               -1.098609492294248    -0.623882056033511    -0.319612933147312
    H               -1.168609492294248    -1.937882056033511    -1.510612933147312
    H               -2.449609492294249    -0.772882056033512    -1.460612933147312
    H               -3.194609492294249    -2.816882056033511    -0.328612933147312
    H               -3.045219492294248    -1.545551056033512     0.916639066852688
    H               -1.771659492294248    -2.820355056033512     0.732823066852688
    C                1.184390507705752     0.806117943966489    -0.204612933147312
    C                0.756390507705752     1.030117943966488     1.225387066852688
    C                2.377390507705752     1.721117943966488    -0.404612933147312
    H                0.384390507705752     1.049117943966489    -0.905612933147312
    H                1.497390507705752    -0.230882056033511    -0.331612933147312
    H                0.120390507705752     1.914117943966489     1.300387066852688
    H                0.228390507705752     0.142117943966489     1.563387066852688
    H                2.032390507705752     2.671117943966488    -0.817612933147312
    H                3.098390507705752     1.270117943966489    -1.088612933147312
    H                1.717700507705752     1.212901943966488     1.727855066852688
    H                2.816360507705752     1.862647943966488     0.594023066852688

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-023ILE-060PRO-1-dimer.npy', np.array(charges))