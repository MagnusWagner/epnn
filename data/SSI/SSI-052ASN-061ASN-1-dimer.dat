import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.477788024386675     1.685737998807642    -3.312308285398718
    C               -0.251788024386674     1.338737998807642    -1.867308285398718
    O                0.093211975613326     0.207737998807642    -1.548308285398718
    N               -0.451788024386674     2.303737998807642    -0.984308285398718
    H               -1.234788024386674     2.460737998807642    -3.378308285398718
    H               -0.866788024386674     0.803737998807642    -3.820308285398718
    H               -0.337788024386674     2.117737998807642     0.006691714601282
    H               -0.655788024386674     3.242737998807642    -1.307308285398718
    H                0.441691975613326     2.022977998807642    -3.813108285398718
    C               -1.135788024386674    -1.117262001192358     2.098691714601282
    C                0.332211975613325    -1.447262001192358     1.947691714601282
    O                0.923211975613325    -2.092262001192358     2.810691714601282
    N                0.947211975613326    -0.972262001192358     0.873691714601282
    H                1.925211975613325    -1.182262001192358     0.754691714601282
    H                0.428211975613326    -0.513262001192358     0.129691714601282
    H               -1.559788024386674    -0.833262001192358     1.135691714601282
    H               -1.190788024386674    -0.242262001192358     2.745691714601282
    H               -1.709388024386674    -1.944682001192358     2.541791714601282

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-052ASN-061ASN-1-dimer.npy', np.array(charges))