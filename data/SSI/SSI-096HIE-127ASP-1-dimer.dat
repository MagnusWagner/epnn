import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.058189965439447    -1.267044632438245    -2.077027577580180
    C                1.006189965439447    -0.173044632438245    -1.678027577580181
    C                1.821189965439447     1.481955367561755    -0.475027577580180
    C                2.150189965439447     0.253955367561755    -2.273027577580180
    N                0.828189965439447     0.608955367561755    -0.556027577580180
    N                2.639189965439447     1.282955367561755    -1.501027577580180
    H                1.940189965439447     2.228955367561755     0.300972422419820
    H               -0.188810034560553    -1.846044632438245    -1.188027577580180
    H                0.567189965439447    -1.925044632438245    -2.782027577580180
    H                3.494189965439447     1.796955367561755    -1.688027577580181
    H                2.586189965439447    -0.141044632438245    -3.180027577580181
    H               -0.868660034560553    -0.903484632438245    -2.544763577580180
    C               -1.619810034560553     0.200955367561755     3.208972422419820
    C               -1.983810034560553    -0.539044632438245     1.927972422418819
    O               -1.377810034560553    -0.271044632438245     0.873972422419820
    O               -2.912810034560553    -1.378044632438245     1.981972422419820
    H               -1.590810034560553    -0.492044632438245     4.051972422419819
    H               -2.408810034560553     0.927955367561755     3.409972422419819
    H               -0.664650034560553     0.742445367561755     3.142182422419820

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-096HIE-127ASP-1-dimer.npy', np.array(charges))