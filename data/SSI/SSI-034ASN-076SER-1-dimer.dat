import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.804662650737509    -2.937726127559319    -0.421199758844935
    C                0.152337349262491    -1.771726127559319    -0.516199758844935
    O               -0.168662650737509    -0.739726127559319    -1.095199758844935
    N                1.293337349262491    -1.894726127559319     0.135800241155065
    H               -1.684662650737509    -2.585726127559319     0.102800241155065
    H               -0.358662650737509    -3.730726127559318     0.178800241155065
    H                1.879337349262491    -1.074726127559319     0.245800241155065
    H                1.522337349262491    -2.745726127559319     0.623800241155065
    H               -1.106412650737509    -3.329716127559319    -1.403689758844935
    C               -0.002662650737509     1.904273872440681     0.885800241155065
    C                0.693337349262491     2.380273872440681    -0.395199758844935
    O               -1.140662650737509     2.694273872440681     1.220800241155065
    H               -0.342662650737509     0.879273872440681     0.752800241155065
    H                0.709337349262491     1.914273872440681     1.710800241155065
    H                1.247337349262491     1.529273872440681    -0.795199758844935
    H               -0.856662650737509     3.624273872440681     1.345800241155065
    H                1.394277349262491     3.199173872440681    -0.175919758844935
    H               -0.050322650737509     2.685513872440681    -1.146059758844935

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-034ASN-076SER-1-dimer.npy', np.array(charges))