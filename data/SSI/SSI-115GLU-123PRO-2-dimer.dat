import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.213629117759821    -0.607129996150153     1.881539647803475
    C                0.071370882240179     0.213870003849847     1.815539647803475
    O                1.148370882240179    -0.369129996150153     2.063539647803475
    O                0.022370882240179     1.432870003849847     1.530539647803475
    H               -1.374629117759821    -0.892129996150153     2.922539647803475
    H               -1.095629117759821    -1.519129996150153     1.294539647803475
    H               -2.087249117759821    -0.058859996150153     1.499194647803475
    C               -0.322629117759821    -0.244129996150153    -1.871460352196525
    C                1.121370882240179    -0.588129996150153    -2.164460352196524
    C               -0.855629117759821     0.154870003849847    -3.241460352196525
    H               -0.364629117759821     0.602870003849847    -1.184460352196525
    H               -0.864629117759821    -1.098129996150153    -1.461460352196525
    H                1.727370882240179    -0.592129996150153    -1.258460352196525
    H                1.182370882240179    -1.548129996150153    -2.678460352196525
    H               -1.197629117759821    -0.729129996150153    -3.782460352196525
    H                1.412380882240179     0.225250003849847    -2.845431352196525
    H                0.024680882240179     0.578830003849847    -3.746751352196525
    H               -1.664909117759821     0.896410003849847    -3.169396352196525

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-115GLU-123PRO-2-dimer.npy', np.array(charges))