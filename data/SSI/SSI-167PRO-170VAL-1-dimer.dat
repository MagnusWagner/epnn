import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.568206917242478     0.890490129476071     1.404298783506059
    C                0.964206917242478     1.718490129476071     0.199298783506059
    C                1.615206917242477    -0.212509870523929     1.514298783506060
    H               -0.420793082757522     0.465490129476071     1.229298783506059
    H                0.544206917242478     1.501490129476071     2.307298783506060
    H                0.098206917242478     2.163490129476071    -0.283701216493941
    H                1.659206917242477     2.498490129476071     0.512298783506060
    H                2.342206917242478     0.036490129476071     2.289298783506060
    H                1.486410917242477     1.019780129476071    -0.470851216493941
    H                2.104431917242477    -0.216269870523929     0.529088783506059
    H                1.113577917242478    -1.164379870523929     1.743038783506060
    C               -1.865793082757523    -0.571509870523929    -1.150701216493941
    C               -1.248793082757523    -1.768509870523929    -1.867701216493941
    H               -1.928793082757523    -0.763509870523929    -0.079701216493941
    H               -1.257793082757522     0.316490129476071    -1.306701216493940
    H               -2.868793082757522    -0.381509870523929    -1.533701216493941
    H               -0.257793082757522    -1.956509870523929    -1.456701216493940
    H               -1.880353082757522    -2.658269870523929    -1.728231216493941
    H               -1.127267082757523    -1.533419870523929    -2.935391216493940

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-167PRO-170VAL-1-dimer.npy', np.array(charges))