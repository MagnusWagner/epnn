import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.855670092725790    -1.680742981915402     3.864951516549104
    C                0.367670092725790    -0.248742981915402     0.574951516549103
    C                0.976670092725790    -1.225742981915402     2.437951516549103
    C                2.032670092725790    -1.260742981915402     1.575951516549104
    N               -0.052329907274210    -0.599742981915402     1.782951516549103
    N                1.620670092725790    -0.654742981915402     0.411951516549103
    H               -0.227329907274210     0.261257018084598    -0.172048483450897
    H                2.176670092725790    -0.505742981915402    -0.423048483450897
    H                3.030670092725789    -1.606742981915402     1.784951516549104
    H               -0.103329907274210    -2.172742981915402     4.013951516549104
    H                0.876670092725790    -0.793742981915402     4.499951516549102
    H                1.663700092725790    -2.358032981915402     4.178591516549104
    C               -2.342329907274210     0.233257018084598    -2.518048483450896
    C               -1.319329907274210     1.390257018084598    -2.475048483450896
    O               -1.293329907274210     2.203257018084598    -1.542048483450897
    O               -0.487329907274210     1.454257018084598    -3.377048483450897
    H               -1.947329907274210    -0.565742981915402    -1.903048483450896
    H               -2.488329907274210    -0.132742981915402    -3.538048483450897
    H               -3.311139107274210     0.506417018084598    -2.074435483450896

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-062HIE-070GLU-1-dimer.npy', np.array(charges))