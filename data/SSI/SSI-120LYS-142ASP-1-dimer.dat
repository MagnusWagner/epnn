import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                3.160944172860845     0.178465350760400    -0.924801031486218
    N                2.496944172860845    -0.648534649239600     0.127198968513782
    H                1.522944172860845    -0.344534649239600     0.203198968513782
    H                2.466944172860845    -1.623534649239600    -0.157801031486218
    H                2.898944172860845    -0.570534649239600     1.051198968513782
    H                2.547944172860845     0.133465350760400    -1.832801031486218
    H                4.137944172860845    -0.216534649239600    -1.218801031486218
    H                3.234373172860845     1.238145350760400    -0.639003031486218
    C               -2.183055827139155     0.394465350760400     1.453198968513782
    C               -1.484055827139155     0.122465350760400     0.134198968513782
    O               -0.358055827139155     0.636465350760400    -0.061801031486218
    O               -2.059055827139155    -0.598534649239600    -0.713801031486218
    H               -3.071055827139155    -0.224534649239600     1.547198968513782
    H               -2.544055827139155     1.421465350760400     1.388198968513782
    H               -1.499233827139155     0.315615350760400     2.311202968513781

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-120LYS-142ASP-1-dimer.npy', np.array(charges))