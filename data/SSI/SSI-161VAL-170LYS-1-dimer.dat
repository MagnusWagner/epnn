import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -0.305055242182007    -2.019410091789766     0.332060776487027
    C               -0.918055242182007    -3.202410091789766    -0.406939223512973
    H                0.657944757817993    -1.754410091789766    -0.107939223512973
    H               -0.987055242182007    -1.173410091789766     0.269060776487027
    H               -0.162055242182007    -2.270410091789766     1.384060776487027
    H               -0.933055242182007    -2.960410091789766    -1.469939223512973
    H               -0.315941242182007    -4.107020091789766    -0.236244223512973
    H               -1.951593242182007    -3.378470091789766    -0.074068223512973
    C                0.147944757817993     1.347589908210234    -0.395939223512973
    C                1.583944757817993     1.847589908210234    -0.561939223512973
    N               -0.442055242182007     1.863589908210234     0.891060776487027
    H               -0.449055242182007     1.684589908210234    -1.250939223512973
    H                0.164944757817993     0.259589908210234    -0.404939223512973
    H                2.155944757817993     1.642589908210234     0.309060776487027
    H                1.559944757817993     2.930589908210234    -0.698939223512973
    H               -0.470055242182007     2.875589908210234     0.901060776487027
    H               -1.392055242182007     1.534589908210234     1.022060776487027
    H                0.103944757817993     1.564589908210234     1.691060776487027
    H                2.102267757817993     1.389489908210234    -1.417207223512973

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-161VAL-170LYS-1-dimer.npy', np.array(charges))