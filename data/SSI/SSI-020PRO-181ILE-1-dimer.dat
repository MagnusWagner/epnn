import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.108590599915842    -1.981870601786732    -0.079126922962389
    C                0.636590599915842    -1.295870601786733    -1.346126922962389
    C                1.013590599915842    -1.443870601786733     0.970873077037611
    H                0.230590599915842    -3.063870601786733    -0.162126922962389
    H               -0.934409400084158    -1.726870601786733     0.112873077037611
    H                0.443590599915842    -1.933870601786732    -2.209126922962389
    H                0.171590599915842    -0.327870601786733    -1.504126922962389
    H                1.016590599915842    -2.081870601786733     1.855873077037611
    H                0.702590599915842    -0.437870601786733     1.252873077037611
    H                1.715920599915842    -1.186892601786733    -1.163996922962389
    H                2.001520599915843    -1.400010601786733     0.489133077037611
    C               -0.847409400084158     1.566129398213267    -0.024126922962389
    C               -0.924409400084158     3.017129398213267     0.476873077037611
    H               -1.443409400084158     1.436129398213267    -0.927126922962389
    H                0.197590599915842     1.360129398213267    -0.252126922962389
    H               -1.194409400084157     0.882129398213267     0.749873077037611
    H               -0.696409400084158     3.693129398213267    -0.348126922962389
    H               -0.150409400084158     3.156129398213267     1.225873077037611
    H               -1.905589400084157     3.278825398213267     0.899723077037611

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-020PRO-181ILE-1-dimer.npy', np.array(charges))