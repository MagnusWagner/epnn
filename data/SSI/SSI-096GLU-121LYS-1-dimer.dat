import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.417433112088975     0.005596843336568    -2.684413872470905
    C               -0.438566887911025     0.516596843336568    -1.565413872470905
    O               -0.899566887911025    -0.310403156663432    -0.745413872470905
    O               -0.652566887911025     1.763596843336568    -1.547413872470905
    H                1.207433112088975     0.719596843336568    -2.907413872470905
    H               -0.196566887911025    -0.167403156663432    -3.565413872470905
    H                0.838583612088975    -0.942203156663432    -2.317873872470905
    C                0.400433112088975    -1.102403156663432     1.851586127529095
    C                1.692433112088975    -0.368403156663432     1.741586127529095
    C               -0.532566887911025    -0.547403156663432     2.952586127529095
    H               -0.053566887911025    -1.064403156663432     0.938586127529095
    H                0.650433112088975    -2.084403156663432     2.050586127529095
    H                1.494433112088975     0.689596843336568     1.586586127529095
    H                2.267433112088975    -0.764403156663432     0.903586127529095
    H                0.081433112088975    -0.537403156663432     3.849586127529095
    H               -0.731566887911025     0.479596843336568     2.641586127529095
    H                2.231669112088975    -0.528503156663432     2.686886127529095
    H               -1.482808887911025    -1.050503156663432     3.184886127529095

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-096GLU-121LYS-1-dimer.npy', np.array(charges))