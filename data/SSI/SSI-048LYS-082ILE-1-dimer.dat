import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.288746661881384     0.549239858982519    -1.146065550765760
    C                1.796746661881384     0.612239858982519    -1.364065550765760
    C               -0.394253338118616     1.877239858982520    -1.424065550765760
    H               -0.148253338118616    -0.227760141017480    -1.773065550765760
    H                0.121746661881384     0.284239858982520    -0.104065550765760
    H                2.210746661881384    -0.369760141017480    -1.124065550765760
    H                2.212746661881383     1.325239858982520    -0.649065550765760
    H                0.141746661881384     2.676239858982519    -0.906065550765760
    H               -0.387253338118616     2.077239858982519    -2.497065550765760
    H                2.119019661881383     0.890729858982519    -2.378256550765760
    H               -1.431827338118616     1.845469858982520    -1.060156550765760
    C               -0.639253338118616    -1.991760141017480     1.369934449234240
    C               -1.039253338118616    -1.011760141017480     2.480934449234240
    H               -0.848253338118616    -3.020760141017480     1.664934449234240
    H               -1.194253338118616    -1.759760141017480     0.464934449234240
    H                0.424746661881384    -1.894760141017480     1.146934449234240
    H               -1.008253338118616    -0.004760141017480     2.060934449234240
    H               -0.304219938118616    -1.045950141017481     3.298587849234240
    H               -2.060052338118616    -1.194760141017480     2.847650049234240

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-048LYS-082ILE-1-dimer.npy', np.array(charges))