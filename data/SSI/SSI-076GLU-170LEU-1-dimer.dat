import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.467043024896414    -0.678767535292447    -1.099129787497046
    C                0.282043024896414    -1.265767535292447    -2.508129787497046
    C               -0.794956975103586     0.006232464707553    -0.710129787497046
    O               -0.913956975103586     1.192232464707553    -1.099129787497046
    O               -1.609956975103586    -0.652767535292447     0.001870212502954
    H                0.686043024896414    -1.471767535292447    -0.382129787497046
    H                1.310043024896414     0.013232464707553    -1.103129787497046
    H                0.093043024896414    -0.452767535292447    -3.210129787497046
    H               -0.579956975103586    -1.933767535292447    -2.512129787497046
    H                1.178273024896414    -1.816515535292447    -2.829759787497046
    C                1.703043024896414     1.030232464707553     2.106870212502954
    C                0.840043024896414     0.323232464707553     3.177870212502954
    H                1.938043024896414     2.045232464707554     2.427870212502954
    H                2.639043024896414     0.482232464707553     1.977870212502954
    H                1.168043024896414     1.043232464707553     1.157870212502954
    H                1.318043024896414     0.461232464707553     4.140870212502954
    H               -0.155116975103586     0.790744464707553     3.210800212502954
    H                0.726933024896414    -0.759226535292447     3.018220212502954

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-076GLU-170LEU-1-dimer.npy', np.array(charges))