import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.630270101880533    -2.660008326393128     0.270642391514587
    N               -0.838270101880533    -1.957008326393127     1.349642391514587
    H               -1.456270101880533    -1.498008326393127     2.010642391514587
    H               -0.269270101880533    -2.609008326393128     1.878642391514587
    H               -0.237270101880533    -1.233008326393127     0.947642391514587
    H               -2.347270101880533    -3.359008326393127     0.716642391514587
    H               -0.960270101880533    -3.226008326393127    -0.386357608485413
    H               -2.172250101880533    -1.910668326393127    -0.324967608485413
    C                0.489729898119467     1.956991673606873    -1.732357608485413
    C                0.671729898119467     1.177991673606873    -0.395357608485413
    O                0.799729898119467    -0.086008326393127    -0.324357608485413
    O                0.669729898119467     1.907991673606873     0.617642391514587
    H                1.378729898119467     2.569991673606872    -1.893357608485412
    H               -0.379270101880533     2.615991673606872    -1.664357608485413
    H                0.351009898119467     1.269441673606873    -2.579727608485413

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-135LYS-157GLU-1-dimer.npy', np.array(charges))