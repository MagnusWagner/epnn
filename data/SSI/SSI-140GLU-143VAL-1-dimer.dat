import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.005577138792167    -1.456073025982789    -0.512627945214400
    C               -0.338422861207833    -1.191073025982789     0.139372054785600
    O               -1.326422861207833    -1.007073025982788    -0.598627945214400
    O               -0.405422861207833    -1.143073025982789     1.387372054785600
    H                1.693577138792167    -1.767073025982788     0.271372054785600
    H                1.396577138792167    -0.527073025982789    -0.932627945214400
    H                0.969007138792167    -2.210633025982788    -1.312192945214400
    C                0.054577138792167     2.329926974017212    -0.800627945214400
    C                0.987577138792167     2.374926974017212     0.392372054785600
    H                0.581577138792167     1.941926974017211    -1.669627945214400
    H               -0.791422861207833     1.678926974017212    -0.586627945214400
    H               -0.318422861207833     3.328926974017212    -1.024627945214400
    H                1.359577138792167     1.371926974017212     0.603372054785600
    H                1.819737138792167     3.061486974017211     0.177553054785600
    H                0.422997138792167     2.745186974017212     1.260793054785600

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-140GLU-143VAL-1-dimer.npy', np.array(charges))