import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.951144021015389    -1.592994819977111    -1.289635397056469
    C                1.574144021015389    -2.930994819977111    -0.925635397056469
    H               -0.117855978984611    -1.708994819977111    -1.480635397056469
    H                1.097144021015389    -0.891994819977111    -0.467635397056469
    H                1.431144021015389    -1.187994819977111    -2.178635397056469
    H                2.626144021015389    -2.769994819977111    -0.679635397056469
    H                1.514504021015389    -3.617240819977111    -1.783235397056469
    H                1.063844021015389    -3.356962819977110    -0.049235397056469
    C               -0.682855978984611     0.937005180022889     0.818364602943531
    C               -1.670855978984611     1.691005180022889     1.659364602943531
    C               -0.214855978984611     1.948005180022889    -0.203635397056469
    H               -1.189855978984611     0.112005180022889     0.315364602943531
    H                0.145144021015389     0.559005180022889     1.419364602943531
    H               -2.405855978984611     1.005005180022889     2.078364602943531
    H               -1.153855978984611     2.241005180022889     2.447364602943531
    H                0.178144021015389     1.463005180022889    -1.098635397056469
    H                0.555144021015389     2.579005180022889     0.243364602943531
    H               -2.122685978984611     2.396427180022889     0.946464602943531
    H               -1.105775978984611     2.558261180022889    -0.413035397056469

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-112ALA-128PRO-1-dimer.npy', np.array(charges))