import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -1.144346528447532     1.577267405327102    -0.646906148834296
    C                0.004653471552468    -0.481732594672898    -1.387906148834296
    N                0.372653471552468    -0.777732594672898    -0.161906148834296
    N               -0.711346528447532     0.605267405327102    -1.643906148834296
    N                0.370653471552468    -1.266732594672899    -2.374906148834296
    H                0.151653471552468    -0.148732594672898     0.605093851165704
    H                0.892653471552468    -1.618732594672898     0.024093851165704
    H               -0.913346528447532     0.800267405327101    -2.614906148834296
    H                0.108653471552468    -1.033732594672898    -3.320906148834296
    H                0.876653471552468    -2.119732594672898    -2.194906148834296
    H               -1.342346528447532     1.082267405327101     0.305093851165704
    H               -2.084346528447532     2.034267405327101    -0.960906148834296
    H               -0.379335528447532     2.353797405327102    -0.499376148834296
    C                0.676653471552468    -0.299732594672898     3.391093851165704
    O                0.358653471552468     0.599267405327102     2.327093851165704
    H               -0.246346528447532     1.290267405327101     2.694093851165704
    H                1.412653471552468    -1.014732594672898     3.022093851165704
    H                1.117081471552468     0.243867405327102     4.239933851165704
    H               -0.216454228447532    -0.858642594672898     3.707283851165704

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035ARG-041THR-1-dimer.npy', np.array(charges))