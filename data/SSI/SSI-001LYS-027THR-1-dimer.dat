import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.198813703416583    -1.209496806214315     1.282894700300194
    C                1.471813703416583    -0.609496806214315     0.687894700300194
    C               -0.134186296583417    -0.565496806214315     2.623894700300195
    H               -0.648186296583417    -1.076496806214315     0.606894700300194
    H                0.336813703416583    -2.280496806214316     1.444894700300194
    H                2.326813703416583    -0.840496806214315     1.323894700300194
    H                1.387813703416583     0.475503193785685     0.640894700300194
    H               -1.035186296583417    -1.043496806214315     3.023894700300194
    H                0.682813703416583    -0.765496806214315     3.325894700300195
    H                1.637453403416583    -0.956616806214315    -0.342675299699806
    H               -0.295098296583417     0.518813193785685     2.532364700300195
    C               -0.933186296583417     0.583503193785685    -1.779105299699806
    C               -0.581186296583417     1.715503193785685    -2.735105299699806
    H               -0.802186296583417    -0.383496806214315    -2.260105299699806
    H               -0.380186296583417     0.713503193785685    -0.855105299699806
    H               -1.989186296583417     0.667503193785685    -1.514105299699805
    H               -1.117186296583417     2.613503193785685    -2.428105299699805
    H               -0.865707296583417     1.453916193785685    -3.764965299699806
    H                0.498449103416583     1.921699193785685    -2.691855299699805

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-001LYS-027THR-1-dimer.npy', np.array(charges))