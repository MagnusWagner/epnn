import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.350936160135782    -2.194060543915886     0.377219846933391
    C               -0.706063839864218    -1.160060543915886     0.041219846933391
    O               -0.533063839864218     0.027939456084114     0.290219846933391
    N               -1.825063839864218    -1.611060543915886    -0.492780153066609
    H               -0.126063839864218    -3.170060543915886     0.445219846933391
    H                0.754936160135782    -1.956060543915886     1.359219846933391
    H               -2.560063839864219    -0.950060543915886    -0.685780153066609
    H               -1.957063839864218    -2.602060543915886    -0.635780153066609
    H                1.169299160135782    -2.232660543915886    -0.356800153066609
    C                2.003936160135782     2.299939456084114    -0.000780153066609
    O                0.601936160135782     2.336939456084114    -0.189780153066609
    H                0.235936160135782     1.442939456084114    -0.015780153066609
    H                2.239936160135782     1.578939456084114     0.779219846933391
    H                2.350936160135781     3.286939456084114     0.314219846933391
    H                2.525090160135782     2.006339456084114    -0.923930153066609

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-139ASN-154SER-1-dimer.npy', np.array(charges))