import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.908993541332368    -0.458069096774033    -1.307825357001825
    C               -3.420993541332368    -0.257069096774033    -1.051825357001825
    H               -1.756993541332368    -0.968069096774033    -2.257825357001825
    H               -1.419993541332368     0.512930903225967    -1.345825357001825
    H               -1.453993541332368    -1.040069096774033    -0.506825357001825
    H               -3.825993541332368     0.352930903225967    -1.858825357001824
    H               -3.953223541332368    -1.219209096774033    -1.019845357001824
    H               -3.589703541332368     0.318390903225967    -0.129665357001825
    C                1.267006458667632     0.175930903225967     0.768174642998175
    C                2.257006458667632    -1.006069096774033     0.751174642998175
    C                1.899006458667632     1.550930903225967     0.889174642998175
    H                0.685006458667632     0.149930903225967    -0.152825357001825
    H                0.580006458667632     0.035930903225967     1.599174642998175
    H                2.945006458667632    -0.897069096774033    -0.085825357001825
    H                2.497006458667632     1.576930903225967     1.798174642998176
    H                1.672886458667632    -1.931999096774033     0.644074642998175
    H                2.819266458667632    -1.061499096774033     1.694994642998175
    H                2.566806458667632     1.776920903225967     0.044794642998175
    H                1.126196458667632     2.326620903225967     0.994324642998175

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019VAL-081LEU-1-dimer.npy', np.array(charges))