import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.905251193257537    -2.931067793934251     0.094674182384494
    O               -0.094748806742463    -2.271067793934252     0.868674182384494
    H               -0.039748806742463    -1.310067793934252     0.679674182384494
    H                1.455251193257538    -3.619067793934251     0.738674182384494
    H                0.444611193257537    -3.492567793934251    -0.731478817615506
    H                1.609831193257538    -2.179467793934251    -0.290891817615506
    C               -0.402748806742463     1.098932206065748    -1.656325817615506
    C               -0.213748806742463     1.415932206065749    -0.180325817615506
    O               -0.195748806742463     0.451932206065749     0.623674182384494
    O               -0.063748806742463     2.610932206065748     0.173674182384494
    H               -1.079748806742463     0.251932206065749    -1.766325817615507
    H                0.561251193257537     0.793932206065749    -2.071325817615506
    H               -0.767438806742463     1.944582206065748    -2.257885817615506

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011THR-166GLU-2-dimer.npy', np.array(charges))