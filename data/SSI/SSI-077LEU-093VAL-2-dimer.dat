import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.279238306563289    -0.995829931948352     1.182125039346995
    C                1.140238306563289    -0.299829931948352     2.251125039346995
    C                0.992238306563289    -2.026829931948352     0.297125039346995
    H               -0.557761693436711    -1.487829931948352     1.678125039346995
    H               -0.133761693436711    -0.223829931948352     0.547125039346995
    H                1.567238306563289    -1.034829931948352     2.935125039346995
    H                1.873238306563289    -1.564829931948352    -0.148874960653005
    H                0.498712306563289     0.406680068051648     2.798198039346995
    H                1.941901306563289     0.286860068051648     1.778755039346995
    H                1.320221306563289    -2.881029931948352     0.907677739346995
    H                0.345809306563289    -2.365199931948352    -0.526062560653005
    C               -0.990761693436711     0.902170068051648    -1.680874960653005
    C               -1.397761693436711     2.344170068051648    -1.956874960653005
    H               -1.612761693436711     0.484170068051648    -0.891874960653005
    H               -1.141761693436711     0.313170068051648    -2.585874960653005
    H                0.065238306563289     0.851170068051648    -1.418874960653005
    H               -0.820761693436711     2.688170068051648    -2.813874960653005
    H               -1.165771693436711     3.013100068051648    -1.115021960653005
    H               -2.455916593436711     2.420930068051648    -2.247418960653006

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-077LEU-093VAL-2-dimer.npy', np.array(charges))