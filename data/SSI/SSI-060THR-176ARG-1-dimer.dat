import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.528633880905868     3.246607420672049    -0.534581073837961
    O                1.375633880905868     2.105607420672049    -0.415581073837961
    H                2.239633880905868     2.426607420672049    -0.121581073837961
    H                0.626633880905868     3.853607420672049     0.365418926162039
    H                0.820173880905868     3.842487420672049    -1.412041073837961
    H               -0.512676119094132     2.899987420672049    -0.608961073837961
    C               -0.101366119094132    -0.918392579327951    -1.741581073837961
    C               -0.512366119094132    -1.224392579327951     0.675418926162039
    N                0.372633880905868    -0.290392579327951     0.964418926162039
    N               -0.757366119094132    -1.538392579327951    -0.585581073837961
    N               -1.152366119094132    -1.842392579327951     1.647418926162039
    H                0.784633880905868     0.268607420672049     0.226418926162039
    H                0.573633880905868    -0.061392579327951     1.923418926162039
    H               -1.476366119094132    -2.243392579327951    -0.761581073837961
    H               -1.756366119094132    -2.630392579327951     1.398418926162039
    H               -0.968366119094132    -1.631392579327951     2.612418926162039
    H                0.977633880905868    -1.075392579327951    -1.682581073837961
    H               -0.300366119094132     0.152607420672049    -1.755581073837961
    H               -0.470276119094132    -1.353852579327951    -2.681941073837961

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-060THR-176ARG-1-dimer.npy', np.array(charges))