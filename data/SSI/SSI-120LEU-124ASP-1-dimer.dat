import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.161140247234146     0.055947768754385     0.532059508860947
    C                2.917140247234145     1.018947768754385     1.434059508860947
    H                1.644140247234145     0.599947768754385    -0.254940491139053
    H                2.862140247234146    -0.637052231245615     0.082059508860947
    H                1.434140247234145    -0.512052231245615     1.113059508860947
    H                3.632140247234146     1.571947768754385     0.827059508860947
    H                2.216150247234145     1.721387768754385     1.908600508860947
    H                3.481930247234146     0.470777768754385     2.202514508860947
    C               -1.920859752765855     0.328947768754385     0.644059508860947
    C               -1.253859752765855    -0.312052231245615    -0.561940491139053
    O               -1.235859752765855    -1.558052231245615    -0.646940491139053
    O               -0.759859752765855     0.439947768754385    -1.434940491139053
    H               -2.596859752765855     1.105947768754385     0.284059508860947
    H               -1.165859752765855     0.820947768754385     1.256059508860947
    H               -2.499779752765855    -0.396492231245615     1.234470508860947

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-120LEU-124ASP-1-dimer.npy', np.array(charges))