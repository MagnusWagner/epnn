import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.428817691339656    -1.549258533642774     2.537021456521117
    C                1.262817691339656    -0.864258533642774     1.826021456521117
    O                0.357817691339657    -0.340258533642774     2.471021456521116
    N                1.257817691339656    -0.865258533642774     0.501021456521116
    H                0.436817691339657    -0.464258533642774     0.056021456521116
    H                1.995817691339656    -1.261258533642774    -0.062978543478884
    H                2.197817691339657    -2.605258533642774     2.639021456521116
    H                2.507817691339657    -1.135258533642774     3.543021456521116
    H                3.391167691339656    -1.413308533642774     2.021861456521116
    C               -0.114182308660343     0.935741466357226    -2.587978543478883
    C               -1.401182308660344     0.909741466357226    -1.774978543478883
    O               -1.458182308660344     0.121741466357226    -0.800978543478884
    O               -2.337182308660344     1.661741466357226    -2.100978543478884
    H               -0.012182308660343    -0.027258533642774    -3.095978543478883
    H                0.719817691339657     1.041741466357226    -1.892978543478884
    H               -0.069752308660343     1.745531466357225    -3.331118543478883

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035ASN-172GLU-1-dimer.npy', np.array(charges))