import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.241273375459279    -2.065056489678716    -1.122610719304346
    C                0.695273375459279    -1.372056489678716    -2.398610719304346
    H                2.228273375459279    -2.481056489678716    -1.316610719304346
    H                1.323273375459279    -1.342056489678716    -0.311610719304346
    H                0.575273375459279    -2.863056489678716    -0.818610719304346
    H               -0.283726624540721    -0.950056489678716    -2.189610719304346
    H                0.627283375459279    -2.119972489678716    -3.202350719304347
    H                1.380353375459279    -0.561120489678716    -2.686800719304347
    C               -0.248726624540721     0.850943510321284     0.903389280695654
    C               -1.271726624540721     0.310943510321284     1.911389280695654
    C               -0.429726624540721     2.327943510321284     0.763389280695654
    H                0.770273375459279     0.635943510321284     1.220389280695654
    H               -0.424726624540721     0.354943510321284    -0.049610719304346
    H               -2.231726624540721     0.214943510321284     1.420389280695654
    H               -1.489726624540721     2.570943510321284     0.857389280695654
    H                0.105273375459279     2.837943510321284     1.565389280695654
    H               -1.370316624540721     0.993491510321284     2.768365280695654
    H               -0.933946624540721    -0.674542489678716     2.264552280695654
    H               -0.113506624540721     2.755953510321284    -0.199320719304346

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094LEU-182MET-1-dimer.npy', np.array(charges))