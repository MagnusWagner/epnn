import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.825884912880018    -0.695216183755306    -0.617906132687282
    C                1.708884912880018    -1.507216183755306    -1.241906132687282
    O                1.953884912880018    -2.429216183755306    -2.017906132687282
    N                0.471884912880018    -1.170216183755306    -0.914906132687282
    H               -0.285115087119982    -1.690216183755306    -1.330906132687282
    H                0.281884912880018    -0.385216183755306    -0.294906132687282
    H                2.412884912880018     0.051783816244694     0.062093867312718
    H                3.315884912880018    -0.162216183755306    -1.433906132687282
    H                3.554484912880018    -1.321786183755306    -0.082596132687282
    C               -2.675115087119982     2.005783816244694     0.236093867312718
    C               -1.651115087119982     1.418783816244694     1.202093867312718
    O               -0.622115087119982     0.901783816244694     0.769093867312718
    N               -1.918115087119982     1.455783816244694     2.499093867312717
    H               -3.200115087119982     1.171783816244694    -0.226906132687282
    H               -2.152115087119982     2.529783816244694    -0.561906132687282
    H               -1.246115087119982     1.025783816244694     3.122093867312718
    H               -2.778115087119982     1.840783816244694     2.878093867312718
    H               -3.428335087119982     2.661443816244694     0.697353867312718

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015ASN-048GLN-1-dimer.npy', np.array(charges))