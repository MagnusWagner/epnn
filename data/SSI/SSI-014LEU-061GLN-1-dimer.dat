import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.963658890493569     1.809534975699636     0.542471722069014
    C               -1.259658890493569     2.802534975699636     1.657471722069014
    H               -1.216658890493569     0.803534975699636     0.867471722069014
    H               -1.554658890493569     2.049534975699636    -0.338528277930986
    H                0.092341109506431     1.860534975699636     0.279471722069014
    H               -2.286658890493569     2.670534975699636     1.996471722069014
    H               -0.564558890493569     2.646549975699636     2.495622722069013
    H               -1.148598890493569     3.830919975699635     1.283185722069014
    C                0.377341109506431    -1.214465024300364    -0.937528277930986
    C                1.664341109506431    -1.506465024300364    -1.710528277930986
    C                0.225341109506431    -1.964465024300364     0.388471722069014
    H                0.307341109506431    -0.144465024300364    -0.765528277930986
    H               -0.465658890493569    -1.495465024300364    -1.570528277930986
    H                1.662341109506431    -2.580465024300364    -1.909528277930986
    H               -0.794658890493569    -1.835465024300364     0.748471722069014
    H                0.382341109506431    -3.028465024300364     0.210471722069014
    H                2.540221109506431    -1.295805024300364    -1.079292277930986
    H                1.613961109506431    -0.991865024300364    -2.681429577930986
    H                0.912511109506431    -1.616545024300364     1.173807722069014

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-014LEU-061GLN-1-dimer.npy', np.array(charges))