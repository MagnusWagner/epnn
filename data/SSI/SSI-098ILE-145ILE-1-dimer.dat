import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.831493504407686     1.709040961600205     1.133804407001621
    C                1.046493504407686     2.468040961600204    -0.162195592998379
    H                1.653493504407686     1.029040961600205     1.348804407001621
    H                0.816493504407686     2.438040961600204     1.938804407001621
    H               -0.113506495592314     1.168040961600204     1.099804407001622
    H                1.986493504407686     3.016040961600204    -0.079195592998379
    H                0.244493504407686     3.200040961600204    -0.259195592998379
    H                1.078803504407686     1.832690961600205    -1.059575592998379
    C               -0.806506495592314    -1.627959038399795     0.094804407001621
    C               -1.067506495592314    -2.563959038399796    -1.071195592998379
    H                0.217493504407686    -1.268959038399795     0.087804407001621
    H               -1.474506495592314    -0.769959038399796     0.034804407001621
    H               -0.993506495592314    -2.145959038399796     1.035804407001621
    H               -0.901506495592314    -2.023959038399795    -2.004195592998379
    H               -2.122506495592314    -2.831959038399795    -1.039195592998379
    H               -0.439056495592314    -3.466449038399796    -1.047525592998379

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-098ILE-145ILE-1-dimer.npy', np.array(charges))