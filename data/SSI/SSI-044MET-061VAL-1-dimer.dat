import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.034349955220400     0.423538762328997    -1.443647593690651
    C               -0.406650044779600    -0.339461237671003    -2.671647593690651
    C                1.029349955220400     1.484538762328997    -1.890647593690651
    H               -0.814650044779600     0.880538762328997    -0.933647593690651
    H                0.512349955220400    -0.275461237671003    -0.758647593690651
    H                0.488349955220400    -0.737461237671003    -3.154647593690651
    H                1.779349955220400     1.058538762328997    -2.559647593690651
    H                0.501349955220400     2.282538762328997    -2.413647593690651
    H               -0.961890044779600     0.346248762328997    -3.328535593690651
    H               -1.079400044779600    -1.179121237671003    -2.442781593690651
    H                1.519279955220400     1.909918762328997    -1.002377593690651
    C               -0.160650044779600    -0.540461237671003     2.244352406309349
    C               -0.496650044779600    -1.005461237671003     3.669352406309349
    H               -0.823650044779600    -1.021461237671003     1.522352406309349
    H               -0.293650044779600     0.540538762328997     2.173352406309349
    H                0.875349955220400    -0.760461237671003     1.988352406309349
    H                0.206349955220400    -0.558461237671003     4.370352406309348
    H               -0.401190044779600    -2.100807237671003     3.702592406309349
    H               -1.504970044779600    -0.655299237671003     3.935192406309349

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044MET-061VAL-1-dimer.npy', np.array(charges))