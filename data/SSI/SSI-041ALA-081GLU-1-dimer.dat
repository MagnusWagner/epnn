import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.205461714135686    -0.964720508787307    -2.952023329590383
    C                0.761461714135686    -2.213720508787307    -3.620023329590383
    H                0.902461714135686    -0.608720508787307    -2.195023329590383
    H                0.056461714135686    -0.198720508787307    -3.703023329590383
    H               -0.746538285864314    -1.187720508787307    -2.486023329590383
    H                0.134461714135686    -2.460720508787307    -4.472023329590384
    H                0.781794714135686    -3.061697808787307    -2.919653329590383
    H                1.792578714135686    -2.041505908787307    -3.962283329590383
    C                0.435461714135686    -0.030720508787307     0.795976670409617
    C                1.385461714135686    -0.439720508787307     1.921976670409617
    C               -0.637538285864314     0.977279491212693     1.222976670409617
    O               -1.102538285864314     0.939279491212693     2.383976670409617
    O               -1.061538285864314     1.800279491212693     0.388976670409617
    H                1.033461714135686     0.399279491212693    -0.008023329590383
    H               -0.048538285864314    -0.928720508787307     0.408976670409617
    H                0.810461714135686    -0.879720508787307     2.736976670409617
    H                1.864461714135686     0.457279491212693     2.302976670409617
    H                2.161042714135686    -1.157507508787307     1.616596670409617

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-041ALA-081GLU-1-dimer.npy', np.array(charges))