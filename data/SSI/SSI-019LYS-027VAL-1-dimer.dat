import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.968195214194121     0.313708905260528     0.827042200741318
    C                0.949195214194121    -0.537291094739472     2.109042200741318
    C                1.819195214194121     1.573708905260528     1.073042200741318
    H                1.392195214194121    -0.268291094739472     0.008042200741318
    H               -0.046804785805879     0.613708905260528     0.570042200741318
    H                0.623195214194121     0.082708905260528     2.946042200741319
    H                1.980195214194121    -0.836291094739472     2.309042200741318
    H                1.361195214194121     2.143708905260528     1.885042200741318
    H                2.819195214194121     1.267708905260528     1.391042200741318
    H                0.331305214194121    -1.446971094739472     2.082582200741318
    H                1.915605214194121     2.224820905260528     0.191702200741318
    C               -1.814804785805879    -0.983291094739472    -1.284957799258682
    C               -1.868804785805879    -0.347291094739472    -2.681957799258682
    H               -2.615804785805878    -1.696291094739472    -1.141957799258682
    H               -0.857804785805879    -1.486291094739472    -1.144957799258682
    H               -1.926804785805879    -0.207291094739472    -0.527957799258682
    H               -1.545804785805879    -1.094291094739472    -3.403957799258682
    H               -2.892214785805879    -0.028721094739472    -2.929257799258682
    H               -1.168424785805879     0.499068905260528    -2.738047799258682

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019LYS-027VAL-1-dimer.npy', np.array(charges))