import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.726453512965960     0.600861788598207     0.951337733046755
    C                1.536453512965960     1.756861788598207     1.900337733046755
    C                3.096453512965960     0.073861788598207     1.347337733046755
    H                1.708453512965960     0.941861788598207    -0.084662266953245
    H                0.989453512965960    -0.150138211401793     1.146337733046755
    H                0.745453512965960     2.427861788598207     1.566337733046755
    H                1.333453512965960     1.389861788598207     2.909337733046755
    H                2.984453512965960    -0.578138211401793     2.212337733046755
    H                2.523363512965960     2.241253788598207     1.863357733046755
    H                3.637003512965960     0.984065788598207     1.646217733046755
    H                3.563853512965960    -0.503003211401793     0.535697733046755
    C               -2.951546487034040    -0.758138211401793    -0.617662266953245
    C               -1.515546487034040    -0.598138211401793    -1.082662266953245
    O               -0.605546487034040    -0.974138211401793    -0.313662266953245
    O               -1.294546487034040    -0.105138211401793    -2.211662266953245
    H               -3.115546487034040    -0.167138211401793     0.287337733046755
    H               -3.070546487034040    -1.811138211401793    -0.367662266953245
    H               -3.674446487034040    -0.449968211401793    -1.387362266953245

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-099PRO-166GLU-1-dimer.npy', np.array(charges))