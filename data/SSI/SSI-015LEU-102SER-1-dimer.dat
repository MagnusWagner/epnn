import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.407735210859138     1.623780791588625    -0.723248540584878
    C                1.089264789140862     1.634780791588625    -1.052248540584878
    H               -0.929735210859138     0.884780791588625    -1.327248540584878
    H               -0.546735210859138     1.383780791588626     0.329751459415122
    H               -0.844735210859138     2.607780791588625    -0.894248540584878
    H                1.493264789140862     0.625780791588625    -0.973248540584878
    H                1.202184789140862     2.023493791588625    -2.075068540584878
    H                1.640874789140862     2.270204791588625    -0.343758540584878
    C               -0.582735210859138    -1.964219208411375     1.340751459415122
    O               -0.065735210859138    -1.076219208411375     0.387751459415122
    H                0.024264789140862    -1.550219208411375    -0.451248540584878
    H                0.102264789140862    -2.802219208411375     1.483751459415122
    H               -1.541735210859138    -2.345219208411375     0.983751459415122
    H               -0.732975210859138    -1.429297208411374     2.290111459415122

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015LEU-102SER-1-dimer.npy', np.array(charges))