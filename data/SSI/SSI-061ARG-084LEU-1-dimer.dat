import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.452650200927229     1.063105837224400     0.279702746427649
    C                1.620650200927229     1.120105837224400     1.273702746427649
    C               -0.055349799072771     2.459105837224400    -0.086297253572351
    H                0.779650200927229     0.557105837224400    -0.630297253572351
    H               -0.370349799072771     0.494105837224400     0.714702746427649
    H                1.335650200927230     1.784105837224401     2.095702746427649
    H               -0.428349799072771     2.936105837224400     0.821702746427649
    H                0.776650200927229     3.052105837224400    -0.456297253572351
    H                2.517160200927230     1.517549837224401     0.775392746427649
    H                1.808680200927229     0.138914837224400     1.734042746427649
    H               -0.870829799072771     2.428822837224400    -0.823907253572351
    C               -0.408349799072771    -2.030894162775600    -1.149297253572350
    C               -1.577349799072771    -2.542894162775600    -0.309297253572351
    H               -0.696349799072771    -1.130894162775600    -1.692297253572351
    H                0.428650200927229    -1.790894162775600    -0.495297253572351
    H               -0.090349799072771    -2.806894162775600    -1.846297253572351
    H               -1.928349799072770    -1.731894162775599     0.323702746427649
    H               -2.394519799072771    -2.891877162775600    -0.957717253572351
    H               -1.251349799072771    -3.372328162775600     0.335492746427649

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ARG-084LEU-1-dimer.npy', np.array(charges))