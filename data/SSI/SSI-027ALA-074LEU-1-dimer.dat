import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.555130080361188    -1.343498208393598    -0.388974964480969
    C               -0.634130080361188    -1.840498208393598    -1.497974964480969
    H               -2.599130080361188    -1.529498208393598    -0.645974964480969
    H               -1.316130080361188    -1.847498208393598     0.546025035519031
    H               -1.413130080361188    -0.271498208393598    -0.244974964480969
    H                0.394869919638812    -1.781498208392598    -1.134974964480969
    H               -0.730310080361188    -1.193738208393598    -2.382536964480968
    H               -0.838090080361188    -2.892508208393598    -1.746306964480969
    C                1.208869919638812     0.835501791606402     0.894025035519031
    C                0.977869919638812     2.347501791606402     0.986025035519031
    H                2.140869919638812     0.567501791606402     1.391025035519031
    H                0.405869919638812     0.302501791606402     1.395025035519031
    H                1.253869919638812     0.521501791606402    -0.148974964480969
    H                1.031869919638812     2.649501791606402     2.028025035519032
    H                1.730059919638812     2.912181791607402     0.415624035519031
    H               -0.030610080361188     2.574871791607401     0.610175035519031

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-027ALA-074LEU-1-dimer.npy', np.array(charges))