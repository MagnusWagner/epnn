import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.023603380506318     1.517705748967322    -0.171009907531793
    C                1.199603380506318     1.913705748967321     0.730990092468207
    C               -1.372396619493682     1.929705748967322     0.314990092468207
    H                0.194603380506318     1.973705748967322    -1.141009907531793
    H                0.030603380506318     0.440705748967322    -0.315009907531793
    H                0.944603380506318     1.681705748967322     1.762990092468207
    H               -1.416396619493682     3.016705748967321     0.386990092468207
    H                1.394382380506318     2.994385748967321     0.666310092468206
    H                2.081789380506318     1.293735748967322     0.513320092468207
    H               -2.137800619493682     1.606105748967321    -0.405729907531793
    H               -1.588441619493682     1.519215748967322     1.312400092468206
    C               -0.287396619493682    -2.291294251032679     0.134990092468207
    C                0.438603380506318    -2.963294251032679    -1.019009907531794
    H               -0.500396619493682    -3.077294251032679     0.840990092468207
    H                0.340603380506318    -1.537294251032678     0.605990092468207
    H               -1.220396619493682    -1.848294251032679    -0.215009907531793
    H                0.449603380506318    -2.275294251032679    -1.858009907531794
    H               -0.081961859493682    -3.890974251032678    -1.299039907531793
    H                1.485190380506318    -3.165534251032679    -0.747429907531794

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-022LEU-065LEU-1-dimer.npy', np.array(charges))