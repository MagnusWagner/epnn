import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.052440975246366     0.978975972479059    -0.207996740124197
    C               -1.466440975246366    -0.295024027520941    -0.835996740124197
    O               -1.569440975246366    -1.381024027520941    -0.206996740124197
    O               -0.859440975246366    -0.212024027520941    -1.942996740124197
    H               -2.378440975246365     1.649975972479059    -0.999996740124197
    H               -1.275440975246366     1.478975972479059     0.376003259875803
    H               -2.931880975246365     0.799525972479059     0.427913259875803
    C                1.891559024753634     0.608975972479059     0.491003259875803
    C                1.494559024753634     1.055975972479059     1.916003259875803
    C                2.576559024753634    -0.723024027520941     0.757003259875803
    H                2.596559024753634     1.326975972479059     0.090003259875803
    H                1.068559024753634     0.468975972479059    -0.213996740124197
    H                2.376559024753635     1.326975972479059     2.503003259875804
    H                0.796559024753634     1.888975972479059     1.898003259875803
    H                2.446559024753634    -1.429024027520941    -0.067996740124197
    H                1.047179024753634     0.107385972479059     2.247713259875804
    H                2.055169024753634    -1.096734027520941     1.650593259875803
    H                3.648889024753635    -0.598254027520941     0.968043259875803

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017GLU-072PRO-1-dimer.npy', np.array(charges))