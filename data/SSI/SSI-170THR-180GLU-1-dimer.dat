import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.801483923288562     2.138923853565712    -0.815586473582825
    C               -0.581516076711438     2.398923853565712    -1.371586473582825
    H                1.513483923288562     2.871923853565712    -1.194586473582825
    H                0.777483923288562     2.206923853565712     0.271413526417175
    H                1.131483923288563     1.139923853565712    -1.093586473582825
    H               -1.295516076711438     1.792923853565712    -0.819586473582825
    H               -0.668526076711438     2.177840853565712    -2.445626473582825
    H               -0.856866076711438     3.455603853565712    -1.238926473582825
    C                0.207483923288562    -1.108076146434288     0.510413526417175
    C               -0.758516076711438    -2.023076146434288    -0.273586473582825
    C                0.344483923288562    -1.485076146434288     1.983413526417175
    H                1.187483923288562    -1.146076146434288     0.032413526417175
    H               -0.168516076711438    -0.088076146434288     0.455413526417175
    H               -0.735516076711438    -1.725076146434288    -1.324586473582825
    H               -0.629516076711438    -1.411076146434288     2.470413526417175
    H                0.696483923288562    -2.513076146434288     2.072413526417175
    H               -1.783126076711438    -1.924066146434288     0.114203526417175
    H               -0.390736076711438    -3.057964146434288    -0.212406473582825
    H                1.062113923288562    -0.846463146434288     2.519303526417175

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-170THR-180GLU-1-dimer.npy', np.array(charges))