import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.241027034615845    -2.620454288974952    -0.129325770442197
    C                0.106027034615845    -1.663454288974952     0.358674229557803
    O                0.129027034615845    -1.301454288974952     1.609674229557803
    O               -0.693972965384155    -1.302454288974952    -0.594325770442197
    H                1.337027034615845    -2.555454288974952    -1.216325770442197
    H                0.961027034615845    -3.648454288974952     0.109674229557803
    H                2.231207034615845    -2.424074288974952     0.307684229557803
    C                0.151027034615845     1.856545711025048    -0.161325770442197
    C                0.311027034615845     3.350545711025048     0.005674229557803
    N               -1.089972965384155     1.495545711025048    -0.941325770442197
    H                1.036027034615845     1.467545711025048    -0.679325770442197
    H                0.108027034615845     1.390545711025048     0.828674229557803
    H               -0.493972965384155     3.739545711025048     0.632674229557803
    H                0.231027034615845     3.826545711025048    -0.974325770442197
    H               -1.029972965384155     1.793545711025048    -1.909325770442197
    H               -1.164972965384155     0.470545711025048    -0.954325770442198
    H               -1.926972965384155     1.855545711025048    -0.494325770442197
    H                1.281377034615845     3.638265711025048     0.436544229557803

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-210GLU-213LYS-1-dimer.npy', np.array(charges))