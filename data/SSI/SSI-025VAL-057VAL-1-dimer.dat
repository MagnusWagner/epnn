import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.589157612797963     1.302111444619625    -0.923276660834248
    C               -0.997157612797963     2.532111444619625    -1.765276660834248
    H               -1.307157612797962     0.494111444619625    -1.060276660834248
    H                0.396842387202037     0.958111444619625    -1.237276660834248
    H               -0.534157612797963     1.565111444619625     0.132723339165752
    H               -0.277157612797963     3.328111444619626    -1.569276660834248
    H               -1.999978612797963     2.864006444619625    -1.458363460834248
    H               -0.956477612797963     2.320723444619625    -2.844007660834248
    C                0.724842387202037    -1.997888555380375     0.576723339165752
    C                0.854842387202037    -1.840888555380375     2.108723339165752
    H               -0.169157612797963    -1.498888555380375     0.206723339165752
    H                1.593842387202037    -1.548888555380375     0.093723339165752
    H                0.691842387202037    -3.055888555380375     0.323723339165752
    H                0.950842387202037    -0.777888555380375     2.333723339165752
    H               -0.046047612797963    -2.232206555380375     2.603963339165752
    H                1.735712387202037    -2.362188555380375     2.511611339165752

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025VAL-057VAL-1-dimer.npy', np.array(charges))