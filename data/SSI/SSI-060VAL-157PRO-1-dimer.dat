import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.493742403910685    -0.160897881514640     0.275748017092893
    C               -2.481742403910685    -1.307897881514640     1.283748017092893
    H               -1.830742403910684     0.640102118485360     0.604748017092893
    H               -2.142742403910685    -0.517897881514640    -0.694251982907107
    H               -3.501742403910684     0.237102118485360     0.162748017092893
    H               -1.446742403910685    -1.625897881514640     1.410748017092893
    H               -2.879695403910684    -0.976983881513640     2.254381627092893
    H               -3.047829403910685    -2.166788881514640     0.894066017092893
    C                1.095257596089316     0.542102118485360    -0.746251982907107
    C                1.625257596089316     0.921102118485360     0.618748017092893
    C                2.315257596089316     0.048102118486360    -1.484251982907107
    H                0.633257596089315     1.393102118485360    -1.248251982907107
    H                0.378257596089315    -0.272897881513640    -0.643251982907107
    H                2.000257596089315     1.945102118486360     0.603748017092893
    H                0.842257596089315     0.800102118485360     1.368748017092894
    H                2.888257596089316     0.912102118485360    -1.824251982907107
    H                2.056257596089315    -0.593897881514640    -2.327251982907107
    H                2.459242596089316     0.220255118486360     0.771334017092893
    H                2.873867596089315    -0.499669881513640    -0.711011982907107

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-060VAL-157PRO-1-dimer.npy', np.array(charges))