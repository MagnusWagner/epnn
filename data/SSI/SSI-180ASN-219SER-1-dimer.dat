import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.550898380196006    -0.342213090006092    -1.558441600975412
    C                0.746101619803994    -0.820213090006092    -0.960441600975412
    O                1.336101619803994    -1.785213090006093    -1.456441600975412
    N                1.189101619803994    -0.185213090006092     0.108558399024588
    H                2.036101619803994    -0.487213090006092     0.562558399024588
    H                0.629101619803994     0.548786909993908     0.531558399024588
    H               -0.337898380196006     0.355786909993908    -2.362441600975412
    H               -1.126898380196006     0.181786909993908    -0.800441600975412
    H               -1.128628380196006    -1.188923090006093    -1.957571600975412
    C               -1.914898380196006     1.724786909993908     1.603558399024588
    O               -0.631898380196006     1.156786909993907     1.839558399024588
    H               -0.551898380196006     0.804786909993908     2.745558399024588
    H               -1.887898380196006     2.270786909993908     0.663558399024588
    H               -2.166898380196006     2.419786909993907     2.404558399024588
    H               -2.686978380196006     0.945476909993908     1.522588399024588

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-180ASN-219SER-1-dimer.npy', np.array(charges))