import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.332225299430    0.601772922862    1.013720567180
 C   -2.370225299430    0.647772922862    2.121720567180
 H   -1.110225299430   -0.419227077138    0.715720567180
 H   -1.704225299430    1.132772922862    0.138720567180
 H   -0.413225299430    1.083772922862    1.352720567180
 H   -3.300225299430    0.208772922862    1.756720567180
 H   -2.559225299430    1.698772922862    2.343720567180
 H   -2.053129299430    0.125492922862    3.036421567180
 C    1.625774700570   -0.715227077138   -0.842279432820
 C    2.075774700570   -0.535227077138   -2.293279432820
 H    0.938774700570   -1.555227077138   -0.740279432820
 H    2.491774700570   -0.921227077138   -0.211279432820
 H    1.142774700570    0.197772922862   -0.491279432820
 H    2.511774700570   -1.477227077138   -2.605279432820
 H    1.219420700570   -0.311367077138   -2.946382432820
 H    2.846466700570    0.247732922862   -2.348122432820
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-025ILE-091VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025ILE-091VAL-1-dimer.npy', np.array(charges))