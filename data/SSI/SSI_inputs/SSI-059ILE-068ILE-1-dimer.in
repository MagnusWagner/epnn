import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.301523866579   -1.827173731042    0.072471509220
 C    1.667523866579   -1.172173731042    1.420471509220
 H    2.129523866579   -2.424173731042   -0.300528490780
 H    0.440523866579   -2.480173731042    0.218471509220
 H    1.031523866579   -1.075173731042   -0.664528490780
 H    1.782523866579   -1.977173731042    2.147471509220
 H    0.836523866579   -0.546173731042    1.748471509220
 H    2.591497866579   -0.575396731042    1.409090509220
 C   -1.029476133421    0.880826268958   -0.635528490780
 C   -1.939476133421    2.128826268958   -0.856528490780
 H   -1.125476133421    0.505826268958    0.380471509220
 H   -1.247476133421    0.086826268958   -1.350528490780
 H    0.005523866579    1.174826268958   -0.798528490780
 H   -1.878476133421    2.380826268958   -1.914528490780
 H   -1.597039233421    2.986326268958   -0.258667490780
 H   -2.970310133421    1.820933268958   -0.627216490780
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-059ILE-068ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-059ILE-068ILE-1-dimer.npy', np.array(charges))