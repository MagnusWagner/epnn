import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.280060062782   -0.003947713262    2.029106792464
 C    2.771060062782    0.288052286738    2.187106792464
 H    1.119060062782   -0.810947713262    1.317106792464
 H    0.855060062782   -0.296947713262    2.983106792464
 H    0.762060062782    0.889052286738    1.693106792464
 H    3.275060062782   -0.623947713262    2.497106792464
 H    2.852060062782    1.007052286738    3.001106792464
 H    3.241820062782    0.676322286738    1.271886792464
 C   -1.127939937218   -0.377947713262   -0.923893207536
 C   -1.563939937218   -1.050947713262   -2.240893207536
 C   -1.430939937218    1.115052286738   -1.109893207536
 H   -0.058939937218   -0.543947713262   -0.787893207536
 H   -1.674939937218   -0.789947713262   -0.073893207536
 H   -0.985939937218   -1.951947713262   -2.444893207536
 H   -2.628939937218   -1.281947713262   -2.204893207536
 H   -2.346939937218    1.378052286738   -0.576893207536
 H   -1.377964937218   -0.271307713262   -2.994273207536
 H   -1.585229937218    1.222902286738   -2.193663207536
 H   -0.592509937218    1.751652286738   -0.790873207536
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-037ILE-162PRO-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037ILE-162PRO-1-dimer.npy', np.array(charges))