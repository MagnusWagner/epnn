import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
1 1 
 C    2.568703370160   -1.046636171095    2.033668457913
 O    1.889703370160    0.013363828905    1.380668457913
 H    1.896703370160    0.758363828905    2.015668457913
 H    2.430703370160   -1.970636171095    1.471668457913
 H    2.140703370160   -1.181636171095    3.027668457913
 H    3.643033370160   -0.830906171095    2.130028457913
 C    0.240703370160    0.089363828905   -2.323331542087
 C   -1.248296629840    0.240363828905   -0.352331542087
 N   -0.037296629840    0.226363828905   -0.887331542087
 N   -2.316296629840    0.113363828905   -1.115331542087
 N   -1.394296629840    0.374363828905    0.950668457913
 H    0.757703370160    0.300363828905   -0.260331542087
 H    1.174703370160    0.606363828905   -2.550331542087
 H   -0.533296629840    0.577363828905   -2.918331542087
 H   -2.209296629840    0.018363828905   -2.111331542087
 H   -3.239296629840    0.185363828905   -0.718331542087
 H   -0.584296629840    0.486363828905    1.539668457913
 H   -2.315296629840    0.413363828905    1.360668457913
 H    0.333593370160   -0.960556171095   -2.638021542087
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-044SER-093ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044SER-093ARG-1-dimer.npy', np.array(charges))