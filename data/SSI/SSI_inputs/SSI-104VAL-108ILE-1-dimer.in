import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.636917344226   -0.563743227455   -0.275980697234
 C    2.102917344226   -1.593743227455   -1.320980697234
 H    1.130917344226   -1.061743227455    0.554019302766
 H    2.504917344226   -0.026743227455    0.105019302766
 H    0.968917344226    0.169256772545   -0.727980697234
 H    2.478917344226   -1.048743227455   -2.183980697234
 H    1.270527344226   -2.239795227455   -1.636810697234
 H    2.929037344226   -2.185879227455   -0.900380697234
 C   -1.346082655774    1.602256772545    0.622019302766
 C   -2.403082655774    0.554256772545    0.969019302766
 H   -1.708082655774    2.606256772545    0.835019302766
 H   -0.453082655774    1.421256772545    1.221019302766
 H   -1.087082655774    1.529256772545   -0.433980697234
 H   -2.661082655774    0.657256772545    2.024019302766
 H   -1.940082655774   -0.423743227455    0.846019302766
 H   -3.322722655774    0.614947772545    0.368539302766
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-104VAL-108ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-104VAL-108ILE-1-dimer.npy', np.array(charges))