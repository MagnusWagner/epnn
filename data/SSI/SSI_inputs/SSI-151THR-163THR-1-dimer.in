import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.012072497210   -0.538744236578    1.326839998060
 C   -0.371927502790   -1.650744236578    2.276839998060
 H    0.128072497210   -1.095744236578    0.404839998060
 H   -0.801927502790    0.185255763422    1.293839998060
 H    0.929072497210   -0.035744236578    1.633839998060
 H   -0.411927502790   -1.247744236578    3.289839998060
 H    0.356164497210   -2.474394236578    2.238329998060
 H   -1.368987502790   -2.014154236578    1.987349998060
 C   -0.077927502790    0.591255763422   -1.302160001940
 C    0.441072497210    1.596255763422   -2.299160001940
 H    0.835072497210    0.308255763422   -0.793160001940
 H   -0.790927502790    1.096255763422   -0.652160001940
 H   -0.571927502790   -0.251744236578   -1.785160001940
 H   -0.377927502790    1.860255763422   -2.969160001940
 H    1.267022997210    1.185065763422   -2.898100001940
 H    0.769046697210    2.507975763422   -1.778400001940
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-151THR-163THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-151THR-163THR-1-dimer.npy', np.array(charges))