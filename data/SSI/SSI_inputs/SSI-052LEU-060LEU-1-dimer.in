import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.523829943709    1.074017201133    0.037352584339
 C    2.965829943709    1.408017201133   -0.314647415661
 H    1.233829943709    0.128017201133   -0.419647415661
 H    1.422829943709    0.994017201133    1.119352584339
 H    0.861829943709    1.865017201133   -0.315647415661
 H    3.223829943709    2.353017201133    0.159352584339
 H    3.043959943709    1.503506201133   -1.407707415661
 H    3.650299943709    0.624738201133    0.043092584339
 C   -1.746170056291   -0.707982798867    0.343352584339
 C   -2.744170056291   -1.775982798867   -0.066647415661
 H   -2.195170056291   -0.025982798867    1.066352584339
 H   -0.870170056291   -1.176982798867    0.793352584339
 H   -1.425170056291   -0.146982798867   -0.534647415661
 H   -2.272170056291   -2.425982798867   -0.800647415661
 H   -3.630800056291   -1.295182798867   -0.505637415661
 H   -3.035000056291   -2.374204798867    0.809452584339
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-052LEU-060LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-052LEU-060LEU-1-dimer.npy', np.array(charges))