import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.004177161380   -1.614255134749   -1.152851491830
 C   -1.398822838620   -1.246255134749   -1.616851491830
 H    0.684177161380   -0.795255134749   -1.382851491830
 H    0.006177161380   -1.780255134749   -0.078851491830
 H    0.345177161380   -2.519255134749   -1.656851491830
 H   -1.695822838620   -0.323255134749   -1.121851491830
 H   -1.370902838620   -1.088735134749   -2.705156491830
 H   -2.110132838620   -2.039562134749   -1.343545491830
 C    0.077177161380    1.181744865251    1.016148508170
 C    1.316177161380    1.677744865251    1.749148508170
 H    0.183177161380    1.342744865251   -0.057851491830
 H   -0.060822838620    0.121744865251    1.222148508170
 H   -0.800822838620    1.718744865251    1.376148508170
 H    1.193177161380    1.464744865251    2.809148508170
 H    1.430667161380    2.761794865251    1.601746508170
 H    2.211327161380    1.148694865251    1.390228508170
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-003LEU-033LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-003LEU-033LEU-1-dimer.npy', np.array(charges))