import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.401960007299    1.106915055241   -0.470474791754
 C   -2.756960007299    1.749915055241   -0.764474791754
 H   -0.598960007299    1.835915055241   -0.576474791754
 H   -1.381960007299    0.722915055241    0.548525208246
 H   -1.229960007299    0.270915055241   -1.150474791754
 H   -2.804960007299    2.692915055241   -0.221474791754
 H   -2.891909007299    1.950535055241   -1.837573291754
 H   -3.584132007299    1.128265055241   -0.391194391754
 C    1.693039992701   -0.808084944759    0.835525208246
 C    2.464039992701   -2.055084944759    0.399525208246
 H    2.345039992701   -0.135084944759    1.390525208246
 H    1.327039992701   -0.272084944759   -0.040474791754
 H    0.854039992701   -1.094084944759    1.461525208246
 H    3.360039992701   -1.703084944759   -0.113474791754
 H    2.758699992701   -2.686607944759    1.250614208246
 H    1.868929992701   -2.635025944759   -0.321248791754
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-067LEU-109VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-067LEU-109VAL-1-dimer.npy', np.array(charges))