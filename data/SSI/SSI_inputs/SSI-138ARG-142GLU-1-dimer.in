import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.915806846940   -1.819296865003   -0.635984912954
 C   -1.109806846940   -1.025296865003    1.595015087046
 N   -0.577806846940    0.078703134997    1.104015087046
 N   -1.705806846940   -1.929296865003    0.816015087046
 N   -1.031806846940   -1.240296865003    2.894015087046
 H   -0.539806846940    0.258703134997    0.102015087046
 H   -0.135806846940    0.744703134997    1.713015087046
 H   -2.106806846940   -2.739296865003    1.268015087046
 H   -1.501806846940   -2.029296865003    3.296015087046
 H   -0.600806846940   -0.554296865003    3.496015087046
 H   -2.244806846940   -0.807296865003   -0.883984912954
 H   -2.718806846940   -2.499296865003   -0.925984912954
 H   -1.026316846940   -2.060259865003   -1.236604912954
 C    2.237193153060    1.305703134997   -2.722984912954
 C    1.550193153060    1.472703134997   -1.377984912954
 O    0.310193153060    1.283703134997   -1.297984912954
 O    2.254193153060    1.840703134997   -0.408984912954
 H    1.868193153060    2.073703134997   -3.406984912954
 H    1.974193153060    0.344703134997   -3.158984912954
 H    3.329225153060    1.415336134997   -2.649174912954
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-138ARG-142GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-138ARG-142GLU-1-dimer.npy', np.array(charges))