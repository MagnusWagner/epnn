import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.589642377111    1.847264724109    1.498793546594
 C   -0.818642377111    3.037264724109    2.423793546594
 H    0.348357622889    1.973264724109    0.955793546594
 H   -0.532642377111    0.932264724109    2.089793546594
 H   -1.413642377111    1.735264724109    0.793793546594
 H   -1.808642377111    2.923264724109    2.850793546594
 H   -0.801460277111    3.982284724109    1.861078546594
 H   -0.066790377111    3.053044724109    3.226582546594
 C    0.480357622889   -0.069735275891   -1.352206453406
 C    0.772357622889   -0.716735275891   -2.701206453406
 C    0.207357622889   -1.095735275891   -0.271206453406
 O    1.041357622889   -1.348735275891    0.595793546594
 N   -0.974642377111   -1.692735275891   -0.306206453406
 H    1.327357622889    0.544264724109   -1.044206453406
 H   -0.392642377111    0.574264724109   -1.445206453406
 H   -0.024642377111   -1.418735275891   -2.949206453406
 H    1.706357622889   -1.262735275891   -2.584206453406
 H   -1.185642377111   -2.390735275891    0.390793546594
 H   -1.636642377111   -1.474735275891   -1.036206453406
 H    0.878963622889    0.005734724109   -3.523803453406
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-024VAL-143GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024VAL-143GLN-1-dimer.npy', np.array(charges))