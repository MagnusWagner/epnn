import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.178262144492   -1.035679227066    0.321267593076
 C   -2.618262144492   -1.598679227066    0.410267593076
 H   -1.043262144492   -0.486679227066   -0.607732406924
 H   -1.009262144492   -0.358679227066    1.157267593076
 H   -0.442262144492   -1.833679227066    0.372267593076
 H   -2.756262144492   -2.101679227066    1.367267593076
 H   -2.832292144492   -2.295729227066   -0.413322406924
 H   -3.322262144492   -0.755029227066    0.358897593076
 C    1.301737855508    1.721320772934   -0.224732406924
 C    2.499737855508    0.913320772934   -0.500732406924
 H    1.558737855508    2.777320772934   -0.150732406924
 H    0.593737855508    1.593320772934   -1.042732406924
 H    0.836737855508    1.394320772934    0.706267593076
 H    2.958737855508    1.278320772934   -1.421732406924
 H    2.137737855508   -0.097679227066   -0.690732406924
 H    3.260957855508    0.882500772934    0.292737593076
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-017LEU-083ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017LEU-083ILE-1-dimer.npy', np.array(charges))