import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.776076790439    1.029261507917   -2.404000096761
 C    0.160923209561    0.662261507917   -1.221000096761
 O    0.461923209561   -0.539738492083   -1.034000096761
 O    0.669923209561    1.563261507917   -0.534000096761
 H   -0.317076790439    1.750261507917   -3.062000096761
 H   -1.656076790439    1.508261507917   -1.976000096761
 H   -1.122820790439    0.157081507917   -2.977650096761
 C   -0.417076790439   -1.878738492083    2.680999903239
 O   -0.089076790439   -0.676738492083    2.070999903239
 H    0.319923209561   -0.114738492083    2.735999903239
 H   -1.102076790439   -1.694738492083    3.509999903239
 H   -0.892475790439   -2.557978492083    1.958069903239
 H    0.511683209561   -2.322728492083    3.068659903239
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-006ASP-010THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-006ASP-010THR-1-dimer.npy', np.array(charges))