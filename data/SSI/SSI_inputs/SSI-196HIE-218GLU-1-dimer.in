import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.862700634273    2.014012518387   -0.861631895062
 C   -1.524700634273    0.684012518387   -1.042631895062
 C   -1.860700634273   -1.470987481613   -0.747631895062
 C   -2.567700634273    0.310012518387   -1.830631895062
 N   -1.106700634273   -0.449987481613   -0.376631895062
 N   -2.759700634273   -1.039987481613   -1.626631895062
 H   -1.736700634273   -2.494987481613   -0.413631895062
 H   -0.057700634273    2.102012518387   -1.580631895062
 H   -0.403700634273    1.987012518387    0.123368104938
 H   -3.442700634273   -1.625987481613   -2.092631895062
 H   -3.136700634273    0.951012518387   -2.481631895062
 H   -1.534320634273    2.882662518387   -0.927786895062
 C    3.087299365727   -1.287987481613    1.890368104938
 C    2.431299365727    0.043012518387    1.489368104938
 O    1.355299365727    0.060012518387    0.855368104938
 O    3.029299365727    1.093012518387    1.815368104938
 H    3.356299365727   -1.310987481613    2.921368104938
 H    4.032299365727   -1.372987481613    1.364368104938
 H    2.503178365727   -2.192548481613    1.665485104938
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-196HIE-218GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-196HIE-218GLU-1-dimer.npy', np.array(charges))