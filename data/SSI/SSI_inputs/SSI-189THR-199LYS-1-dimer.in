import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.068844285572    1.949607029343    1.875177394747
 O    0.815844285572    0.743607029343    1.794177394747
 H    1.554844285572    0.865607029343    1.138177394747
 H   -0.995155714428    1.713607029343    1.819177394747
 H    0.278494285572    2.450467029343    2.831827394747
 H    0.327884285572    2.605497029343    1.030957394747
 C   -0.408155714428   -0.876392970657   -0.756822605253
 C   -1.511155714428   -0.468392970657   -1.738822605253
 C    0.886844285572   -1.561392970657   -1.422822605253
 H   -0.073155714428    0.026607029343   -0.272822605253
 H   -0.831155714428   -1.544392970657   -0.002822605253
 H   -2.077155714428   -1.363392970657   -1.998822605253
 H   -1.029155714428   -0.100392970657   -2.645822605253
 H    1.338844285572   -2.169392970657   -0.631822605253
 H    0.533844285572   -2.270392970657   -2.177822605253
 H   -2.192715714428    0.318837029343   -1.384214605253
 H    1.690234285572   -0.944502970657   -1.851777605253
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-189THR-199LYS-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-189THR-199LYS-1-dimer.npy', np.array(charges))