import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.911619645559   -1.670523409684    1.174904754111
 C    0.398380354441   -2.278523409684    1.653904754111
 H   -1.700619645559   -2.423523409684    1.151904754111
 H   -1.221619645559   -0.884523409684    1.862904754111
 H   -0.795619645559   -1.245523409684    0.175904754111
 H    0.256380354441   -2.712523409684    2.637904754111
 H    0.712760354441   -3.057583409684    0.943817754111
 H    1.127750354441   -1.456723409684    1.705490754111
 C   -0.017619645559    1.343476590316   -1.058095245889
 C    0.535380354441    2.600476590316   -1.776095245889
 H    0.363380354441    0.432476590316   -1.518095245889
 H    0.305380354441    1.357476590316   -0.018095245889
 H   -1.106619645559    1.347476590316   -1.088095245889
 H    1.617380354441    2.511476590316   -1.886095245889
 H    0.328380354441    3.463476590316   -1.144095245889
 H    0.059230354441    2.728666590316   -2.759380845889
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-203VAL-291ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-203VAL-291ILE-1-dimer.npy', np.array(charges))