import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    0.802601675310   -1.448516217957   -3.290050809342
 C   -0.841398324690   -1.412516217957   -0.066050809342
 C   -0.117398324690   -1.588516217957   -2.127050809342
 C   -1.410398324690   -1.991516217957   -2.106050809342
 N    0.220601675310   -1.206516217957   -0.845050809342
 N   -1.855398324690   -1.847516217957   -0.821050809342
 H   -0.906398324690   -1.167516217957    0.986949190658
 H   -2.810398324690   -1.949516217957   -0.498050809342
 H   -1.984398324690   -2.307516217957   -2.964050809342
 H    1.513601675310   -0.649516217957   -3.086050809342
 H    0.216601675310   -1.145516217957   -4.158050809342
 H    1.344701675310   -2.375946217957   -3.526670809342
 C    0.247601675310    3.064483782043    3.191949190658
 C    0.778601675310    2.155483782043    2.094949190658
 O    0.029601675310    1.219483782043    1.696949190658
 O    1.948601675310    2.354483782043    1.663949190658
 H    0.846601675310    3.975483782043    3.262949190658
 H    0.345601675310    2.548483782043    4.150949190658
 H   -0.812668324690    3.323293782043    3.054679190658
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-068HIE-080GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-068HIE-080GLU-1-dimer.npy', np.array(charges))