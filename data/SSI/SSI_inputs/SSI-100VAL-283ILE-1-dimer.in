import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.411076083543   -0.278666084476   -1.504932168177
 C    0.698076083543    0.358333915524   -2.715932168177
 H    1.520076083543    0.462333915524   -0.710932168177
 H    0.829076083543   -1.122666084476   -1.130932168177
 H    2.398076083543   -0.632666084476   -1.802932168177
 H    0.586076083543   -0.388666084476   -3.502932168177
 H    1.301543083543    1.201533915524   -3.083232168177
 H   -0.295351916457    0.679923915524   -2.369982168177
 C   -0.688923916457   -0.478666084476    1.568067831823
 C   -1.421923916457    0.397333915524    2.645067831823
 H   -1.038923916457   -0.219666084476    0.570067831823
 H    0.388076083543   -0.301666084476    1.614067831823
 H   -0.882923916457   -1.537666084476    1.750067831823
 H   -1.217923916457    1.452333915524    2.461067831823
 H   -1.051923916457    0.144333915524    3.631067831823
 H   -2.515685916457    0.282353915524    2.666627831823
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-100VAL-283ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-100VAL-283ILE-1-dimer.npy', np.array(charges))