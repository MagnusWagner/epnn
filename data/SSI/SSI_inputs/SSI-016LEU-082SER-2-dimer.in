import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.611526755486   -0.522238340158    1.073081467426
 C   -1.637526755486   -1.079238340158    2.052081467426
 H   -0.381526755486    0.504761659842    1.333081467426
 H    0.309473244514   -1.102238340158    1.123081467426
 H   -1.025526755486   -0.575238340158    0.068081467426
 H   -1.299526755486   -0.845238340158    3.062081467426
 H   -2.648436755486   -0.669668340158    1.909531467426
 H   -1.687616755486   -2.174748340158    1.966411467426
 C    1.258473244514    1.446761659842   -1.439918532574
 O    0.808473244514    0.111761659842   -1.479918532574
 H    1.541473244514   -0.450238340158   -1.767918532574
 H    1.650473244514    1.733761659842   -2.417918532574
 H    2.062473244514    1.522761659842   -0.705918532574
 H    0.442353244514    2.124511659842   -1.149048532574
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-016LEU-082SER-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016LEU-082SER-2-dimer.npy', np.array(charges))