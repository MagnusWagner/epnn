import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.121011777938    1.426984699731    0.940741156490
 C   -1.071011777938    2.485984699731    0.413741156490
 H    0.784988222062    1.393984699731    0.336741156490
 H    0.142988222062    1.634984699731    1.977741156490
 H   -0.671011777938    0.491984699731    0.912741156490
 H   -2.036011777938    2.337984699731    0.896741156490
 H   -1.200389777938    2.409076699731   -0.675908843510
 H   -0.706292777938    3.488238499731    0.682941156490
 C    0.835988222062   -1.267015300269   -0.479258843510
 C    0.365988222062   -2.649015300269   -0.871258843510
 H    1.918988222062   -1.181015300269   -0.569258843510
 H    0.362988222062   -0.531015300269   -1.130258843510
 H    0.571988222062   -1.068015300269    0.540741156490
 H    0.487988222062   -2.737015300269   -1.951258843510
 H   -0.703011777938   -2.740015300269   -0.678258843510
 H    0.928281222062   -3.462728300269   -0.389908843510
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-018LEU-039ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-018LEU-039ILE-1-dimer.npy', np.array(charges))