import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    2.389328673196   -0.922057165897    0.104508878661
 C    2.968328673196   -0.086057165897   -1.046491121339
 O    1.844328673196   -0.065057165897    1.107508878661
 H    1.608328673196   -1.582057165897   -0.274491121339
 H    3.173328673196   -1.534057165897    0.545508878661
 H    2.185328673196    0.546942834103   -1.465491121339
 H    0.892328673196   -0.291057165897    1.224508878661
 H    3.359768673196   -0.774667165897   -1.809771121339
 H    3.811938673196    0.534782834103   -0.710511121339
 C   -0.778671326804    0.396942834103   -0.804491121339
 C   -1.681671326804    0.658942834103   -2.012491121339
 C   -1.503671326804    0.103942834103    0.501508878661
 O   -2.673671326804    0.460942834103    0.698508878661
 O   -0.791671326804   -0.498057165897    1.336508878661
 H   -0.179671326804   -0.484057165897   -1.039491121339
 H   -0.095671326804    1.233942834103   -0.658491121339
 H   -2.479671326804   -0.083057165897   -2.053491121339
 H   -1.041891326804    0.575002834103   -2.903351121339
 H   -2.101321326804    1.673382834103   -1.943141121339
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-178SER-239ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-178SER-239ASP-1-dimer.npy', np.array(charges))