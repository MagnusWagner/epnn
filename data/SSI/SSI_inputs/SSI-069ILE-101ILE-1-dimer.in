import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.246247779034   -0.763618307701   -1.616563150354
 C    1.182247779034   -0.484618307701   -2.761563150354
 H    0.548247779034   -0.183618307701   -0.755563150354
 H   -0.754752220966   -0.454618307701   -1.896563150354
 H    0.248247779034   -1.826618307701   -1.373563150354
 H    1.107247779034    0.570381692299   -3.032563150354
 H    0.821247779034   -1.071618307701   -3.605563150354
 H    2.230707779034   -0.732162307701   -2.539203150354
 C   -0.629752220966    0.749381692299    1.444436849646
 C   -0.783752220966    0.490381692299    2.936436849646
 H   -0.804752220966   -0.183618307701    0.914436849646
 H   -1.385752220966    1.468381692299    1.126436849646
 H    0.364247779034    1.143381692299    1.227436849646
 H   -1.710752220966   -0.061618307701    3.104436849646
 H   -0.899752220966    1.472381692299    3.390436849646
 H    0.057317779034   -0.039765307701    3.407121849646
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-069ILE-101ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-069ILE-101ILE-1-dimer.npy', np.array(charges))