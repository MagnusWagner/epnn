import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.977546229966    0.720097268166   -0.092284155798
 C   -3.378546229966    0.194097268166   -0.301284155798
 C   -2.091546229966    2.053097268166    0.587715844202
 H   -1.439546229966    0.799097268166   -1.037284155798
 H   -1.446546229966    0.036097268166    0.571715844202
 H   -3.735546229966    0.453097268166   -1.300284155798
 H   -3.406546229966   -0.882902731834   -0.137284155798
 H   -2.197546229966    2.820097268166   -0.182284155798
 H   -1.218546229966    2.266097268166    1.202715844202
 H   -3.957006229966    0.738972268166    0.459305844202
 H   -3.009976229966    1.979883268166    1.188645844202
 C    0.864453770034   -1.854902731834    0.124715844202
 C    3.000453770034   -0.277902731834    0.641715844202
 S    1.610453770034   -0.340902731834   -0.488284155798
 H    0.349453770034   -1.689902731834    1.069715844202
 H    0.130453770034   -2.198902731834   -0.600284155798
 H    1.622453770034   -2.632902731834    0.223715844202
 H    3.432453770034    0.723097268166    0.628715844202
 H    3.753453770034   -0.986902731834    0.302715844202
 H    2.692193770034   -0.546270731834    1.662965844202
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-027PRO-032MET-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-027PRO-032MET-1-dimer.npy', np.array(charges))