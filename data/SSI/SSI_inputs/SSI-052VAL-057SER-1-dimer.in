import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.244489291357   -2.012459898629   -0.568242338724
 C   -2.210489291357   -2.579459898629    0.437757661276
 H   -0.337489291357   -1.684459898629   -0.066242338724
 H   -0.972489291357   -2.784459898629   -1.284242338724
 H   -1.698489291357   -1.184459898629   -1.115242338724
 H   -3.111489291357   -2.882459898629   -0.095242338724
 H   -2.472359291357   -1.859309898629    1.226937661276
 H   -1.754179291357   -3.469529898629    0.895527661276
 C    1.059510708643    0.950540101371   -0.076242338724
 C    0.505510708643    2.066540101371   -0.945242338724
 O    1.712510708643    1.450540101371    1.082757661276
 H    0.235510708643    0.323540101371    0.253757661276
 H    1.760510708643    0.344540101371   -0.652242338724
 H    1.343510708643    2.653540101371   -1.321242338724
 H    2.512510708643    1.961540101371    0.836757661276
 H   -0.167229291357    2.692730101371   -0.340832338724
 H   -0.013709291357    1.619010101371   -1.805542338724
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-052VAL-057SER-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-052VAL-057SER-1-dimer.npy', np.array(charges))