import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.881226471771   -1.069401844715   -0.205016697342
 C   -2.086226471771   -0.170401844715    0.237983302658
 C   -1.169226471771   -2.386401844715    0.498983302658
 H    0.068773528229   -0.662401844715    0.145983302658
 H   -0.839226471771   -1.208401844715   -1.280016697342
 H   -1.826226471771    0.882598155285    0.279983302658
 H   -2.951226471771   -0.293401844715   -0.421016697342
 H   -0.261226471771   -2.981401844715    0.561983302658
 H   -1.974226471771   -2.975401844715    0.056983302658
 H   -2.307407671771   -0.556201844715    1.244093302658
 H   -1.465545971771   -2.021401844715    1.493463302658
 C    1.785773528229    1.569598155285   -0.978016697342
 C    2.290773528229    1.988598155285    0.411983302658
 H    1.495773528229    2.452598155285   -1.547016697342
 H    2.571773528229    1.042598155285   -1.517016697342
 H    0.923773528229    0.918598155285   -0.873016697342
 H    2.579773528229    1.094598155285    0.967983302658
 H    1.497515528229    2.519998155285    0.958183302658
 H    3.203688528229    2.597398155285    0.335253302658
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-031PRO-097VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031PRO-097VAL-1-dimer.npy', np.array(charges))