import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    1.481071437421    2.741456666432    0.134135097791
 C    0.314071437421    1.912456666432    0.600135097791
 O    0.426071437421    1.243456666432    1.649135097791
 O   -0.739928562579    1.987456666432   -0.069864902209
 H    1.353071437421    3.757456666432    0.512135097791
 H    1.485071437421    2.808456666432   -0.954864902209
 H    2.455831437421    2.374929666432    0.488395097791
 C    0.981071437421   -2.394543333568   -0.201864902209
 C   -0.441928562579   -2.007543333568   -0.591864902209
 O   -1.291928562579   -2.858543333568   -0.837864902209
 N   -0.714928562579   -0.717543333568   -0.680864902209
 H   -1.632928562579   -0.428543333568   -0.969864902209
 H   -0.041928562579   -0.012543333568   -0.436864902209
 H    1.005071437421   -2.495543333568    0.881135097791
 H    1.675071437421   -1.607543333568   -0.461864902209
 H    1.325251437421   -3.335110333568   -0.656694902209
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-030GLU-033GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030GLU-033GLN-1-dimer.npy', np.array(charges))