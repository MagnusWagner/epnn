import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.132096018322   -1.317431644472   -0.909443801392
 C    1.179096018322   -2.787431644472   -1.436443801392
 H    1.376096018322   -0.623431644472   -1.713443801392
 H    0.131096018322   -1.092431644472   -0.538443801392
 H    1.847096018322   -1.191431644472   -0.095443801392
 H    0.859096018322   -3.447431644472   -0.630443801392
 H    2.199316018322   -3.037941644472   -1.762643801392
 H    0.470606018322   -2.923571644472   -2.266813801392
 C   -0.963903981678    1.496568355528    0.709556198608
 C   -1.350903981678    2.613568355528    1.630556198608
 H   -1.539903981678    1.531568355528   -0.215443801392
 H    0.095096018322    1.584568355528    0.459556198608
 H   -1.118903981678    0.534568355528    1.199556198608
 H   -0.674903981678    2.579568355528    2.485556198608
 H   -2.371183981678    2.427748355528    1.997296198608
 H   -1.230451981678    3.595428355528    1.149476198608
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-056ALA-061VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-056ALA-061VAL-1-dimer.npy', np.array(charges))