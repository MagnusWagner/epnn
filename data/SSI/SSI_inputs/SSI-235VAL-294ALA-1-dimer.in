import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.100084533172   -0.347627801932    1.760878248999
 C    0.426084533172   -0.488627801932    3.237878248999
 H    0.854084533172   -0.845627801932    1.151878248999
 H   -0.866915466828   -0.807627801932    1.552878248999
 H    0.058084533172    0.706372198068    1.484878248999
 H    0.479084533172   -1.543627801932    3.480878248999
 H    1.405774533172   -0.029487801932    3.436386248999
 H   -0.347955466828   -0.020147801932    3.863484248999
 C   -0.145915466828   -0.065627801932   -1.925121751001
 C   -0.382915466828    0.904372198068   -3.078121751001
 H   -0.526915466828   -1.058627801932   -2.171121751001
 H    0.923084533172   -0.137627801932   -1.713121751001
 H   -0.628915466828    0.301372198068   -1.022121751001
 H   -0.156915466828    1.916372198068   -2.739121751001
 H   -1.444825466828    0.850712198068   -3.360036751001
 H    0.284024533172    0.638312198068   -3.911433751001
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-235VAL-294ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-235VAL-294ALA-1-dimer.npy', np.array(charges))