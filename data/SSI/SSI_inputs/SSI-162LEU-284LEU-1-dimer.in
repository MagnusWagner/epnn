import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.728985127140   -0.413164980006   -0.728177329556
 C    1.830985127140   -0.551164980006   -2.245177329556
 H    1.001985127140   -1.115164980006   -0.331177329556
 H    2.701985127140   -0.621164980006   -0.280177329556
 H    1.430985127140    0.602835019994   -0.466177329556
 H    2.203985127140   -1.549164980006   -2.468177329556
 H    0.812095127140   -0.436524980006   -2.643563329556
 H    2.528665127140    0.192385019994   -2.657949329556
 C   -1.250014872860   -0.046164980006    1.387822670444
 C   -2.309014872860    1.013835019994    1.580822670444
 H   -0.260014872860    0.403835019994    1.351822670444
 H   -1.277014872860   -0.741164980006    2.224822670444
 H   -1.426014872860   -0.598164980006    0.463822670444
 H   -2.159014872860    1.503835019994    2.540822670444
 H   -2.249194872860    1.738925019994    0.755796670444
 H   -3.319644872860    0.579765019994    1.566207670444
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-162LEU-284LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-162LEU-284LEU-1-dimer.npy', np.array(charges))