import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.200906259170    1.137377732444    0.261983653712
 C   -1.412906259170    2.640377732444    0.156983653712
 H   -0.490906259170    0.919377732444    1.059983653712
 H   -2.145906259170    0.647377732444    0.500983653712
 H   -0.826906259170    0.752377732444   -0.686016346288
 H   -1.758906259170    2.988377732444    1.130983653712
 H   -0.490456259170    3.173647732444   -0.116360346288
 H   -2.181566259170    2.890267732444   -0.589152346288
 C    1.081093740830   -1.434622267556    0.349983653712
 C    1.536093740830   -2.340622267556   -0.773016346288
 H   -0.006906259170   -1.370622267556    0.352983653712
 H    1.366093740830   -1.865622267556    1.301983653712
 H    1.516093740830   -0.441622267556    0.236983653712
 H    2.605093740830   -2.198622267556   -0.924016346288
 H    0.988313740830   -2.124852267556   -1.702201346288
 H    1.385773740830   -3.399982267556   -0.517749346288
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-087VAL-102LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-087VAL-102LEU-1-dimer.npy', np.array(charges))