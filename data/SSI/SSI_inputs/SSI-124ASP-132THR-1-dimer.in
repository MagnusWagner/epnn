import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.791713149190   -1.291404199949    2.345227704532
 C   -0.124713149190   -1.932404199949    1.139227704532
 O    0.369286850810   -1.180404199949    0.266227704532
 O   -0.106713149190   -3.178404199949    1.054227704532
 H   -1.467713149190   -0.514404199949    1.985227704532
 H   -0.036713149190   -0.799404199949    2.957227704532
 H   -1.370633149190   -2.016844199949    2.935638704532
 C    0.457286850810    1.672595800051   -1.279772295468
 C   -0.718713149190    1.279595800051   -2.184772295468
 C    0.812286850810    3.142595800051   -1.459772295468
 O    0.118286850810    1.430595800051    0.081227704532
 H    1.328286850810    1.067595800051   -1.526772295468
 H   -1.571713149190    1.883595800051   -1.882772295468
 H   -0.072713149190    3.732595800051   -1.682772295468
 H    1.223286850810    3.545595800051   -0.543772295468
 H    1.540286850810    3.257595800051   -2.260772295468
 H    0.185286850810    0.451595800051    0.194227704532
 H   -0.984323149190    0.222435800051   -2.036872295468
 H   -0.465143149190    1.458245800051   -3.240132295468
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-124ASP-132THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-124ASP-132THR-1-dimer.npy', np.array(charges))