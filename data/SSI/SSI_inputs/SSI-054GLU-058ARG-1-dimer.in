import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.951577987026    2.377009850668   -2.734952439336
 C   -0.490577987026    1.563009850668   -1.518952439336
 O   -0.909577987026    1.883009850668   -0.390952439336
 O    0.319422012974    0.620009850668   -1.703952439336
 H   -0.959577987026    1.741009850668   -3.619952439336
 H   -0.214577987026    3.164009850668   -2.907952439336
 H   -1.935547987026    2.858809850668   -2.636625439336
 C    0.869422012974   -2.626990149332   -0.159952439336
 C    0.308422012974   -0.943990149332    1.614047560664
 N   -0.148577987026    0.271009850668    1.920047560664
 N    0.517422012974   -1.276990149332    0.344047560664
 N    0.482422012974   -1.845990149332    2.567047560664
 H   -0.346577987026    0.919009850668    1.152047560664
 H   -0.288577987026    0.555009850668    2.878047560664
 H    0.390422012974   -0.538990149332   -0.355952439336
 H    0.881422012974   -2.744990149332    2.356047560664
 H    0.242422012974   -1.573990149332    3.516047560664
 H    1.626422012974   -3.089990149332    0.477047560664
 H    1.300422012974   -2.500990149332   -1.155952439336
 H   -0.010717987026   -3.281450149332   -0.243875439336
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-054GLU-058ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-054GLU-058ARG-1-dimer.npy', np.array(charges))