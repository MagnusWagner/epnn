import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.900284678751    1.601113317675   -1.168014017547
 C   -0.894284678751    2.606113317675   -0.037014017547
 H   -0.170284678751    0.814113317675   -1.003014017547
 H   -1.889284678751    1.147113317675   -1.238014017547
 H   -0.680284678751    2.105113317675   -2.108014017547
 H   -1.138284678751    2.083113317675    0.888985982453
 H   -1.693284678751    3.318113317675   -0.235014017547
 H    0.055805321249    3.144923317675    0.093390982453
 C    0.805715321249   -1.536886682325    0.101985982453
 C    0.995715321249   -2.670886682325    1.103985982453
 H    1.450715321249   -0.698886682325    0.360985982453
 H    1.059715321249   -1.884886682325   -0.899014017547
 H   -0.234284678751   -1.210886682325    0.114985982453
 H    2.023715321249   -3.019886682325    1.018985982453
 H    0.818265321249   -2.286656682325    2.119306982453
 H    0.315795321249   -3.504776682325    0.875188982453
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-047ILE-064LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-047ILE-064LEU-1-dimer.npy', np.array(charges))