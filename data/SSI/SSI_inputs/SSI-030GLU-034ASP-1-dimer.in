import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-2 1 
 C   -0.762939969403    2.206745153627    1.423254391279
 C   -0.097939969403    2.240745153627    0.044254391279
 O    1.052060030597    1.760745153627   -0.069745608721
 O   -0.711939969403    2.732745153627   -0.932745608721
 H   -0.079939969403    2.622745153627    2.167254391279
 H   -0.974939969403    1.171745153627    1.702254391279
 H   -1.701029969403    2.780145153627    1.457914391279
 C   -1.216939969403   -1.830254846373   -0.168745608721
 C    0.205060030597   -2.263254846373   -0.118745608721
 O    1.055060030597   -1.389254846373    0.162254391279
 O    0.479060030597   -3.462254846373   -0.347745608721
 H   -1.242939969403   -0.748254846373   -0.329745608721
 H   -1.676939969403   -2.034254846373    0.786254391279
 H   -1.771129969403   -2.324884846373   -0.980055608721
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-030GLU-034ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030GLU-034ASP-1-dimer.npy', np.array(charges))