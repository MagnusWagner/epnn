import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.942974365226   -0.074276897157    0.423630057937
 C    2.080974365226    0.412723102843    2.881630057937
 S    0.727974365226   -0.518276897157    2.146630057937
 H    1.922974365226   -0.395276897157    0.069630057937
 H    0.173974365226   -0.567276897157   -0.170369942063
 H    0.851974365226    1.006723102843    0.308630057937
 H    1.885974365226    0.473723102843    3.951630057937
 H    2.082974365226    1.425723102843    2.477630057937
 H    3.059084365226   -0.059786897157    2.708304057937
 C   -1.450025634774    0.740723102843   -2.482369942063
 C   -2.656025634774   -0.057276897157   -1.981369942063
 C   -0.630025634774    0.067723102843   -3.543369942063
 H   -1.807025634774    1.700723102843   -2.847369942063
 H   -0.795025634774    0.938723102843   -1.635369942063
 H   -2.309025634774   -1.013276897157   -1.580369942063
 H   -0.214025634774   -0.853276897157   -3.131369942063
 H   -1.254025634774   -0.193276897157   -4.397369942063
 H   -3.366615634774   -0.233006897157   -2.802459942063
 H   -3.115535634774    0.514413102843   -1.161594942063
 H    0.176204365226    0.723013102843   -3.904759942063
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-021MET-062GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-021MET-062GLN-1-dimer.npy', np.array(charges))