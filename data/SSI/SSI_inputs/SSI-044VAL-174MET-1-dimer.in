import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.618968256188    2.675045018164    0.018477156789
 C   -1.314968256188    3.510045018164    1.080477156789
 H   -1.097968256188    2.824045018164   -0.948522843211
 H    0.427031743812    2.966045018164   -0.053522843211
 H   -0.657968256188    1.621045018164    0.285477156789
 H   -0.864968256188    3.252045018164    2.037477156789
 H   -2.394168256188    3.299905018164    1.114669156789
 H   -1.131438256188    4.580425018164    0.905545156789
 C    0.250031743812   -0.637954981836   -1.180522843211
 C    0.787031743812   -1.629954981836   -2.214522843211
 C    1.278031743812   -1.070954981836    1.393477156789
 S   -0.206968256188   -1.378954981836    0.400477156789
 H    0.989031743812    0.143045018164   -1.011522843211
 H   -0.636968256188   -0.166954981836   -1.602522843211
 H    1.063031743812   -1.080954981836   -3.114522843211
 H   -0.023968256188   -2.292954981836   -2.485522843211
 H    1.500031743812   -0.002954981836    1.402477156789
 H    1.102031743812   -1.405954981836    2.415477156789
 H    2.124031743812   -1.620954981836    0.990477156789
 H    1.629691743812   -2.259604981836   -1.892859843211
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-044VAL-174MET-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044VAL-174MET-1-dimer.npy', np.array(charges))