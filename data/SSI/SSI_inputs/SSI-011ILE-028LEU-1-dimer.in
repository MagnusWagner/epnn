import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.727559475136    1.329933023022   -1.121705459061
 C    0.008559475136    2.430933023022   -1.902705459061
 H    1.407559475136    0.781933023022   -1.775705459061
 H    1.295559475136    1.755933023022   -0.294705459061
 H    0.005559475136    0.642933023022   -0.688705459061
 H   -0.719440524864    2.892933023022   -1.235705459061
 H   -0.520300524864    1.995323023022   -2.763255459061
 H    0.698009475136    3.205853023022   -2.268975459061
 C   -0.678440524864   -1.542066976978    0.913294540939
 C   -0.055440524864   -2.217066976978    2.116294540939
 H   -0.928440524864   -0.508066976978    1.155294540939
 H    0.035559475136   -1.546066976978    0.088294540939
 H   -1.573440524864   -2.077066976978    0.596294540939
 H    0.923559475136   -1.786066976978    2.319294540939
 H   -0.706850524864   -2.110606976978    2.996254540939
 H    0.056019475136   -3.267656976978    1.809964540939
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-011ILE-028LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011ILE-028LEU-1-dimer.npy', np.array(charges))