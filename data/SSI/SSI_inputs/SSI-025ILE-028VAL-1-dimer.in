import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.555522825110    0.597280919678   -1.966060632791
 C   -0.625477174890    1.582280919678   -1.988060632791
 H    0.933522825110    0.424280919678   -2.975060632791
 H    1.360522825110    1.003280919678   -1.351060632791
 H    0.247522825110   -0.362719080322   -1.552060632791
 H   -0.918477174890    1.729280919678   -0.950060632791
 H   -1.477023174890    1.134210919678   -2.521070632791
 H   -0.366480174890    2.585890919678   -2.356410632791
 C   -0.124477174890   -0.773719080322    1.298939367209
 C    0.194522825110   -1.407719080322    2.646939367209
 H   -1.079477174890   -1.133719080322    0.913939367209
 H   -0.187477174890    0.311280919678    1.395939367209
 H    0.670522825110   -1.002719080322    0.588939367209
 H   -0.665477174890   -1.298719080322    3.304939367209
 H    0.425449825110   -2.473149080322    2.500179367209
 H    1.055783825110   -0.894859080322    3.099929367209
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-025ILE-028VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025ILE-028VAL-1-dimer.npy', np.array(charges))