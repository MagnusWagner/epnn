import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.675895127858   -1.443594758175   -0.193718952838
 C    0.749895127858   -2.783594758175   -0.943718952838
 C   -0.492104872142   -0.603594758175   -0.703718952838
 O   -1.620104872142   -0.706594758175   -0.195718952838
 N   -0.248104872142    0.218405241825   -1.695718952838
 H    0.542895127858   -1.618594758175    0.874281047162
 H    1.599895127858   -0.881594758175   -0.334718952838
 H    0.842895127858   -2.567594758175   -2.010718952838
 H   -1.013104872142    0.765405241825   -2.062718952838
 H    0.670895127858    0.277405241825   -2.107718952838
 H   -0.143384872142   -3.395225758175   -0.748898952838
 H    1.651175127858   -3.345174758175   -0.656788952838
 C    0.851895127858    2.004405241825    1.522281047162
 C    0.082895127858    3.127405241825    2.209281047162
 H    1.896895127858    2.038405241825    1.825281047162
 H    0.428895127858    1.043405241825    1.817281047162
 H    0.775895127858    2.085405241825    0.437281047162
 H   -0.939104872142    3.116405241825    1.828281047162
 H    0.540955127858    4.105274241825    1.999631047162
 H    0.057075127858    2.971784241825    3.297911047162
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-053ASN-131VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053ASN-131VAL-1-dimer.npy', np.array(charges))