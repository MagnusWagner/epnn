import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.041421341432   -0.891212643194   -1.109462433324
 C    2.016421341432   -1.563212643194   -2.091462433324
 H    0.182421341432   -1.534212643194   -0.924462433324
 H    1.551421341432   -0.695212643194   -0.164462433324
 H    0.691421341432    0.053787356806   -1.524462433324
 H    2.462421341432   -2.430212643194   -1.604462433324
 H    1.472811341432   -1.897744643194   -2.987322433324
 H    2.825451341432   -0.863052643194   -2.346902433324
 C   -1.683578658568    0.884787356806    0.949537566676
 C   -1.381578658568    1.566787356806    2.251537566676
 H   -2.223578658568    1.549787356806    0.275537566676
 H   -0.747578658568    0.612787356806    0.463537566676
 H   -2.268578658568   -0.021212643194    1.111537566676
 H   -0.814578658568    2.471787356806    2.032537566676
 H   -2.295856658568    1.863640356806    2.786307566676
 H   -0.748682658568    0.923799356806    2.880827566676
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-069VAL-114VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-069VAL-114VAL-1-dimer.npy', np.array(charges))