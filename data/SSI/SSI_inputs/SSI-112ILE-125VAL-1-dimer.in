import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.206975821263   -0.474529929731   -0.619261898207
 C   -2.758975821263   -0.290529929731   -0.751261898207
 H   -0.942975821263   -0.508529929731    0.428738101793
 H   -0.919975821263   -1.417529929731   -1.076261898207
 H   -0.672975821263    0.339470070269   -1.106261898207
 H   -3.248975821263   -1.095529929731   -0.202261898207
 H   -3.024975821263   -0.430529929731   -1.800261898207
 H   -3.157575821263    0.678010070269   -0.415032898207
 C    1.902024178737   -0.371529929731    0.791738101793
 C    2.074024178737    1.144470070269    0.587738101793
 H    0.977024178737   -0.595529929731    1.314738101793
 H    1.901024178737   -0.864529929731   -0.180261898207
 H    2.729024178737   -0.765529929731    1.382738101793
 H    1.400024178737    1.435470070269   -0.216261898207
 H    1.750434178737    1.696060070269    1.482745101793
 H    3.089704178737    1.434870070269    0.281050101793
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-112ILE-125VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-112ILE-125VAL-1-dimer.npy', np.array(charges))