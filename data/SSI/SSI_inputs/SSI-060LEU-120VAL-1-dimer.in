import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.899197898191    0.665312603735    1.710763237340
 C   -1.035197898191    1.274312603735    2.799763237340
 H   -2.748197898191    0.148312603735    2.158763237340
 H   -2.270197898191    1.449312603735    1.048763237340
 H   -1.326197898191   -0.048687396265    1.126763237340
 H   -0.244197898191    1.840312603735    2.308763237340
 H   -0.586519398191    0.473872603735    3.406373237340
 H   -1.637027398191    1.968672603735    3.404463237340
 C    0.632802101809   -0.204687396265   -0.980236762660
 C    1.782802101809    0.250312603735   -1.887236762660
 C   -0.507197898191   -0.790687396265   -1.810236762660
 C    1.115802101809   -1.219687396265    0.038763237340
 H    0.248802101809    0.661312603735   -0.441236762660
 H    2.116802101809   -0.621687396265   -2.444236762660
 H   -0.136197898191   -1.612687396265   -2.425236762660
 H   -1.287197898191   -1.166687396265   -1.146236762660
 H   -0.954197898191   -0.031687396265   -2.450236762660
 H    1.767802101809   -0.742687396265    0.768763237340
 H    0.270802101809   -1.650687396265    0.575763237340
 H    1.651802101809   -2.027687396265   -0.460236762660
 H    2.618703101809    0.649732603735   -1.294166762660
 H    1.445835101809    1.010122603735   -2.607746762660
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-060LEU-120VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-060LEU-120VAL-1-dimer.npy', np.array(charges))