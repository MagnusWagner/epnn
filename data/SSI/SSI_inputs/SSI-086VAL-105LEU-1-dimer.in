import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.484914035561    0.851725833223    1.428932576423
 C   -2.716914035561    0.806725833223    0.501932576423
 H   -0.946914035561   -0.091274166777    1.350932576423
 H   -0.812914035561    1.650725833223    1.113932576423
 H   -1.794914035561    1.025725833223    2.460932576423
 H   -2.372914035561    0.538725833223   -0.487067423577
 H   -3.475534035561    0.087285833223    0.843844576423
 H   -3.170884035561    1.805316833223    0.419915576423
 C    1.450085964439   -0.653274166777   -0.592067423577
 C    2.751085964439   -1.005274166777   -1.329067423577
 H    1.670085964439   -0.067274166777    0.300932576423
 H    0.814085964439   -0.062274166777   -1.250067423577
 H    0.916085964439   -1.559274166777   -0.311067423577
 H    2.495085964439   -1.611274166777   -2.197067423577
 H    3.395570964439   -1.592584166777   -0.658464423577
 H    3.290971964439   -0.122674166777   -1.702613423577
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-086VAL-105LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-086VAL-105LEU-1-dimer.npy', np.array(charges))