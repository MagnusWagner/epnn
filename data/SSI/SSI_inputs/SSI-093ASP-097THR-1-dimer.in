import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    1.452688619791   -1.690859119263   -2.604339370883
 C    0.776688619791   -1.232859119263   -1.323339370883
 O   -0.410311380209   -1.443859119263   -1.137339370883
 O    1.462688619791   -0.547859119263   -0.532339370883
 H    2.172688619791   -2.472859119263   -2.359339370883
 H    2.022688619791   -0.856859119263   -3.018339370883
 H    0.763478619791   -2.058729119263   -3.378719370883
 C   -0.797311380209    1.226140880737    1.009660629117
 C   -2.199311380209    0.763140880737    1.315660629117
 C   -0.493311380209    2.612140880737    1.609660629117
 O    0.139688619791    0.316140880737    1.577660629117
 H   -0.642311380209    1.261140880737   -0.069339370883
 H   -2.341311380209    0.727140880737    2.395660629117
 H   -0.709311380209    2.617140880737    2.678660629117
 H    0.560688619791    2.850140880737    1.457660629117
 H   -1.086311380209    3.380140880737    1.114660629117
 H    0.595688619791   -0.073859119263    0.794660629117
 H   -2.344331380209   -0.239949119263    0.888130629117
 H   -2.901371380209    1.483040880737    0.869740629117
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-093ASP-097THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-093ASP-097THR-1-dimer.npy', np.array(charges))