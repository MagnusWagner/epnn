import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.691709407616   -2.313693298388   -0.850869178978
 O    1.951709407616   -0.938693298388   -0.624869178978
 H    2.895709407616   -0.738693298388   -0.798869178978
 H    0.770709407616   -2.575693298388   -0.326869178978
 H    2.503709407616   -2.918693298388   -0.442869178978
 H    1.571859407616   -2.521093298388   -1.924469178978
 C   -0.669290592384   -0.096693298388    1.436130821022
 C   -0.979290592384    0.897306701612    0.333130821022
 O   -0.302290592384    0.937306701612   -0.691869178978
 N   -2.007290592384    1.712306701612    0.521130821022
 H    0.410709407616   -0.197693298388    1.535130821022
 H   -1.073290592384   -1.058693298388    1.117130821022
 H   -2.218290592384    2.377306701612   -0.209869178978
 H   -2.545290592384    1.707306701612    1.368130821022
 H   -1.116820592384    0.172546701612    2.404230821022
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-100SER-148ASN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-100SER-148ASN-1-dimer.npy', np.array(charges))