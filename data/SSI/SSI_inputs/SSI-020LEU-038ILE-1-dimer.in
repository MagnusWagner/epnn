import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.119855971113   -0.213369400211   -1.979202071820
 C   -1.299855971113    0.086630599789   -2.852202071820
 H    0.229144028887   -1.202369400211   -2.222202071820
 H    0.667144028887    0.531630599789   -2.101202071820
 H   -0.451855971113   -0.223369400211   -0.943202071820
 H   -1.944855971113    0.776630599789   -2.309202071820
 H   -1.882695971113   -0.809399400211   -3.111878071820
 H   -1.003845971113    0.569900599789   -3.794977071820
 C    0.349144028887   -0.167369400211    1.779797928180
 C    1.083144028887    0.290630599789    3.050797928180
 H    0.444144028887   -1.243369400211    1.668797928180
 H   -0.706855971113    0.094630599789    1.829797928180
 H    0.762144028887    0.334630599789    0.904797928180
 H    1.059144028887    1.380630599789    3.097797928180
 H    2.128704028887   -0.050649400211    3.069017928180
 H    0.549944028887   -0.117489400211    3.922077928180
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-020LEU-038ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-020LEU-038ILE-1-dimer.npy', np.array(charges))