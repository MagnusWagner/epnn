import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.919399185396   -0.283156718299   -2.635117894320
 C   -1.968399185396   -0.477156718299   -1.119117894320
 O   -1.287399185396   -1.322156718299   -0.537117894320
 N   -2.646399185396    0.439843281701   -0.448117894320
 H   -2.888399185396    0.061843281701   -3.000117894320
 H   -1.692399185396   -1.242156718299   -3.100117894320
 H   -2.670399185396    0.370843281701    0.557882105680
 H   -3.193399185396    1.130843281701   -0.937117894320
 H   -1.141499185396    0.454523281701   -2.881489894320
 C    0.404600814604    1.909843281701    1.981882105680
 C    1.463600814604    0.821843281701   -0.123117894320
 C    1.089600814604    0.832843281701    1.176882105680
 C    2.042600814604   -1.118156718299    0.741882105680
 N    2.040600814604   -0.405156718299   -0.370117894320
 N    1.460600814604   -0.403156718299    1.706882105680
 H    1.330600814604    1.628843281701   -0.830117894320
 H    2.433600814604   -0.728156718299   -1.255117894320
 H   -0.496399185396    1.480843281701    2.420882105680
 H    0.121600814604    2.709843281701    1.304882105680
 H    2.440600814604   -2.123156718299    0.840882105680
 H    1.063530814604    2.283503281701    2.779497105680
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-026GLN-065HIE-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-026GLN-065HIE-2-dimer.npy', np.array(charges))