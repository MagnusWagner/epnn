import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.554517593076   -1.607960596684    0.774822572224
 C   -0.336517593076   -2.521960596684    1.991822572224
 H   -1.617517593076   -1.536960596684    0.541822572224
 H   -0.199517593076   -0.606960596684    1.013822572224
 H   -0.003517593076   -1.988960596684   -0.085177427776
 H   -0.998517593076   -2.200960596684    2.789822572224
 H   -0.548967593076   -3.571160596684    1.738762572224
 H    0.697722406924   -2.459450596684    2.361192572224
 C   -0.106517593076    1.519039403316   -1.391177427776
 C    0.991482406924    2.614039403316   -1.385177427776
 H   -0.345517593076    1.232039403316   -2.416177427776
 H    0.260482406924    0.643039403316   -0.861177427776
 H   -1.006517593076    1.889039403316   -0.900177427776
 H    1.881482406924    2.211039403316   -1.869177427776
 H    1.230482406924    2.782039403316   -0.339177427776
 H    0.722182406924    3.569659403316   -1.858746427776
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-195LEU-237ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-195LEU-237ILE-1-dimer.npy', np.array(charges))