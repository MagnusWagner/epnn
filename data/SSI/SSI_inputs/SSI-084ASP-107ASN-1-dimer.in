import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    1.869624377445   -1.230803461299   -2.293080222354
 C    0.548624377445   -0.460803461299   -2.313080222354
 O   -0.213375622555   -0.499803461299   -1.317080222354
 O    0.274624377445    0.207196538701   -3.332080222354
 H    2.498624377445   -0.909803461299   -3.126080222354
 H    1.657624377445   -2.292803461299   -2.420080222354
 H    2.417024377445   -1.098993461299   -1.348101222354
 C   -0.483375622555    1.373196538701    3.450919777646
 C   -0.668375622555    0.437196538701    2.287919777646
 O   -1.699375622555   -0.215803461299    2.157919777646
 N    0.311624377445    0.389196538701    1.408919777646
 H    0.136624377445   -0.092803461299    0.526919777646
 H    1.176624377445    0.880196538701    1.582919777646
 H    0.563624377445    1.669196538701    3.531919777646
 H   -0.739375622555    0.827196538701    4.360919777646
 H   -1.122295622555    2.264656538701    3.366738777646
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-084ASP-107ASN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-084ASP-107ASN-1-dimer.npy', np.array(charges))