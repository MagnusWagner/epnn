import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.110630907045    2.221028229393    2.192407046425
 C    2.549630907045    1.972028229393    1.784407046425
 H    0.959630907045    3.281028229393    2.400407046425
 H    0.434630907045    1.932028229393    1.390407046425
 H    0.862630907045    1.638028229393    3.079407046425
 H    2.688630907045    0.895028229393    1.699407046425
 H    3.260560907045    2.370408229393    2.523237046425
 H    2.775280907045    2.418338229393    0.804667046425
 C    0.147630907045   -0.269971770607   -0.219592953575
 C   -2.386369092955   -1.058971770607   -0.926592953575
 S   -0.650369092955   -1.371971770607   -1.357592953575
 H   -0.032369092955   -0.587971770607    0.806407046425
 H    1.221630907045   -0.277971770607   -0.403592953575
 H   -0.234369092955    0.739028229393   -0.367592953575
 H   -3.002369092955   -1.553971770607   -1.673592953575
 H   -2.582369092955    0.012028229393   -0.965592953575
 H   -2.645159092955   -1.444301770607    0.070677046425
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-115VAL-122MET-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-115VAL-122MET-1-dimer.npy', np.array(charges))