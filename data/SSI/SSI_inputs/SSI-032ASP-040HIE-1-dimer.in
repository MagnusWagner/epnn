import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.407730648121   -0.851242036026   -1.680045592607
 C   -0.282730648121   -1.645242036026   -2.971045592607
 C   -0.924730648121    0.533757963974   -1.927045592607
 O   -0.192730648121    1.459757963974   -2.287045592607
 O   -2.118730648121    0.686757963974   -1.727045592607
 H   -1.074730648121   -1.383242036026   -0.996045592607
 H    0.569269351879   -0.791242036026   -1.197045592607
 H   -1.248730648121   -1.630242036026   -3.480045592607
 H   -0.010422648121   -2.682422036026   -2.725895592607
 H    0.481556351879   -1.203252036026   -3.627175592607
 C    2.365269351879   -1.491242036026    1.920954407393
 C   -0.134730648121   -0.762242036026    2.148954407393
 C    1.202269351879   -0.547242036026    1.919954407393
 C    0.171269351879    1.375757963974    1.687954407393
 N   -0.760730648121    0.468757963974    2.001954407393
 N    1.383269351879    0.803757963974    1.660954407393
 H   -0.617730648121   -1.693242036026    2.403954407393
 H   -1.758730648121    0.659757963974    2.078954407393
 H    3.075269351879   -1.136242036026    2.667954407393
 H    2.856269351879   -1.437242036026    0.947954407393
 H   -0.029730648121    2.423757963974    1.498954407393
 H    2.111190351879   -2.537242036026    2.147526407393
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-032ASP-040HIE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032ASP-040HIE-1-dimer.npy', np.array(charges))