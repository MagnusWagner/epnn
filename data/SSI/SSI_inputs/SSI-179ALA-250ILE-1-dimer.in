import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.132535775069   -1.043751349818    1.182695601150
 C   -0.164535775069   -2.181751349818    2.223695601150
 H   -1.106535775069   -0.581751349818    1.138695601150
 H    0.597464224931   -0.286751349818    1.461695601150
 H    0.105464224931   -1.451751349818    0.201695601150
 H    0.788464224931   -2.702751349818    2.114695601150
 H   -0.998585775069   -2.865931349818    2.008625601150
 H   -0.186025775069   -1.792141349818    3.252155601150
 C    0.015464224931    0.913248650182   -2.035304398850
 C    0.280464224931    2.315248650182   -1.369304398850
 H    0.876464224931    0.259248650182   -1.916304398850
 H   -0.841535775069    0.447248650182   -1.549304398850
 H   -0.194535775069    1.027248650182   -3.097304398850
 H    0.686464224931    2.175248650182   -0.366304398850
 H   -0.676535775069    2.815248650182   -1.286304398850
 H    0.963044224931    2.921178650182   -1.983264398850
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-179ALA-250ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-179ALA-250ILE-1-dimer.npy', np.array(charges))