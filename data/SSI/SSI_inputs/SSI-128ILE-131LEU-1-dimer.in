import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.176389525216    1.296608057378   -0.763271872045
 C    1.733389525216    1.867608057378   -2.080271872045
 H    1.319389525216    2.004608057378    0.055728127955
 H    0.111389525216    1.086608057378   -0.865271872045
 H    1.660389525216    0.351608057378   -0.514271872045
 H    1.685389525216    1.119608057378   -2.873271872045
 H    2.772639525216    2.187710057378   -1.914478872045
 H    1.154189525216    2.761632057378   -2.354590872045
 C   -0.867610474784   -1.334391942622    0.988728127955
 C   -2.038610474784   -1.828391942622    1.853728127955
 H   -0.085610474784   -2.094391942622    0.950728127955
 H   -1.224610474784   -1.139391942622   -0.021271872045
 H   -0.461610474784   -0.407391942622    1.392728127955
 H   -2.478610474784   -2.692391942622    1.356728127955
 H   -1.680320474784   -2.139631942622    2.846078127955
 H   -2.814990474784   -1.055627942622    1.954115127955
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-128ILE-131LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-128ILE-131LEU-1-dimer.npy', np.array(charges))