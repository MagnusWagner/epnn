import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
1 1 
 C    0.190258501535    0.930968966452   -1.577254920667
 C    1.658258501535    0.549968966452   -1.342254920667
 N   -0.710741498465   -0.145031033548   -1.126254920667
 H   -0.023741498465    1.850968966452   -1.021254920667
 H    0.034258501535    1.127968966452   -2.644254920667
 H    1.846258501535   -0.438031033548   -1.760254920667
 H    1.834258501535    0.508968966452   -0.272254920667
 H   -0.468741498465   -0.444031033548   -0.187254920667
 H   -1.667741498465    0.188968966452   -1.061254920667
 H   -0.654741498465   -0.950031033548   -1.748254920667
 H    2.369888501535    1.263058966452   -1.783934920667
 C   -0.906741498465   -1.016031033548    2.321745079333
 O   -0.127741498465   -0.179031033548    1.498745079333
 H    0.782258501535   -0.055031033548    1.878745079333
 H   -0.348741498465   -1.923031033548    2.557745079333
 H   -1.804741498465   -1.297031033548    1.770745079333
 H   -1.209391498465   -0.511851033548    3.251375079333
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-226LYS-262SER-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-226LYS-262SER-1-dimer.npy', np.array(charges))