import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.638688730385    1.500183313404   -0.492197425362
 C   -1.727688730385    2.527183313404   -0.220197425362
 H   -1.045688730385    0.503183313404   -0.340197425362
 H   -0.319688730385    1.598183313404   -1.521197425362
 H    0.233311269615    1.653183313404    0.139802574638
 H   -1.303688730385    3.519183313404   -0.386197425362
 H   -2.087548730385    2.459803313404    0.817092574638
 H   -2.562644730385    2.386463313404   -0.922367425362
 C    0.881311269615   -1.415816686596    0.041802574638
 C    1.487311269615   -2.613816686596    0.681802574638
 H    1.588311269615   -0.910816686596   -0.617197425362
 H    0.043311269615   -1.731816686596   -0.574197425362
 H    0.523311269615   -0.721816686596    0.799802574638
 H    1.901311269615   -3.253816686596   -0.097197425362
 H    2.298215269615   -2.299386686596    1.355272574638
 H    0.704756269615   -3.175356686596    1.213102574638
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-061VAL-066VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061VAL-066VAL-1-dimer.npy', np.array(charges))