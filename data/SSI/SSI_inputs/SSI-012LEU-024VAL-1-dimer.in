import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.353493336231   -1.078389692924    1.204344587523
 C   -0.243493336231   -1.694389692924    2.602344587523
 H   -1.391493336231   -1.056389692924    0.870344587523
 H   -0.000493336231   -0.046389692924    1.239344587523
 H    0.260506663769   -1.636389692924    0.498344587523
 H   -0.997493336231   -1.249389692924    3.249344587523
 H   -0.391240336231   -2.783129692924    2.549274587523
 H    0.747134663769   -1.471589692924    3.025444587523
 C   -0.044493336231    1.666610307076   -1.289655412477
 C    0.643506663769    1.102610307076   -2.516655412477
 H   -0.605493336231    2.559610307076   -1.550655412477
 H   -0.744493336231    0.932610307076   -0.890655412477
 H    0.699506663769    1.909610307076   -0.531655412477
 H   -0.118493336231    0.855610307076   -3.251655412477
 H    1.327643663769    1.844060307076   -2.955075412477
 H    1.190277663769    0.184150307076   -2.256905412477
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-012LEU-024VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012LEU-024VAL-1-dimer.npy', np.array(charges))