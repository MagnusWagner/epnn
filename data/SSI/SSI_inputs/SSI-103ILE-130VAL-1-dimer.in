import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.008815635311   -1.842293140340   -0.695605648124
 C    0.526815635311   -2.799293140340    0.400394351876
 H    1.212815635311   -2.393293140340   -1.616605648124
 H    0.256815635311   -1.082293140340   -0.903605648124
 H    1.905815635311   -1.312293140340   -0.381605648124
 H    0.434815635311   -2.236293140340    1.329394351876
 H    1.250535635311   -3.615886140340    0.539708351876
 H   -0.455084364689   -3.222968140340    0.142754351876
 C   -0.561184364689    1.585706859660    0.096394351876
 C   -0.976184364689    3.053706859660    0.195394351876
 H    0.016815635311    1.402706859660   -0.809605648124
 H    0.068815635311    1.331706859660    0.949394351876
 H   -1.439184364689    0.939706859660    0.104394351876
 H   -1.422184364689    3.209706859660    1.177394351876
 H   -1.711104364689    3.296278859660   -0.586307648124
 H   -0.098184364689    3.708788859660    0.095442351876
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-103ILE-130VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-103ILE-130VAL-1-dimer.npy', np.array(charges))