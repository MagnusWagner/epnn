import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.728002421729   -0.637049272285   -1.144101612669
 C    1.104002421729   -2.058049272285   -1.651101612669
 C   -0.061997578271    0.311950727715   -2.099101612669
 H    0.122002421729   -0.777049272285   -0.252101612669
 H    1.632002421729   -0.122049272285   -0.836101612669
 H    1.728002421729   -1.958049272285   -2.540101612669
 H   -0.941997578271   -0.217049272285   -2.463101612669
 H   -0.423997578271    1.171950727715   -1.546101612669
 H    0.178182421729   -2.600319272285   -1.893579612669
 H    1.707822421729   -2.614049272285   -0.918805612669
 H    0.529542421729    0.638370727715   -2.967165612669
 C   -0.627997578271    0.580950727715    1.941898387331
 C   -1.088997578271    1.759950727715    2.867898387331
 H    0.454002421729    0.610950727715    1.800898387331
 H   -0.911997578271   -0.383049272285    2.360898387331
 H   -1.125997578271    0.656950727715    0.974898387331
 H   -2.174997578271    1.726950727715    2.973898387331
 H   -0.790927578271    2.737700727715    2.461504387331
 H   -0.612847578271    1.631760727715    3.851183997331
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-169LYS-291ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-169LYS-291ILE-1-dimer.npy', np.array(charges))