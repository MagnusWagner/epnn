import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.804531102198    0.998455826697    1.294129059471
 C   -2.370531102198    2.196455826697    2.036129059471
 H   -1.706531102198    1.222455826697    0.230129059471
 H   -0.826531102198    0.740455826697    1.700129059471
 H   -2.451531102198    0.130455826697    1.419129059471
 H   -2.515531102198    1.942455826697    3.085129059471
 H   -3.328751102198    2.522895826697    1.605729059471
 H   -1.623391102198    2.999565826697    1.953719059471
 C    0.515468897802    0.557455826697   -2.483870940529
 C    0.310468897802   -1.642544173303    0.398129059471
 C    0.724468897802   -0.227544173303   -1.223870940529
 C    1.700468897802   -0.093544173303   -0.285870940529
 N   -0.164531102198   -1.175544173303   -0.758870940529
 N    1.435468897802   -0.997544173303    0.711129059471
 H   -0.142531102198   -2.429544173303    0.990129059471
 H    2.015468897802   -1.187544173303    1.521129059471
 H    2.531468897802    0.593455826697   -0.324870940529
 H    1.304468897802    1.304455826697   -2.542870940529
 H   -0.432531102198    1.090455826697   -2.404870940529
 H    0.521198897802   -0.034074173303   -3.411270940529
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-062THR-102HIE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-062THR-102HIE-1-dimer.npy', np.array(charges))