import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.596654593579   -0.865821771033   -1.189261379715
 C    1.530654593579   -2.224821771033   -0.384261379715
 H    0.680654593579   -0.715821771033   -1.760261379715
 H    1.713654593579   -0.026821771033   -0.502261379715
 H    2.437654593579   -0.866821771033   -1.875261379715
 H    0.685654593579   -2.196821771033    0.304738620285
 H    2.447654593579   -2.352821771033    0.193738620285
 H    1.411774593579   -3.126521771033   -1.003031379715
 C   -0.955345406421    1.074178228967    0.710738620285
 C   -2.171345406421    2.013178228967    0.853738620285
 H   -1.175345406421    0.290178228967   -0.015261379715
 H   -0.090345406421    1.638178228967    0.377738620285
 H   -0.719345406421    0.619178228967    1.673738620285
 H   -1.943345406421    2.789178228967    1.584738620285
 H   -3.039497406421    1.433978228967    1.201288620285
 H   -2.416531406421    2.554078228967   -0.072201379715
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-101ILE-123ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-101ILE-123ILE-1-dimer.npy', np.array(charges))