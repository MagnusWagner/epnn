import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.058377251368    0.356321348421   -1.352848237819
 C    0.336377251368    0.395321348421   -2.848848237819
 H    0.896377251368   -0.090678651579   -0.820848237819
 H   -0.077622748632    1.365321348421   -0.978848237819
 H   -0.845622748632   -0.219678651579   -1.167848237819
 H    1.268377251368    0.936321348421   -3.008848237819
 H    0.451153251368   -0.628338651579   -3.234783237819
 H   -0.471495748632    0.923574348421   -3.376380237819
 C   -0.945622748632   -0.451678651579    1.957151762181
 C    0.549377251368   -0.303678651579    2.246151762181
 H   -1.515622748632   -0.002678651579    2.760151762181
 H   -1.203622748632    0.069321348421    1.039151762181
 H   -1.210622748632   -1.504678651579    1.856151762181
 H    1.091377251368   -0.723678651579    1.401151762181
 H    0.828770251368   -0.841634651579    3.164051762181
 H    0.806307251368    0.761057348421    2.347762762181
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-006VAL-026LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-006VAL-026LEU-1-dimer.npy', np.array(charges))