import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.727200145579    1.149229997669    1.025818073297
 C   -1.093200145579    1.969229997669    2.254818073297
 H   -1.127200145579    0.137229997669    1.110818073297
 H   -1.141200145579    1.621229997669    0.132818073297
 H    0.355799854421    1.109229997669    0.912818073297
 H   -0.610200145579    2.946229997669    2.196818073297
 H   -0.771850145579    1.447209997669    3.168178073297
 H   -2.183710145579    2.112979997669    2.265638073297
 C    0.470799854421   -1.156770002331   -1.166181926703
 C    1.353799854421   -1.965770002331   -2.108181926703
 H    1.081799854421   -0.692770002331   -0.392181926703
 H   -0.043200145579   -0.375770002331   -1.727181926703
 H   -0.294200145579   -1.786770002331   -0.715181926703
 H    0.719799854421   -2.575770002331   -2.754181926703
 H    2.029029854421   -2.617320002331   -1.534121926703
 H    1.935129854421   -1.277130002331   -2.738921926703
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-050THR-143THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-050THR-143THR-1-dimer.npy', np.array(charges))