import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.549029436597    1.789199510833   -0.153117354375
 C    0.328970563403    3.011199510833   -0.380117354375
 C   -1.448029436597    1.521199510833   -1.357117354375
 H    0.125970563403    0.944199510833   -0.030117354375
 H   -1.145029436597    1.910199510833    0.752882645625
 H    0.834970563403    2.907199510833   -1.339117354375
 H    1.082970563403    3.052199510833    0.405882645625
 H   -2.160029436597    2.345199510833   -1.471117354375
 H   -0.825029436597    1.500199510833   -2.260117354375
 H   -0.255019436597    3.942709510833   -0.344787354375
 H   -1.978149436597    0.562849510833   -1.254487354375
 C    0.238970563403   -1.750800489167    1.031882645625
 C    1.648970563403   -2.322800489167    1.190882645625
 O   -0.235029436597   -1.930800489167   -0.292117354375
 H   -0.432029436597   -2.263800489167    1.722882645625
 H    0.243970563403   -0.695800489167    1.293882645625
 H    1.601970563403   -3.396800489167    0.996882645625
 H   -0.324029436597   -2.882800489167   -0.467117354375
 H    2.006920563403   -2.167990489167    2.219422645625
 H    2.334880563403   -1.880880489167    0.453152645625
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-091LYS-140SER-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-091LYS-140SER-1-dimer.npy', np.array(charges))