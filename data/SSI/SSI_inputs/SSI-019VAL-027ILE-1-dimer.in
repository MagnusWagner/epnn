import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.508311990761   -1.626445151210    1.207850670059
 C   -1.003688009239   -1.425445151210    1.463850670059
 H    0.660311990761   -2.136445151210    0.257850670059
 H    0.997311990761   -0.655445151210    1.169850670059
 H    0.963311990761   -2.208445151210    2.008850670059
 H   -1.408688009239   -0.815445151210    0.656850670059
 H   -1.535918009239   -2.387585151210    1.495830670059
 H   -1.172398009239   -0.849985151210    2.386010670059
 C    0.602311990761    0.862554848790   -1.452149329941
 C   -0.104688009239    2.186554848790   -1.215149329941
 H    1.315311990761    0.661554848790   -0.656149329941
 H   -0.124688009239    0.052554848790   -1.488149329941
 H    1.137311990761    0.894554848790   -2.401149329941
 H   -0.724688009239    2.115554848790   -0.321149329941
 H   -0.757688009239    2.360554848790   -2.068149329941
 H    0.623741990761    3.001684848790   -1.092919329941
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-019VAL-027ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019VAL-027ILE-1-dimer.npy', np.array(charges))