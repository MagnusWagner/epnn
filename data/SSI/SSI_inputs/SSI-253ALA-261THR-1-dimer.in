import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.665001509375    1.673038801972    0.634536949028
 C    0.811001509375    2.253038801971   -0.810463050972
 H    1.422001509375    2.091038801972    1.290536949028
 H   -0.322998490625    1.904038801972    1.035536949028
 H    0.798001509375    0.626038801972    0.632536949028
 H    0.037001509375    1.818038801972   -1.446463050972
 H    1.805491509375    2.057238801972   -1.237853050972
 H    0.654431509375    3.341838801972   -0.809023050972
 C   -0.507998490625   -1.395961198028   -0.365463050972
 C   -0.967998490625   -2.531961198028    0.542536949028
 H   -1.240998490625   -0.588961198028   -0.351463050972
 H    0.448001509375   -1.057961198028   -0.027463050972
 H   -0.386998490625   -1.757961198028   -1.382463050972
 H   -0.220998490625   -3.326961198028    0.522536949028
 H   -1.931098490625   -2.927361198028    0.187486949028
 H   -1.061908490625   -2.157061198028    1.572426949028
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-253ALA-261THR-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-253ALA-261THR-1-dimer.npy', np.array(charges))