import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.031892773488   -2.338108429756    1.460509098468
 C    0.244892773488   -1.377108429756    0.307509098468
 O   -0.353107226512   -0.280108429756    0.333509098468
 O    0.985892773488   -1.746108429756   -0.619490901532
 H    0.608892773488   -3.257108429756    1.325509098468
 H   -1.023107226512   -2.620108429756    1.479509098468
 H    0.282982773488   -1.895978429756    2.435944098468
 C   -0.900107226512    3.202891570244   -0.961490901532
 N    0.009892773488    2.154891570244   -0.436490901532
 H   -0.466107226512    1.280891570244   -0.226490901532
 H    0.739892773488    1.930891570244   -1.115490901532
 H    0.474892773488    2.456891570244    0.412509098468
 H   -1.489107226512    2.802891570244   -1.793490901532
 H   -0.309107226512    4.042891570244   -1.338490901532
 H   -1.577667226512    3.575620570244   -0.179193901532
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-106GLU-129LYS-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-106GLU-129LYS-1-dimer.npy', np.array(charges))