import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.388491904964    0.378980137582   -0.941170111882
 C   -1.452491904964   -0.258019862418   -2.349170111882
 H   -1.232491904964   -0.395019862418   -0.187170111882
 H   -0.563491904964    1.085980137582   -0.896170111882
 H   -2.307491904964    0.922980137582   -0.722170111882
 H   -1.750491904964    0.512980137582   -3.050170111882
 H   -2.177171904964   -1.084787862418   -2.385116111882
 H   -0.469791904964   -0.634817862418   -2.669052111882
 C    1.451508095036   -0.778019862418    1.391829888118
 C    1.393508095036    0.654980137582    1.901829888118
 H    2.336508095036   -1.282019862418    1.783829888118
 H    0.563508095036   -1.319019862418    1.723829888118
 H    1.465508095036   -0.803019862418    0.301829888118
 H    0.562508095036    1.150980137582    1.402829888118
 H    2.323898095036    1.195505137582    1.673337888118
 H    1.200988095036    0.675019137582    2.984665888118
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-058LEU-071VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-058LEU-071VAL-1-dimer.npy', np.array(charges))