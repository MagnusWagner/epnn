import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.404704470517    1.071364024456   -0.904424371675
 C    2.767704470517    0.821364024456   -0.262424371675
 H    1.085704470517    0.193364024456   -1.468424371675
 H    0.682704470517    1.285364024456   -0.117424371675
 H    1.432704470517    1.941364024456   -1.559424371675
 H    3.055704470517    1.718364024456    0.283575628325
 H    3.540237470517    0.570523024456   -1.004224371675
 H    2.688973470517   -0.013894975544    0.449015628325
 C   -1.666295529483   -0.330635975544    0.743575628325
 C   -2.499295529483   -1.567635975544    0.426575628325
 H   -0.993295529483   -0.515635975544    1.582575628325
 H   -1.087295529483   -0.071635975544   -0.140424371675
 H   -2.305295529483    0.522364024456    0.975575628325
 H   -3.251295529483   -1.261635975544   -0.303424371675
 H   -3.032435529483   -1.945784975544    1.311315628325
 H   -1.897590529483   -2.356744975544   -0.048034371675
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-023VAL-041ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-023VAL-041ILE-1-dimer.npy', np.array(charges))