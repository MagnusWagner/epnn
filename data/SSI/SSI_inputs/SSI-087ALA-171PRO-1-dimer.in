import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    2.022981743471    0.667121033510    0.296680483089
 C    2.762981743471    1.996121033510    0.409680483089
 H    1.543981743471    0.579121033510   -0.681319516911
 H    2.717981743471   -0.163878966490    0.435680483089
 H    1.280981743471    0.647121033510    1.092680483089
 H    3.133981743471    2.098121033510    1.430680483089
 H    2.069181743471    2.824015033510    0.201765483089
 H    3.637591743471    1.996121033510   -0.257444516911
 C   -1.109018256529   -1.141878966490    0.060680483089
 C   -1.357018256529   -0.954878966490   -1.422319516911
 C   -2.387018256529   -0.652878966490    0.674680483089
 H   -0.283018256529   -0.531878966490    0.383680483089
 H   -0.942018256529   -2.198878966490    0.251680483089
 H   -0.422018256529   -0.771878966490   -1.952319516911
 H   -1.872018256529   -1.824878966490   -1.834319516911
 H   -2.371018256529   -0.434878966490    1.720680483089
 H   -3.077018256529   -1.367878966490    0.342680483089
 H   -2.019328256529   -0.077298966490   -1.456822516911
 H   -2.598418256529    0.255641033510    0.091675483089
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-087ALA-171PRO-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-087ALA-171PRO-1-dimer.npy', np.array(charges))