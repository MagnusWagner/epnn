import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.865675094876   -1.470347391104   -1.267235366621
 C   -1.106675094876   -0.206347391104   -2.016235366621
 O   -1.557675094876   -0.243347391104   -3.171235366621
 N   -0.785675094876    0.912652608896   -1.398235366621
 H   -0.963675094876    1.790652608896   -1.858235366621
 H   -0.427675094876    0.881652608896   -0.442235366621
 H   -1.576675094876   -2.207347391104   -1.631235366621
 H   -1.062675094876   -1.333347391104   -0.211235366621
 H    0.178124905124   -1.798169391104   -1.381355366621
 C    2.020324905124    0.762652608896    2.860764633379
 C    1.034324905124    0.197652608896    1.889764633379
 O    0.155324905124    0.986652608896    1.405764633379
 O    1.100324905124   -1.010347391104    1.638764633379
 H    1.543324905124    0.705652608896    3.841764633379
 H    2.161324905124    1.829652608896    2.690764633379
 H    2.970974905124    0.218619608896    2.962242633379
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-051GLN-089GLU-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051GLN-089GLU-2-dimer.npy', np.array(charges))