import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.969977641607   -1.590889386382   -1.494892938462
 C    2.089977641607   -2.586889386382   -1.250892938462
 H    1.367977641607   -0.666889386382   -1.913892938462
 H    0.248977641607   -2.018889386382   -2.192892938462
 H    0.448977641607   -1.374889386382   -0.562892938462
 H    1.686977641607   -3.441889386382   -0.706892938462
 H    2.900960641607   -2.120179386382   -0.672544938462
 H    2.471785641607   -2.931449386382   -2.223261938462
 C    0.177977641607    2.133110613618    0.952107061538
 C   -0.819022358393    1.005110613618    0.749107061538
 O   -1.012022358393    0.131110613618    1.591107061538
 N   -1.430022358393    0.986110613618   -0.413892938462
 H   -0.238022358393    3.061110613618    0.556107061538
 H    1.068977641607    1.893110613618    0.373107061538
 H   -2.094022358393    0.250110613618   -0.603892938462
 H   -1.174022358393    1.659110613618   -1.125892938462
 H    0.440639641607    2.286390613618    2.009237061538
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-083THR-087GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083THR-087GLN-1-dimer.npy', np.array(charges))