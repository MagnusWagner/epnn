import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-2 1 
 C    0.680965495654    3.178486696955    1.641322019912
 C   -0.061034504346    1.851486696955    1.669322019912
 O    0.253965495654    1.019486696955    0.796322019912
 O   -0.944034504346    1.659486696955    2.529322019912
 H    0.558965495654    3.587486696955    0.636322019912
 H    1.747965495654    3.041486696955    1.788322019912
 H    0.297861495654    3.918246696955    2.359642019912
 C    0.601965495654   -0.705513303045   -1.643677980088
 C    0.994965495654   -1.147513303045   -3.062677980088
 C   -0.275034504346   -1.704513303045   -0.872677980088
 O   -0.501034504346   -2.840513303045   -1.342677980088
 O   -0.746034504346   -1.357513303045    0.238322019912
 H    1.509965495654   -0.564513303045   -1.064677980088
 H    0.091965495654    0.255486696955   -1.724677980088
 H    1.821965495654   -0.504513303045   -3.336677980088
 H    0.174574495654   -0.996703303045   -3.779767980088
 H    1.419515495654   -2.160513303045   -3.122607980088
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-029ASP-070ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-029ASP-070ASP-1-dimer.npy', np.array(charges))