import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.571313577777   -0.428010755853   -0.355098632636
 C   -2.745313577777   -1.167010755853   -0.967098632636
 H   -1.676313577777    0.646989244147   -0.498098632636
 H   -1.539313577777   -0.628010755853    0.716901367364
 H   -0.645313577777   -0.777010755853   -0.809098632636
 H   -3.666313577777   -0.713010755853   -0.609098632636
 H   -2.706313577777   -2.194010755853   -0.601098632636
 H   -2.748173577777   -1.177745755853   -2.067038632636
 C    1.430686422223    0.634989244147    0.538901367364
 C    2.891686422223    0.957989244147    0.775901367364
 H    1.228686422223   -0.415010755853    0.755901367364
 H    0.822686422223    1.276989244147    1.165901367364
 H    1.120686422223    0.867989244147   -0.475098632636
 H    3.025686422223    2.038989244147    0.734901367364
 H    3.513206422223    0.485549244147    0.000978367364
 H    3.202376422223    0.612619244147    1.772993367364
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-053ILE-066LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053ILE-066LEU-1-dimer.npy', np.array(charges))