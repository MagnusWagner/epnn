import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.681970231350   -0.253687863369    1.596921826214
 C   -0.470970231350   -1.151687863369    1.395921826214
 O   -0.496970231350   -2.109687863369    0.621921826214
 N    0.582029768650   -0.869687863369    2.137921826214
 H   -1.361970231350    0.782312136631    1.518921826214
 H   -2.078970231350   -0.422687863369    2.597921826214
 H    1.381029768650   -1.486687863369    2.144921826214
 H    0.575029768650   -0.044687863369    2.740921826214
 H   -2.463340231350   -0.431470863369    0.843356926214
 C    0.438029768650    1.150312136631   -1.538078173786
 C   -0.304970231350    1.611312136631   -2.799078173786
 C    1.877029768650    1.601312136631   -1.474078173786
 H   -0.096970231350    1.545312136631   -0.672078173786
 H    0.396029768650    0.059312136631   -1.492078173786
 H   -0.314970231350    2.702312136631   -2.827078173786
 H   -1.335970231350    1.267312136631   -2.712078173786
 H    2.408029768650    1.219312136631   -2.353078173786
 H    1.909029768650    2.695312136631   -1.510078173786
 H    0.115989768650    1.224116136631   -3.738692173786
 H    2.368309768650    1.241090136631   -0.558171173786
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-078GLN-085LYS-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-078GLN-085LYS-1-dimer.npy', np.array(charges))