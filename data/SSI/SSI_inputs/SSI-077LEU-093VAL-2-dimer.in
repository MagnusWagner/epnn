import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.279238306563   -0.995829931946    1.182125039345
 C    1.140238306563   -0.299829931946    2.251125039345
 C    0.992238306563   -2.026829931946    0.297125039345
 H   -0.557761693437   -1.487829931946    1.678125039345
 H   -0.133761693437   -0.223829931946    0.547125039345
 H    1.567238306563   -1.034829931946    2.935125039345
 H    1.873238306563   -1.564829931946   -0.148874960655
 H    0.498712306563    0.406680068054    2.798198039345
 H    1.941901306563    0.286860068054    1.778755039345
 H    1.320221306563   -2.881029931946    0.907677739345
 H    0.345809306563   -2.365199931946   -0.526062560655
 C   -0.990761693437    0.902170068054   -1.680874960655
 C   -1.397761693437    2.344170068054   -1.956874960655
 H   -1.612761693437    0.484170068054   -0.891874960655
 H   -1.141761693437    0.313170068054   -2.585874960655
 H    0.065238306563    0.851170068054   -1.418874960655
 H   -0.820761693437    2.688170068054   -2.813874960655
 H   -1.165771693437    3.013100068054   -1.115021960655
 H   -2.455916593437    2.420930068054   -2.247418960655
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-077LEU-093VAL-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-077LEU-093VAL-2-dimer.npy', np.array(charges))