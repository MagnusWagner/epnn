import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.511164830498   -1.125385790129   -0.262188229665
 C    2.443164830498   -1.099385790129    0.949811770335
 H    0.453164830498   -1.052385790129   -0.068188229665
 H    1.792164830498   -0.312385790129   -0.932188229665
 H    1.671164830498   -2.062385790129   -0.796188229665
 H    2.476164830498   -0.093385790129    1.368811770335
 H    3.441164830498   -1.369385790129    0.604811770335
 H    2.088414830498   -1.805305790129    1.715210770335
 C   -1.997835169502    0.352614209871   -0.389188229665
 C   -1.955835169502    1.878614209871   -0.291188229665
 H   -1.384835169502    0.006614209871   -1.224188229665
 H   -1.676835169502   -0.119385790129    0.533811770335
 H   -3.011835169502   -0.013385790129   -0.531188229665
 H   -2.455835169502    2.167614209871    0.629811770335
 H   -2.487327569502    2.348891209871   -1.131638229665
 H   -0.913421169502    2.228006209871   -0.255168229665
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-025ILE-084ILE-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025ILE-084ILE-2-dimer.npy', np.array(charges))