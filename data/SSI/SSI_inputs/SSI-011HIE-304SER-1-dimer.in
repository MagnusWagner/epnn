import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.807853367844    2.052188052510   -2.860784840907
 C   -0.999853367844    0.496188052510   -0.785784840907
 C   -0.568853367844    1.600188052510   -1.451784840907
 C    0.236146632156    1.687188052510    0.593215159093
 N   -0.491853367844    0.579188052510    0.492215159093
 N    0.202146632156    2.326188052510   -0.568784840907
 H   -1.691853367844   -0.250811947490   -1.158784840907
 H   -0.899853367844    0.108188052510    1.300215159093
 H    0.160146632156    2.256188052510   -3.317784840907
 H   -1.359853367844    2.988188052510   -2.812784840907
 H    0.713146632156    2.054188052510    1.494215159093
 H   -1.377154367844    1.353338052510   -3.491264840907
 C    0.218146632156   -2.596811947490    1.166215159093
 C    0.938146632156   -3.848811947490    1.668215159093
 O    1.064146632156   -1.469811947490    1.317215159093
 H   -0.061853367844   -2.701811947490    0.125215159093
 H   -0.691853367844   -2.442811947490    1.745215159093
 H    0.354146632156   -4.727811947490    1.421215159093
 H    0.685146632156   -0.712811947490    0.846215159093
 H    1.120092632156   -3.759341947490    2.749365159093
 H    1.904000332156   -3.944381947490    1.150535159093
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-011HIE-304SER-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011HIE-304SER-1-dimer.npy', np.array(charges))