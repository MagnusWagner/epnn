import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    1.962045889924   -2.149787360644   -1.971142477804
 C    2.187045889924   -1.099787360644   -0.893142477804
 O    1.220045889924   -0.841787360644   -0.138142477804
 O    3.330045889924   -0.631787360644   -0.716142477804
 H    1.022045889924   -1.936787360644   -2.483142477804
 H    1.847045889924   -3.126787360644   -1.507142477804
 H    2.748389789924   -2.168613360644   -2.740112477804
 C   -1.319954110076    0.340212639356    1.529857522196
 C   -2.285954110076    0.662212639356    2.653857522196
 C   -1.671954110076    1.067212639356    0.246857522196
 O   -2.774954110076    1.588212639356    0.081857522196
 N   -0.738954110076    1.095212639356   -0.685142477804
 H   -0.313954110076    0.621212639356    1.839857522196
 H   -1.320954110076   -0.727787360644    1.323857522196
 H   -3.311954110076    0.610212639356    2.291857522196
 H   -2.095954110076    1.688212639356    2.974857522196
 H   -0.924954110076    1.545212639356   -1.566142477804
 H    0.090045889924    0.513212639356   -0.529142477804
 H   -2.205115110076   -0.005437360644    3.524327522196
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-013GLU-056GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-013GLU-056GLN-1-dimer.npy', np.array(charges))