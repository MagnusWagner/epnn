import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.376979751853    1.640038466555   -0.607167683452
 C   -1.437979751853    2.608038466555   -1.086167683452
 H    0.040020248147    1.089038466555   -1.454167683452
 H    0.420020248147    2.186038466555   -0.103167683452
 H   -0.824979751853    0.941038466555    0.096832316548
 H   -1.817979751853    3.135038466555   -0.212167683452
 H   -2.259114751853    2.034248466555   -1.540595683452
 H   -1.007637751853    3.353058466555   -1.771554683452
 C    1.262020248147   -1.603961533445    0.403832316548
 C    0.555020248147   -2.645961533445    1.285832316548
 H    2.248020248147   -1.390961533445    0.817832316548
 H    1.365020248147   -1.957961533445   -0.620167683452
 H    0.694020248147   -0.679961533445    0.344832316548
 H   -0.449979751853   -2.791961533445    0.895832316548
 H    0.485823248147   -2.284281533445    2.322364316548
 H    1.081989248147   -3.611351533445    1.267834316548
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-016LEU-046ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-016LEU-046ILE-1-dimer.npy', np.array(charges))