import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.138514786692   -0.236325113467    1.660973615208
 C    0.632485213308   -1.314325113467    2.393973615208
 C    0.763485213308    0.993674886533    1.692973615208
 H   -1.066514786692   -0.028325113467    2.194973615208
 H   -0.362514786692   -0.543325113467    0.641973615208
 H   -0.052514786692   -1.907325113467    3.001973615208
 H    1.160485213308   -1.953325113467    1.697973615208
 H    0.188485213308    1.914674886533    1.623973615208
 H    1.486485213308    0.936674886533    0.876973615208
 H    1.343075213308   -0.750208113467    3.015933615208
 H    1.291395213308    0.907735886533    2.654183615208
 C   -0.754514786692    0.316674886533   -2.064026384792
 C   -0.519514786692    0.215674886533   -3.580026384792
 H   -0.831514786692   -0.681325113467   -1.632026384792
 H    0.081485213308    0.826674886533   -1.591026384792
 H   -1.658514786692    0.882674886533   -1.844026384792
 H    0.330485213308   -0.430325113467   -3.779026384792
 H   -0.315514786692    1.213674886533   -3.933026384792
 H   -1.397464786692   -0.094739113467   -4.165566384792
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-067PRO-101ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-067PRO-101ILE-1-dimer.npy', np.array(charges))