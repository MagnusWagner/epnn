import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.866427347157   -0.031012624466   -1.180811232829
 C   -1.589427347157   -0.354012624466   -2.500811232829
 S   -0.637427347157   -1.405012624466   -0.065811232829
 H    0.112572652843    0.346987375534   -1.447811232829
 H   -1.403427347157    0.765987375534   -0.659811232829
 H   -1.729427347157    0.575987375534   -3.055811232829
 H    0.291572652843   -0.843012624466    0.713188767171
 H   -2.574517347157   -0.791072624466   -2.280391232829
 H   -0.991197347157   -1.024582624466   -3.135211232829
 C    1.177572652843    1.371987375534    1.788188767171
 C    2.566572652843    1.990987375534    1.948188767171
 H    1.272572652843    0.329987375534    1.488188767171
 H    0.652572652843    1.423987375534    2.742188767171
 H    0.583572652843    1.922987375534    1.058188767171
 H    2.456572652843    3.041987375534    2.210188767171
 H    3.150032652843    1.893627375534    1.020768767171
 H    3.061282652843    1.471577375534    2.782148767171
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-152CYS-197VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-152CYS-197VAL-1-dimer.npy', np.array(charges))