import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.118506489162   -0.004874967193    1.683697674987
 C   -0.921506489162   -0.468874967193    2.882697674987
 H    0.187493510838    1.034125032807    1.805697674987
 H    0.763493510838   -0.632874967193    1.549697674987
 H   -0.785506489162   -0.086874967193    0.836697674987
 H   -0.416506489162   -0.160874967193    3.799697674987
 H   -0.910506489162   -1.557874967193    2.849697674987
 H   -1.962234489162   -0.112664967193    2.881267674987
 C    0.156493510838    0.577125032807   -1.706302325013
 C    0.882493510838   -0.094874967193   -2.860302325013
 H   -0.056506489162   -0.208874967193   -1.000302325013
 H    0.784493510838    1.331125032807   -1.235302325013
 H   -0.776506489162    1.020125032807   -2.056302325013
 H    0.893493510838    0.593125032807   -3.699302325013
 H    0.361928270838   -1.022554967193   -3.140332325013
 H    1.929080510838   -0.297114967193   -2.588722325013
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-032ILE-065LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032ILE-065LEU-1-dimer.npy', np.array(charges))