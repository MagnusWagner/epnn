import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.193565200304   -0.554050014546   -1.462916842596
 C    2.406565200304   -1.171050014546   -1.961916842596
 H    1.390565200304    0.471949985454   -1.154916842596
 H    0.461565200304   -0.537050014546   -2.269916842596
 H    0.773565200304   -1.160050014546   -0.659916842596
 H    2.187565200304   -2.149050014546   -2.391916842596
 H    3.137176000304   -1.270940014546   -1.145686842596
 H    2.741215800304   -0.473730014546   -2.744066842596
 C   -0.964434799696    0.874949985454    0.749083157404
 C   -0.339434799696    0.645949985454    2.125083157404
 C   -2.346434799696    0.251949985454    0.603083157404
 H   -1.061434799696    1.952949985454    0.608083157404
 H   -0.339434799696    0.516949985454   -0.022916842596
 H   -1.013434799696    1.072949985454    2.873083157404
 H   -2.282434799696   -0.833050014546    0.689083157404
 H   -2.975434799696    0.620949985454    1.415083157404
 H    0.640363200304    1.142639985454    2.182453157404
 H   -0.226614799696   -0.425480014546    2.347133157404
 H   -2.835813799696    0.502409985454   -0.349686842596
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-037THR-085LYS-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037THR-085LYS-2-dimer.npy', np.array(charges))