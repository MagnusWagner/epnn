import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -2.080103159132    0.197258071569    2.594253449156
 C   -1.709103159132   -0.318741928431    1.210253449156
 O   -2.102103159132    0.257258071569    0.197253449156
 N   -0.949103159132   -1.401741928431    1.158253449156
 H   -2.402103159132   -0.637741928431    3.218253449156
 H   -2.925103159132    0.879258071569    2.481253449156
 H   -0.626103159132   -1.701741928431    0.248253449156
 H   -0.758103159132   -1.922741928431    1.995253449156
 H   -1.246503159132    0.724088071569    3.081653449156
 C    2.587896840868    1.458258071569   -1.471746550844
 C    1.652896840868    0.268258071569   -1.272746550844
 O    0.460896840868    0.392258071569   -1.630746550844
 O    2.102896840868   -0.790741928431   -0.779746550844
 H    2.067896840868    2.386258071569   -1.225746550844
 H    2.871896840868    1.497258071569   -2.524746550844
 H    3.500956840868    1.382168071569   -0.863036550844
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-088ASN-092ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-088ASN-092ASP-1-dimer.npy', np.array(charges))