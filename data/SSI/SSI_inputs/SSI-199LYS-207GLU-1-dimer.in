import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -2.112219984805   -1.923028295975   -1.155042680335
 N   -0.992219984805   -1.063028295975   -1.753042680335
 H   -0.659219984805   -0.406028295975   -1.042042680335
 H   -0.210219984805   -1.637028295975   -2.046042680335
 H   -1.318219984805   -0.539028295975   -2.554042680335
 H   -1.660219984805   -2.531028295975   -0.364042680335
 H   -2.465219984805   -2.632028295975   -1.910042680335
 H   -2.997389984805   -1.454808295975   -0.699809680335
 C    1.904780015195    0.720971704025   -0.131042680335
 C    0.762780015195    0.795971704025    0.871957319665
 O   -0.371219984805    0.494971704025    0.441957319665
 O    0.998780015195    1.190971704025    2.023957319665
 H    1.737780015195    1.459971704025   -0.910042680335
 H    1.871780015195   -0.262028295975   -0.606042680335
 H    2.915010015195    0.850131704025    0.284594319665
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-199LYS-207GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-199LYS-207GLU-1-dimer.npy', np.array(charges))