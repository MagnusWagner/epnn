import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.509040745148    0.524827284830    0.857996159522
 C    0.786040745148    1.857827284830    0.618996159522
 C    1.234040745148   -0.065172715170    2.241996159522
 H    1.178040745148   -0.194172715170    0.107996159522
 H    2.584040745148    0.656827284830    0.732996159522
 H    1.078040745148    2.587827284830    1.374996159522
 H   -0.287959254852    1.681827284830    0.710996159522
 H    0.157040745148   -0.136172715170    2.406996159522
 H    1.651040745148   -1.074172715170    2.257996159522
 H    0.993000745148    2.267447284830   -0.380693840478
 H    1.699040745148    0.530397284830    3.041416159522
 C   -1.025959254852   -0.970172715170   -1.553003840478
 C   -2.396959254852   -1.304172715170   -2.110003840478
 H   -0.571959254852   -0.165172715170   -2.132003840478
 H   -1.128959254852   -0.653172715170   -0.515003840478
 H   -0.381959254852   -1.848172715170   -1.574003840478
 H   -2.797959254852   -2.151172715170   -1.553003840478
 H   -2.358059254852   -1.563502715170   -3.178293840478
 H   -3.077939254852   -0.452232715170   -1.966943840478
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-112LYS-127LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-112LYS-127LEU-1-dimer.npy', np.array(charges))