import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.256159465273    0.508917453938    1.826188786443
 C   -1.668159465273   -0.091082546062    1.915188786443
 H   -0.279159465273    1.392917453938    1.189188786443
 H    0.086840534727    0.800917453938    2.820188786443
 H    0.435840534727   -0.223082546062    1.408188786443
 H   -1.962159465273   -0.425082546062    0.919188786443
 H   -1.687447465273   -0.952617546062    2.598848786443
 H   -2.390303465273    0.676420453938    2.230538786443
 C    1.256840534727    0.405917453938   -1.517811213557
 C    0.669840534727   -0.824082546062   -2.223811213557
 H    0.497840534727    0.849917453938   -0.881811213557
 H    2.098840534727    0.116917453938   -0.891811213557
 H    1.581840534727    1.144917453938   -2.252811213557
 H    0.403840534727   -1.548082546062   -1.454811213557
 H    1.425230534727   -1.260271546062   -2.893981213557
 H   -0.239329465273   -0.568939546062   -2.788001213557
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-005VAL-023LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005VAL-023LEU-1-dimer.npy', np.array(charges))