import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -1.834225626126    1.218200925356   -0.546936643543
 C   -1.148225626126    0.689200925356   -1.804936643543
 C   -2.757225626126    0.155200925356    0.040063356457
 H   -1.079225626126    1.493200925356    0.190063356457
 H   -2.422225626126    2.102200925356   -0.797936643543
 H   -1.901225626126    0.395200925356   -2.528936643543
 H   -0.599225626126   -0.211799074644   -1.537936643543
 H   -3.472225626126   -0.158799074644   -0.723936643543
 H   -2.166225626126   -0.709799074644    0.343063356457
 H   -0.457215626126    1.401760925356   -2.279020643543
 H   -3.308235626126    0.543940925356    0.909128356457
 C    1.785774373874    0.194200925356    1.789063356457
 C    1.421774373874   -0.545799074644    0.508063356457
 O    2.027774373874   -0.277799074644   -0.545936643543
 O    0.492774373874   -1.384799074644    0.562063356457
 H    1.814774373874   -0.498799074644    2.632063356457
 H    0.996774373874    0.921200925356    1.990063356457
 H    2.740934373874    0.735690925356    1.722273356457
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-095LYS-127ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-095LYS-127ASP-1-dimer.npy', np.array(charges))