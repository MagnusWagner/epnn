import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.149540799974   -1.853311229300    0.509237095704
 C    1.421540799974   -3.336311229300    0.752237095704
 H    2.067540799974   -1.273311229300    0.582237095704
 H    0.761540799974   -1.730311229300   -0.501762904296
 H    0.410540799974   -1.475311229300    1.216237095704
 H    2.273540799974   -3.659311229300    0.151237095704
 H    0.536540799974   -3.865311229300    0.406237095704
 H    1.600160799974   -3.551821229300    1.816027095704
 C   -0.770459200026    1.196688770700   -0.286762904296
 C    0.225540799974    2.350688770700   -0.111762904296
 C   -2.074459200026    1.716688770700   -0.869762904296
 H   -0.336459200026    0.460688770700   -0.964762904296
 H   -0.974459200026    0.716688770700    0.671237095704
 H   -0.262459200026    3.175688770700    0.410237095704
 H    0.508540799974    2.702688770700   -1.105762904296
 H   -2.568459200026    2.343688770700   -0.123762904296
 H   -1.841459200026    2.320688770700   -1.749762904296
 H    1.132710799974    2.062175770700    0.439427095704
 H   -2.732768200026    0.886678770700   -1.165922904296
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-038ILE-085ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-038ILE-085ARG-1-dimer.npy', np.array(charges))