import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.958898421785   -1.758703184553    2.195626686099
 C   -2.026898421785   -2.843703184553    2.271626686099
 H   -1.408898421785   -0.764703184553    2.210626686099
 H   -0.261898421785   -1.851703184553    3.028626686099
 H   -0.398898421785   -1.931703184553    1.286626686099
 H   -1.590898421785   -3.785703184553    1.959626686099
 H   -2.883252421785   -2.619843184553    1.618523686099
 H   -2.350469421785   -2.973133184553    3.314962686099
 C    0.867101578215    0.328296815447   -0.074373313901
 C    1.699101578215   -0.705703184553   -0.834373313901
 C    0.312101578215    1.413296815447   -0.977373313901
 O    0.731101578215    1.499296815447   -2.153373313901
 O   -0.546898421785    2.191296815447   -0.506373313901
 H    0.021101578215   -0.144703184553    0.396626686099
 H    1.484101578215    0.786296815447    0.700626686099
 H    2.595101578215   -0.210703184553   -1.214373313901
 H    1.127471578215   -1.113903184553   -1.680901313901
 H    2.022991578215   -1.496703184553   -0.141976313901
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-091VAL-094ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-091VAL-094ASP-1-dimer.npy', np.array(charges))