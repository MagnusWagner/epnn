import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.613686871643    2.116478817926   -0.183064180934
 C   -0.884686871643    2.761478817926   -1.534064180934
 H   -0.864686871643    2.798478817926    0.628935819066
 H   -1.229686871643    1.227478817926   -0.078064180934
 H    0.443313128357    1.853478817926   -0.102064180934
 H   -0.536686871643    2.087478817926   -2.320064180934
 H   -0.342206871643    3.714958817926   -1.615214180934
 H   -1.966736871643    2.902868817926   -1.672564180934
 C    0.484313128357   -1.119521182074    0.488935819066
 C    1.496313128357   -1.708521182074    1.484935819066
 C   -0.453686871643   -2.126521182074   -0.219064180934
 H   -0.123686871643   -0.398521182074    1.034935819066
 H    1.030313128357   -0.581521182074   -0.290064180934
 H    1.960313128357   -2.588521182074    1.029935819066
 H    0.125313128357   -2.722521182074   -0.926064180934
 H   -0.897686871643   -2.795521182074    0.519935819066
 H    1.014903128357   -1.996021182074    2.431285819066
 H    2.307733128357   -0.987411182074    1.662705819066
 H   -1.260636871643   -1.602571182074   -0.752274180934
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-077ALA-138ARG-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-077ALA-138ARG-2-dimer.npy', np.array(charges))