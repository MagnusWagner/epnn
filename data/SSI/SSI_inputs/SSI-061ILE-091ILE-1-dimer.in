import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.181521597498    0.022057636090   -1.686556047203
 C   -2.153521597498   -1.102942363910   -1.458556047203
 H   -0.499521597498    0.098057636090   -0.847556047203
 H   -0.609521597498   -0.167942363910   -2.594556047203
 H   -1.726521597498    0.959057636090   -1.795556047203
 H   -1.627521597498   -2.048942363910   -1.483556047203
 H   -2.807521597498   -1.079942363910   -2.329556047203
 H   -2.766361597498   -1.069449363910   -0.545706047203
 C    1.582478402502    0.852057636090    0.891443952797
 C    1.759478402502    0.233057636090    2.265443952797
 H    2.472478402502    1.422057636090    0.621443952797
 H    1.441478402502    0.084057636090    0.136443952797
 H    0.715478402502    1.511057636090    0.868443952797
 H    0.795478402502   -0.180942363910    2.562443952797
 H    2.032238402502    1.005171636090    2.999913952797
 H    2.497498402502   -0.582613363910    2.267583952797
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-061ILE-091ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061ILE-091ILE-1-dimer.npy', np.array(charges))