import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    2.804655564077    0.070528927586   -0.827024227852
 N    2.035655564077    0.347528927586    0.411975772148
 H    1.090655564077   -0.048471072414    0.320975772148
 H    2.474655564077   -0.064471072414    1.225975772148
 H    1.932655564077    1.340528927586    0.576975772148
 H    2.891655564077   -1.009471072414   -0.975024227852
 H    3.814655564077    0.485528927586   -0.743024227852
 H    2.310405564077    0.509138927586   -1.706414227852
 C   -2.627344435923   -0.128471072414   -0.473024227852
 C   -1.231344435923   -0.123471072414    0.128975772148
 O   -0.930344435923    0.773528927586    0.950975772148
 O   -0.413344435923   -0.995471072414   -0.230024227852
 H   -2.859344435923   -1.109471072414   -0.886024227852
 H   -2.655344435923    0.599528927586   -1.285024227852
 H   -3.408594435923    0.150908927586    0.249185772148
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-094LYS-112ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094LYS-112ASP-1-dimer.npy', np.array(charges))