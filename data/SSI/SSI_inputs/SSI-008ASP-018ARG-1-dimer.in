import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -0.582711784302    2.633970292071    0.525296649370
 C    0.165288215698    1.483970292071    1.173296649370
 O    0.216288215698    0.397970292071    0.584296649370
 O    0.689288215698    1.657970292071    2.283296649370
 H   -0.049711784302    3.571970292071    0.690296649370
 H   -1.556711784302    2.711970292071    1.012296649370
 H   -0.742348984302    2.482279292071   -0.552433350630
 C   -0.325711784302   -2.259029707929   -1.022703350630
 C   -1.310711784302   -1.764029707929   -2.074703350630
 C    1.139288215698   -2.187029707929   -1.462703350630
 H   -0.506711784302   -1.739029707929   -0.090703350630
 H   -0.544711784302   -3.311029707929   -0.825703350630
 H   -1.176711784302   -0.690029707929   -2.181703350630
 H    1.319288215698   -2.847029707929   -2.310703350630
 H    1.385288215698   -1.163029707929   -1.745703350630
 H   -2.333831884302   -1.985692707929   -1.736933350630
 H   -1.090203584302   -2.239025707929   -3.042043350630
 H    1.813708215698   -2.509767707929   -0.655863350630
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-008ASP-018ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008ASP-018ARG-1-dimer.npy', np.array(charges))