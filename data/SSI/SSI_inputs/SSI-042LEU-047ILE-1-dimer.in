import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.292896278585   -0.242759346635   -1.330320425544
 C    2.124896278585    0.921240653365   -1.863320425544
 H    0.246896278585   -0.128759346635   -1.614320425544
 H    1.657896278585   -1.174759346635   -1.763320425544
 H    1.382896278585   -0.299759346635   -0.248320425544
 H    1.979896278585    0.966240653365   -2.939320425544
 H    1.808996278585    1.866090653365   -1.396985625544
 H    3.195636278585    0.756510653365   -1.672581425544
 C   -1.708103721415   -0.839759346635    1.032679574456
 C   -1.702103721415    0.165240653365    2.163679574456
 H   -0.978103721415   -1.626759346635    1.197679574456
 H   -2.697103721415   -1.293759346635    0.962679574456
 H   -1.488103721415   -0.335759346635    0.092679574456
 H   -1.946103721415   -0.357759346635    3.089679574456
 H   -2.501103721415    0.877240653365    1.965679574456
 H   -0.752013721415    0.704050653365    2.294084574456
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-042LEU-047ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-042LEU-047ILE-1-dimer.npy', np.array(charges))