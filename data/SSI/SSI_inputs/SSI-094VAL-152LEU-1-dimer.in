import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.601684719080   -1.912458359803   -0.655354843970
 C   -0.356684719080   -3.403458359803   -0.804354843970
 H   -0.807684719080   -1.457458359803   -1.624354843970
 H   -1.462684719080   -1.738458359803   -0.007354843970
 H    0.281315280920   -1.452458359803   -0.215354843970
 H   -1.216684719080   -3.830458359803   -1.316354843970
 H    0.547092280920   -3.596764359803   -1.400864843970
 H   -0.249133719080   -3.880581359803    0.180925156030
 C    0.202315280920    1.271541640197    0.425645156030
 C   -0.771684719080    2.247541640197    1.092645156030
 C    1.546315280920    1.881541640197   -0.020354843970
 H    0.397315280920    0.450541640197    1.114645156030
 H   -0.284684719080    0.870541640197   -0.464354843970
 H   -0.380684719080    2.520541640197    2.069645156030
 H    1.340315280920    2.732541640197   -0.667354843970
 H   -1.766566719080    1.788711640197    1.191075156030
 H   -0.886340719080    3.148091640197    0.471475156030
 H    2.124881280920    2.255021640197    0.837415156030
 H    2.142359280920    1.181581640197   -0.624334843970
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-094VAL-152LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094VAL-152LEU-1-dimer.npy', np.array(charges))