import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
1 1 
 C   -2.027440187640   -1.276574302693    0.402678578899
 C    0.175559812360   -0.349574302693    1.012678578899
 N   -1.133440187640   -0.205574302693    0.858678578899
 N    0.750559812360   -1.504574302693    0.734678578899
 N    0.911559812360    0.654425697307    1.444678578899
 H   -1.530440187640    0.674425697307    1.130678578899
 H    0.198559812360   -2.286574302693    0.438678578899
 H    1.772559812360   -1.564574302693    0.636678578899
 H    0.508559812360    1.561425697307    1.670678578899
 H    1.894559812360    0.508425697307    1.587678578899
 H   -1.975440187640   -2.092574302693    1.128678578899
 H   -1.697440187640   -1.670574302693   -0.559321421101
 H   -3.079097187640   -0.957824302693    0.353528578899
 C    1.304559812360    1.431425697307   -1.867321421101
 C   -0.057440187640    1.245425697307   -2.524321421101
 H    1.260559812360    2.150425697307   -1.066321421101
 H    1.626559812360    0.484425697307   -1.438321421101
 H    2.036559812360    1.758425697307   -2.606321421101
 H   -0.794440187640    1.013425697307   -1.758321421101
 H   -0.349633187640    2.166624697307   -3.049692421101
 H   -0.016302187640    0.412562697307   -3.241709421101
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-005ARG-158LEU-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005ARG-158LEU-2-dimer.npy', np.array(charges))