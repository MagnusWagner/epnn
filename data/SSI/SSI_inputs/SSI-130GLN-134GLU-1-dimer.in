import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    2.239789282238    0.902241402838   -1.532405853057
 C    1.697789282238   -0.427758597162   -2.006405853057
 O    2.234789282238   -1.037758597162   -2.939405853057
 N    0.587789282238   -0.860758597162   -1.412405853057
 H    0.190789282238   -1.734758597162   -1.720405853057
 H    0.149789282238   -0.353758597162   -0.652405853057
 H    3.230789282238    1.053241402838   -1.942405853057
 H    2.301789282238    0.865241402838   -0.446405853057
 H    1.540074282238    1.678711402838   -1.875185853057
 C   -2.565210717762    1.523241402838    1.942594146943
 C   -1.601210717762    0.312241402838    1.971594146943
 O   -1.564210717762   -0.432758597162    0.938594146943
 O   -0.945210717762    0.054241402838    3.015594146943
 H   -3.576210717762    1.154241402838    1.750594146943
 H   -2.307210717762    2.134241402838    1.080594146943
 H   -2.613355717762    2.135481402838    2.855204146943
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-130GLN-134GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-130GLN-134GLU-1-dimer.npy', np.array(charges))