import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
1 1 
 C    0.505670036367   -2.088804421730   -0.750738428489
 C    0.984670036367   -3.527804421730   -0.826738428489
 H    1.184670036367   -1.488804421730   -0.145738428489
 H    0.471670036367   -1.674804421730   -1.759738428489
 H   -0.487329963633   -2.077804421730   -0.332738428489
 H    1.936670036367   -3.536804421730   -1.350738428489
 H    1.138475036367   -3.936034421730    0.183059571511
 H    0.255630036367   -4.134144421730   -1.384282428489
 C   -1.962329963633    1.104195578270    1.410261571511
 C    0.110670036367    1.144195578270    0.060261571511
 N   -0.520329963633    1.298195578270    1.212261571511
 N   -0.555329963633    0.798195578270   -1.023738428489
 N    1.408670036367    1.343195578270   -0.003738428489
 H    0.016670036367    1.646195578270    1.993261571511
 H   -1.555329963633    0.695195578270   -0.994738428489
 H   -0.072329963633    0.726195578270   -1.904738428489
 H    1.923670036367    1.601195578270    0.831261571511
 H    1.891670036367    1.244195578270   -0.885738428489
 H   -2.520329963633    0.959195578270    0.484261571511
 H   -2.352329963633    2.016195578270    1.867261571511
 H   -2.156260963633    0.273995578270    2.105361571511
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-138VAL-144ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-138VAL-144ARG-1-dimer.npy', np.array(charges))