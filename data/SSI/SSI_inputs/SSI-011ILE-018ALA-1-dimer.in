import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -2.013912478278   -0.105523487324    0.510261023719
 C   -2.732912478278    0.995476512676   -0.270738976281
 H   -1.333912478278   -0.653523487324   -0.143738976281
 H   -1.445912478278    0.320476512676    1.337261023719
 H   -2.735912478278   -0.792523487324    0.943261023719
 H   -3.460912478278    1.457476512676    0.396261023719
 H   -3.261772478278    0.559866512676   -1.131288976281
 H   -2.043462478278    1.770396512676   -0.637008976281
 C    1.804087521722   -0.282523487324    0.357261023719
 C    2.947087521722   -0.604523487324   -0.600738976281
 H    1.248087521722   -1.187523487324    0.608261023719
 H    2.191087521722    0.167476512676    1.272261023719
 H    1.124087521722    0.430476512676   -0.112738976281
 H    3.524087521722    0.297476512676   -0.815738976281
 H    2.532669521722   -1.046473487324   -1.518858976281
 H    3.610069521722   -1.358203487324   -0.150828976281
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-011ILE-018ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011ILE-018ALA-1-dimer.npy', np.array(charges))