import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    2.324601763702    0.492209698996   -2.771088794805
 C    1.208601763702    0.869209698996   -1.849088794805
 O    1.378601763702    0.675209698996   -0.613088794805
 O    0.162601763702    1.374209698996   -2.292088794805
 H    2.723601763702   -0.485790301004   -2.493088794805
 H    3.135601763702    1.214209698996   -2.657088794805
 H    2.017041763702    0.478359698996   -3.827128794805
 C   -1.348398236298   -2.441790301004    0.687911205195
 C   -0.920398236298   -0.250790301004    1.721911205195
 N   -0.071398236298    0.636209698996    2.218911205195
 N   -0.469398236298   -1.390790301004    1.234911205195
 N   -2.213398236298    0.012209698996    1.624911205195
 H    0.918601763702    0.471209698996    2.136911205195
 H   -0.402398236298    1.529209698996    2.542911205195
 H    0.527601763702   -1.546790301004    1.236911205195
 H   -2.846398236298   -0.678790301004    1.268911205195
 H   -2.573398236298    0.887209698996    1.971911205195
 H   -2.394398236298   -2.145790301004    0.631911205195
 H   -1.303398236298   -3.300790301004    1.361911205195
 H   -1.049808236298   -2.783350301004   -0.314178794805
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-034ASP-061ARG-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-034ASP-061ARG-1-dimer.npy', np.array(charges))