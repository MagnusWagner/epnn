import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.743859470651   -0.580417390192    1.605973295652
 C    3.036859470651   -0.200417390192    0.833973295652
 H    1.084859470651    0.285582609808    1.678973295652
 H    1.219859470651   -1.387417390192    1.090973295652
 H    1.999859470651   -0.907417390192    2.608973295652
 H    3.683859470651   -1.075417390192    0.756973295652
 H    3.595469470651    0.608502609808    1.327533295652
 H    2.750689470651    0.128492609808   -0.175936704348
 C   -1.176140529349    0.120582609808   -0.537026704348
 C   -2.397140529349    0.754582609808    0.131973295652
 C   -1.288140529349   -0.081417390192   -2.074026704348
 H   -0.324140529349    0.763582609808   -0.317026704348
 H   -1.023140529349   -0.846417390192   -0.056026704348
 H   -3.274140529349    0.158582609808   -0.109026704348
 H   -1.525140529349    0.873582609808   -2.552026704348
 H   -0.305140529349   -0.410417390192   -2.420026704348
 H   -2.558400529349    1.783292609808   -0.222646704348
 H   -2.324020529349    0.698832609808    1.228123295652
 H   -2.039560529349   -0.827117390192   -2.372876704348
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-174VAL-273GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-174VAL-273GLU-1-dimer.npy', np.array(charges))