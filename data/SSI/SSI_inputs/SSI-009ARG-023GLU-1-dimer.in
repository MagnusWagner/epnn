import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.424421846746    2.577031804889    0.543681378007
 C   -1.377421846746    0.560031804889    1.627681378007
 N   -0.661421846746    1.138031804889    0.678681378007
 N   -1.995421846746    1.286031804889    2.537681378007
 N   -1.496421846746   -0.752968195111    1.640681378007
 H   -0.135421846746    0.516031804889    0.064681378007
 H    0.329578153254    2.893031804889    1.267681378007
 H   -1.346421846746    3.138031804889    0.708681378007
 H   -1.917421846746    2.287031804889    2.507681378007
 H   -2.563421846746    0.845031804889    3.241681378007
 H   -0.997421846746   -1.297968195111    0.954681378007
 H   -2.053421846746   -1.210968195111    2.342681378007
 H   -0.066879846746    2.787051804889   -0.475168621993
 C    0.717578153254   -1.280968195111   -2.993318621993
 C    1.548578153254   -1.181968195111   -1.713318621993
 O    1.085578153254   -0.593968195111   -0.715318621993
 O    2.654578153254   -1.750968195111   -1.676318621993
 H    0.165578153254   -2.222968195111   -2.998318621993
 H    1.405578153254   -1.306968195111   -3.840318621993
 H   -0.000882846746   -0.456998195111   -3.115338621993
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-009ARG-023GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-009ARG-023GLU-1-dimer.npy', np.array(charges))