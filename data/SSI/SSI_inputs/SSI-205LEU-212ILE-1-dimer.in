import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.266819529861   -1.174444370316   -0.601015172290
 C    0.776819529861   -1.063444370316   -2.049015172290
 C   -0.214180470139   -2.550444370316   -0.141015172290
 H    1.059819529861   -0.842444370316    0.071984827710
 H   -0.566180470139   -0.478444370316   -0.486015172290
 H    0.030819529861   -1.476444370316   -2.730015172290
 H    0.624819529861   -3.240444370316   -0.118015172290
 H    1.709409529861   -1.639194370316   -2.142724172290
 H    0.872509529861   -0.000084370316   -2.313777172290
 H   -0.616240470139   -2.470034370316    0.879710827710
 H   -0.974950470139   -2.967614370316   -0.817175172290
 C    0.302819529861    2.239555629684    1.140984827710
 C   -1.108180470139    2.462555629684    1.610984827710
 H    0.637819529861    1.233555629684    1.391984827710
 H    0.343819529861    2.343555629684    0.056984827710
 H    0.968819529861    2.969555629684    1.597984827710
 H   -1.736180470139    1.727555629684    1.143984827710
 H   -1.400180470139    3.439555629684    1.227984827710
 H   -1.241030470139    2.427555629684    2.702371827710
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-205LEU-212ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-205LEU-212ILE-1-dimer.npy', np.array(charges))