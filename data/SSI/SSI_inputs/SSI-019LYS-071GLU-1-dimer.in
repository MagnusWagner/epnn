import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -2.061793279249    1.216971452192   -1.880625640054
 N   -0.941793279249    1.735971452192   -1.071625640054
 H   -0.268793279249    1.007971452192   -0.834625640054
 H   -0.446793279249    2.475971452192   -1.552625640054
 H   -1.262793279249    2.106971452192   -0.187625640054
 H   -1.723793279249    1.028971452192   -2.905625640054
 H   -2.861793279249    1.963971452192   -1.927625640054
 H   -2.467607279249    0.277301452192   -1.477705640054
 C    1.432206720751   -1.171028547808    2.026374359946
 C    0.753206720751   -0.798028547808    0.720374359946
 O    0.586206720751    0.409971452192    0.493374359946
 O    0.411206720751   -1.688028547808   -0.087625640054
 H    1.326206720751   -0.349028547808    2.723374359946
 H    2.494206720751   -1.318028547808    1.825374359946
 H    0.995166720751   -2.075648547808    2.474321359946
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-019LYS-071GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019LYS-071GLU-1-dimer.npy', np.array(charges))