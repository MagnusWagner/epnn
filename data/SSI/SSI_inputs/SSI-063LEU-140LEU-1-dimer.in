import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.706172130129   -0.964707684304    1.570806159788
 C    1.227172130129   -2.334707684304    1.160806159788
 H   -0.361827869871   -0.897707684304    1.369806159788
 H    0.872172130129   -0.813707684304    2.636806159788
 H    1.235172130129   -0.185707684304    1.021806159788
 H    2.284172130129   -2.375707684304    1.424806159788
 H    1.100292130129   -2.478788684304    0.077689159788
 H    0.691662130129   -3.124633684304    1.707844159788
 C   -0.387827869871    1.202292315696   -1.155193840212
 C   -1.546827869871    2.098292315696   -1.578193840212
 H   -0.771827869871    0.375292315696   -0.560193840212
 H    0.098172130129    0.794292315696   -2.041193840212
 H    0.339172130129    1.767292315696   -0.573193840212
 H   -2.277827869871    1.488292315696   -2.110193840212
 H   -2.008187869871    2.544581315696   -0.684898840212
 H   -1.185527869871    2.892580315696   -2.247944840212
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-063LEU-140LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-063LEU-140LEU-1-dimer.npy', np.array(charges))