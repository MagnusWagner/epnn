import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.461033320781   -0.255340881636    0.753151493847
 C   -2.693033320781   -0.179340881636    1.594151493847
 H   -1.379033320781   -1.232340881636    0.276151493847
 H   -1.505033320781    0.512659118364   -0.017848506153
 H   -0.583033320781   -0.081340881636    1.377151493847
 H   -3.574033320781   -0.273340881636    0.956151493847
 H   -2.705033320781    0.820659118364    2.022151493847
 H   -2.724623320781   -0.951070881636    2.377371493847
 C    1.360966679219   -0.029340881636   -1.180848506153
 C    2.793966679219    0.457659118364   -1.164848506153
 H    1.231966679219   -0.790340881636   -1.950848506153
 H    1.108966679219   -0.460340881636   -0.210848506153
 H    0.682966679219    0.797659118364   -1.394848506153
 H    2.891966679219    1.257659118364   -0.439848506153
 H    3.098686679219    0.853339118364   -2.144948506153
 H    3.445916679219   -0.377430881636   -0.868908506153
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-031ILE-246ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031ILE-246ALA-1-dimer.npy', np.array(charges))