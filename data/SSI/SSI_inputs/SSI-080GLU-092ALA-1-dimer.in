import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    0.646297807484   -1.282114568975   -1.770399977314
 C    1.111297807484   -0.234114568975   -0.794399977314
 O    0.911297807484   -0.413114568975    0.440600022686
 O    1.689297807484    0.767885431025   -1.267399977314
 H   -0.425702192516   -1.424114568975   -1.622399977314
 H    1.123297807484   -2.239114568975   -1.550399977314
 H    0.794707807484   -1.017094568975   -2.827629977314
 C   -2.112702192516   -0.180114568975    1.739600022686
 C   -2.155702192516    1.329885431025    1.594600022686
 H   -1.408702192516   -0.463114568975    2.523600022686
 H   -3.103702192516   -0.558114568975    1.995600022686
 H   -1.799702192516   -0.632114568975    0.798600022686
 H   -2.831702192516    1.568885431025    0.771600022686
 H   -1.163572192516    1.737313431025    1.350290022686
 H   -2.562492192516    1.760353431025    2.521540022686
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-080GLU-092ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-080GLU-092ALA-1-dimer.npy', np.array(charges))