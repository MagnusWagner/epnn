import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    0.717790290921   -2.335712392549   -0.929067455964
 C   -0.776209709079   -2.097712392549   -0.754067455964
 O   -1.616209709079   -2.939712392549   -1.109067455964
 N   -1.127209709079   -0.955712392549   -0.210067455964
 H   -2.101209709079   -0.775712392549   -0.002067455964
 H   -0.408209709079   -0.244712392549   -0.044067455964
 H    0.935790290921   -3.329712392549   -0.540067455964
 H    1.289790290921   -1.613712392549   -0.346067455964
 H    1.014090290921   -2.273292392549   -1.986569455964
 C    1.106790290921    3.386287607451    0.365932544036
 C    0.707790290921    1.993287607451    0.770932544036
 O    0.964790290921    1.033287607451    0.009932544036
 O    0.042790290921    1.848287607451    1.822932544036
 H    1.453790290921    3.405287607451   -0.667067455964
 H    1.947790290921    3.674287607451    0.998932544036
 H    0.279090290921    4.093597607451    0.522872544036
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-017GLN-094ASP-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017GLN-094ASP-1-dimer.npy', np.array(charges))