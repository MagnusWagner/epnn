import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.199559668234   -1.899306738616   -0.542555412497
 C    1.515559668234   -1.375306738616   -1.125555412497
 H    0.272559668234   -1.848306738616    0.544444587503
 H   -0.626440331766   -1.255306738616   -0.800555412497
 H   -0.035440331766   -2.951306738616   -0.660555412497
 H    1.289559668234   -0.679306738616   -1.925555412497
 H    2.054539668234   -2.223096738616   -1.573619412497
 H    2.099369668234   -0.854376738616   -0.352381012497
 C   -0.544440331766    1.111693261384    1.279444587503
 C   -1.165440331766    2.161693261384    0.374444587503
 H   -1.242440331766    0.845693261384    2.075444587503
 H   -0.318440331766    0.232693261384    0.709444587503
 H    0.371559668234    1.503693261384    1.723444587503
 H   -0.429440331766    2.435693261384   -0.381555412497
 H   -1.451309331766    3.049553261384    0.957527287503
 H   -2.046453331766    1.758983261384   -0.146748812497
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-119LEU-137ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-119LEU-137ALA-1-dimer.npy', np.array(charges))