import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.600570470802   -0.920173175090    2.467791666342
 C   -1.168570470802   -2.175173175090    3.229791666342
 H   -0.771570470802   -0.219173175090    2.381791666342
 H   -1.942570470802   -1.198173175090    1.471791666342
 H   -2.423570470802   -0.435173175090    2.987791666342
 H   -1.989570470802   -2.884173175090    3.279791666342
 H   -0.854090470802   -1.914363175090    4.251101666342
 H   -0.342920470802   -2.679253175090    2.706151666342
 C   -0.271570470802   -0.026173175090   -0.668208333658
 C   -1.180570470802   -0.310173175090   -1.868208333658
 C    1.264429529198    2.301826824910   -0.921208333658
 S    1.416429529198    0.510826824910   -1.087208333658
 H   -0.723570470802    0.719826824910   -0.020208333658
 H   -0.189570470802   -0.952173175090   -0.100208333658
 H   -2.175570470802   -0.574173175090   -1.508208333658
 H   -0.774570470802   -1.165173175090   -2.407208333658
 H    0.874429529198    2.551826824910    0.065791666342
 H    2.243429529198    2.763826824910   -1.045208333658
 H    0.591429529198    2.697826824910   -1.676208333658
 H   -1.249550470802    0.536256824910   -2.567348333658
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-008ALA-038MET-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008ALA-038MET-1-dimer.npy', np.array(charges))