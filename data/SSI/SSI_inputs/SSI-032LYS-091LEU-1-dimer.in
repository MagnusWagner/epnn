import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
1 1 
 C    0.521745413203   -1.163224124624   -0.911254008340
 C    1.694745413203   -0.152224124624   -0.945254008340
 N    0.613745413203   -2.061224124624    0.336745991660
 H   -0.418254586797   -0.601224124624   -0.883254008340
 H    0.526745413203   -1.766224124624   -1.828254008340
 H    2.627745413203   -0.680224124624   -1.137254008340
 H    1.775745413203    0.327775875376    0.032745991660
 H    0.924745413203   -1.520224124624    1.143745991660
 H   -0.302254586797   -2.459224124624    0.567745991660
 H    1.295745413203   -2.811224124624    0.208745991660
 H    1.547275413203    0.635210875376   -1.699044008340
 C   -1.420254586797    2.066775875376   -0.041254008340
 C   -1.461254586797    1.505775875376    1.446745991660
 H   -2.232254586797    2.783775875376   -0.180254008340
 H   -0.467254586797    2.570775875376   -0.202254008340
 H   -1.544254586797    1.249775875376   -0.750254008340
 H   -0.674254586797    0.757775875376    1.512745991660
 H   -2.416064586797    1.015800875376    1.688145991660
 H   -1.252744586797    2.261878875376    2.217995991660
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-032LYS-091LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032LYS-091LEU-1-dimer.npy', np.array(charges))