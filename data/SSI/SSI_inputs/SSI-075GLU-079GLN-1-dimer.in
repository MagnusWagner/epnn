import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C    1.920314312150    1.732585485343    0.907763452352
 C    0.809314312150    1.283585485343    1.846763452352
 O    0.200314312150    0.217585485343    1.598763452352
 O    0.539314312150    2.003585485343    2.834763452352
 H    2.862314312150    1.833585485343    1.450763452352
 H    1.653314312150    2.716585485343    0.513763452352
 H    2.062371612150    1.040326485343    0.064793452352
 C   -1.260685687850   -2.244414514657   -2.812236547648
 C   -0.848685687850   -1.228414514657   -1.792236547648
 O   -0.562685687850   -0.071414514657   -2.093236547648
 N   -0.800685687850   -1.665414514657   -0.562236547648
 H   -0.493685687850   -1.012414514657    0.159763452352
 H   -1.037685687850   -2.618414514657   -0.334236547648
 H   -2.228685687850   -2.661414514657   -2.530236547648
 H   -0.536685687850   -3.052414514657   -2.819236547648
 H   -1.349759687850   -1.786832514657   -3.808576547648
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-075GLU-079GLN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-075GLU-079GLN-1-dimer.npy', np.array(charges))