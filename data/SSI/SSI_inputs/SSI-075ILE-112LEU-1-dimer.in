import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.372260093639    1.749385860554    0.305129278702
 C   -1.109260093639    2.639385860554    1.330129278702
 H    0.375739906361    1.132385860554    0.801129278702
 H   -1.093260093639    1.087385860554   -0.175870721298
 H    0.107739906361    2.356385860554   -0.461870721298
 H   -1.483260093639    2.024385860554    2.147129278702
 H   -1.949260093639    3.118385860554    0.826129278702
 H   -0.422085093639    3.412457860554    1.704499278702
 C    0.870739906361   -1.882614139446   -0.126870721298
 C    0.605739906361   -2.505614139446   -1.498870721298
 H    1.107739906361   -2.654614139446    0.603129278702
 H    1.719739906361   -1.203614139446   -0.188870721298
 H   -0.005260093639   -1.323614139446    0.202129278702
 H    1.451739906361   -3.120614139446   -1.750870721298
 H   -0.311689093639   -3.110560139446   -1.547490721298
 H    0.562129906361   -1.724841139446   -2.272490721298
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-075ILE-112LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-075ILE-112LEU-1-dimer.npy', np.array(charges))