import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.574387966020   -0.677358814807    1.913192364009
 C   -1.234387966020    0.701641185193    2.484192364009
 H   -2.018387966020   -0.574358814807    0.920192364009
 H   -0.662387966020   -1.261358814807    1.819192364009
 H   -2.274387966020   -1.197358814807    2.569192364009
 H   -0.484387966020    1.165641185193    1.847192364009
 H   -2.149757966020    1.311641185193    2.483462364009
 H   -0.831057966020    0.617071185193    3.504082364009
 C    0.784612033980   -0.383358814807   -1.090807635991
 C    1.872612033980   -0.689358814807   -2.120807635991
 C    0.203612033980    1.016641185193   -1.258807635991
 H   -0.025387966019   -1.105358814807   -1.160807635991
 H    1.195612033980   -0.432358814807   -0.083807635991
 H    2.584612033980    0.137641185193   -2.119807635991
 H   -0.293387966020    1.114641185193   -2.221807635991
 H   -0.534387966020    1.197641185193   -0.478807635991
 H    0.994612033980    1.763641185193   -1.178807635991
 H    2.440932033980   -1.605058814807   -1.900587635991
 H    1.437892033980   -0.753498814807   -3.129227635991
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-024LEU-260ILE-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024LEU-260ILE-1-dimer.npy', np.array(charges))