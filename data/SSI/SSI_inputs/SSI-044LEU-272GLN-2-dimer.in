import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.410022580831   -1.419465358586   -1.543214636666
 C    0.618022580831   -0.640465358586   -2.613214636666
 H    2.288022580831   -1.884465358586   -1.992214636666
 H    1.733022580831   -0.741465358586   -0.752214636666
 H    0.776022580831   -2.194465358586   -1.109214636666
 H   -0.247977419169   -0.164465358586   -2.160214636666
 H    0.277932580831   -1.294045358586   -3.430014636666
 H    1.259342580831    0.126784641414   -3.071514636666
 C   -0.752977419169    0.218534641414    1.114785363334
 C   -0.475977419169    0.233534641414    2.633785363334
 C   -0.842977419169    1.624534641414    0.487785363334
 H    0.045022580831   -0.344465358586    0.631785363334
 H   -1.696977419169   -0.304465358586    0.955785363334
 H   -1.326977419169    0.675534641414    3.149785363334
 H   -1.605977419169    1.608534641414   -0.291214636666
 H   -1.128977419169    2.345534641414    1.253785363334
 H    0.429482580831    0.823554641414    2.838775363334
 H   -0.384677419169   -0.804075358586    2.987385363334
 H    0.105272580831    1.953444641414    0.037625363334
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-044LEU-272GLN-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044LEU-272GLN-2-dimer.npy', np.array(charges))