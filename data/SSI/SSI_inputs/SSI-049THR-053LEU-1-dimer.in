import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.965109750765    1.201355253308   -0.861544882362
 C    0.684109750765    1.762355253308   -2.258544882362
 H    1.274109750765    0.157355253308   -0.928544882362
 H    1.758109750765    1.779355253308   -0.386544882362
 H    0.073109750765    1.279355253308   -0.239544882362
 H    0.267109750765    2.765355253308   -2.163544882362
 H   -0.005120249235    1.126634253308   -2.833720882362
 H    1.619899750765    1.803877253308   -2.835241882362
 C   -0.785890249235   -0.813644746692    1.901455117638
 C   -0.867890249235   -2.155644746692    1.222455117638
 H   -1.197890249235   -0.874644746692    2.909455117638
 H    0.255109750765   -0.496644746692    1.962455117638
 H   -1.340890249235   -0.068644746692    1.331455117638
 H   -0.431890249235   -2.058644746692    0.229455117638
 H   -1.927040249235   -2.438036746692    1.130480217638
 H   -0.290310249235   -2.908888746692    1.778351917638
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-049THR-053LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-049THR-053LEU-1-dimer.npy', np.array(charges))