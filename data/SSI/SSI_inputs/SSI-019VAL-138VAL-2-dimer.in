import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.398561668774    0.201690203345   -1.936825849219
 C   -1.922561668774    0.305690203345   -1.970825849219
 H   -0.001561668774    0.899690203345   -1.199825849219
 H   -0.137561668774   -0.803309796655   -1.646825849219
 H    0.024438331226    0.451690203345   -2.907825849219
 H   -2.179561668774    1.349690203345   -2.155825849219
 H   -2.343389668774   -0.311619796655   -2.778185849219
 H   -2.349588668774    0.015254203345   -0.999595849219
 C    0.494438331226   -0.082309796655    1.639174150781
 C    1.831438331226   -0.428309796655    2.264174150781
 H   -0.300561668774   -0.236309796655    2.367174150781
 H    0.485438331226    0.960690203345    1.316174150781
 H    0.293438331226   -0.732309796655    0.788174150781
 H    1.821438331226   -1.481309796655    2.535174150781
 H    2.645008331226   -0.231385796655    1.550504150781
 H    1.985866331226    0.157798203345    3.182124150781
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-019VAL-138VAL-2-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019VAL-138VAL-2-dimer.npy', np.array(charges))