import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -1.082195204396    0.351038139289   -1.411112021042
 C   -1.549195204396    1.756038139289   -1.041112021042
 H   -1.720195204396   -0.069961860711   -2.189112021042
 H   -0.055195204396    0.395038139289   -1.781112021042
 H   -1.115195204396   -0.290961860711   -0.531112021042
 H   -0.868195204396    2.139038139289   -0.284112021042
 H   -2.563075204396    1.727278139289   -0.615422021042
 H   -1.505085204396    2.421278139289   -1.916042021042
 C    1.818804795604   -0.794961860711    0.713887978958
 C    0.808804795604   -1.316961860711    1.734887978958
 H    1.432804795604   -0.884961860711   -0.300112021042
 H    2.021804795604    0.259038139289    0.907887978958
 H    2.752804795604   -1.354961860711    0.790887978958
 H   -0.103195204396   -0.733961860711    1.630887978958
 H    0.576434795604   -2.379851860711    1.572797978958
 H    1.191304795604   -1.169291860711    2.755617978958
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-085LEU-138LEU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-085LEU-138LEU-1-dimer.npy', np.array(charges))