import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.645384828832    1.456792014044   -2.432680099947
 C   -1.432384828832    1.154792014044   -0.107680099947
 N   -1.245384828832    0.647792014044    1.094319900053
 N   -0.562384828832    0.904792014044   -1.074680099947
 N   -2.478384828832    1.928792014044   -0.329680099947
 H   -0.411384828832    0.064792014044    1.253319900053
 H   -1.926384828832    0.762792014044    1.826319900053
 H    0.170615171168    0.221792014044   -0.873680099947
 H   -2.678384828832    2.241792014044   -1.277680099947
 H   -3.152384828832    2.141792014044    0.385319900053
 H    0.339615171168    1.418792014044   -2.902680099947
 H   -0.929384828832    2.508792014044   -2.375680099947
 H   -1.374644828832    0.937432014044   -3.071780099947
 C    2.609615171168   -2.523207985956    1.020319900053
 C    1.548615171168   -1.483207985956    0.688319900053
 O    1.000615171168   -0.874207985956    1.638319900053
 O    1.273615171168   -1.253207985956   -0.510680099947
 H    2.542615171168   -2.763207985956    2.082319900053
 H    3.592615171168   -2.085207985956    0.834319900053
 H    2.515065171168   -3.449357985956    0.434399900053
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-037ARG-152GLU-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037ARG-152GLU-1-dimer.npy', np.array(charges))