import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.518980942582    1.928211971892    0.293131136924
 C    0.762980942582    1.433211971892    1.712131136924
 H    0.350980942582    3.006211971892    0.293131136924
 H    1.388980942582    1.705211971892   -0.326868863076
 H   -0.352019057418    1.432211971892   -0.134868863076
 H    0.963980942582    0.365211971892    1.671131136924
 H   -0.131359057418    1.617700971892    2.325414136924
 H    1.639190942582    1.937319971892    2.145882136924
 C   -0.900019057418   -1.581788028108   -0.289868863076
 C   -0.384019057418   -1.782788028108   -1.712868863076
 H   -1.257019057418   -2.528788028108    0.121131136924
 H   -0.099019057418   -1.202788028108    0.343131136924
 H   -1.721019057418   -0.863788028108   -0.295868863076
 H   -0.085019057418   -0.812788028108   -2.107868863076
 H   -1.180189057418   -2.190676028108   -2.352973863076
 H    0.507230942582   -2.427509028108   -1.711430863076
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-028LEU-058ALA-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028LEU-058ALA-1-dimer.npy', np.array(charges))