import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
-1 1 
 C   -2.117353833484   -2.317154919401    0.299470020204
 C   -1.900353833484   -0.864154919401   -0.110529979796
 O   -0.926353833484   -0.610154919401   -0.835529979796
 O   -2.658353833484    0.022845080599    0.323470020204
 H   -2.091353833484   -2.934154919401   -0.601529979796
 H   -3.095353833484   -2.446154919401    0.766470020204
 H   -1.324323833484   -2.650494919401    0.985020020204
 C    1.036646166516    1.357845080599    1.165470020204
 C    1.968646166516    0.946845080599    0.057470020204
 O    3.148646166516    1.276845080599    0.082470020204
 N    1.476646166516    0.226845080599   -0.921529979796
 H    2.076646166516   -0.051154919401   -1.679529979796
 H    0.497646166516    0.013845080599   -0.928529979796
 H    0.177646166516    0.689845080599    1.199470020204
 H    0.672646166516    2.357845080599    0.928470020204
 H    1.544676166516    1.362895080599    2.141110020204
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-096ASP-100ASN-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-096ASP-100ASN-1-dimer.npy', np.array(charges))