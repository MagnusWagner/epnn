import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    0.903168245509   -1.428907997591   -0.213234501341
 C    2.147168245509   -2.253907997591   -0.522234501341
 H    0.412168245509   -1.149907997591   -1.147234501341
 H    0.206168245509   -2.016907997591    0.382765498659
 H    1.185168245509   -0.522907997591    0.326765498659
 H    2.655168245509   -2.420907997591    0.420765498659
 H    2.829418245509   -1.721037997591   -1.200894501341
 H    1.822278245509   -3.239467997591   -0.887094501341
 C   -1.140831754491    1.656092002409   -0.272234501341
 C   -1.902831754491    2.032092002409    1.002765498659
 H   -0.094831754491    1.960092002409   -0.205234501341
 H   -1.181831754491    0.577092002409   -0.405234501341
 H   -1.593831754491    2.125092002409   -1.142234501341
 H   -2.916831754491    1.656092002409    0.899765498659
 H   -1.962215754491    3.122922002409    1.131435498659
 H   -1.440280754491    1.565932002409    1.885225498659
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-049LEU-054VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-049LEU-054VAL-1-dimer.npy', np.array(charges))