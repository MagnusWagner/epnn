import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C    1.708307286775   -0.431056115690    0.933837953955
 C    2.010307286775   -0.343056115690   -0.557162046045
 H    2.456307286775   -1.052056115690    1.430837953955
 H    1.722307286775    0.565943884310    1.369837953955
 H    0.722307286775   -0.867056115690    1.095837953955
 H    1.311307286775    0.377943884310   -0.980162046045
 H    1.789597286775   -1.308275115690   -1.036370046045
 H    3.024507286775    0.057720884310   -0.701326046045
 C   -1.935692713225   -0.361056115690   -0.038162046045
 C   -1.777692713225    1.128943884310   -0.347162046045
 H   -1.219692713225   -0.949056115690   -0.614162046045
 H   -1.746692713225   -0.528056115690    1.022837953955
 H   -2.948692713225   -0.694056115690   -0.250162046045
 H   -0.844692713225    1.464943884310    0.106837953955
 H   -1.722132713225    1.302038884310   -1.432036046045
 H   -2.606692713225    1.704077884310    0.091000953955
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-021ALA-057VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-021ALA-057VAL-1-dimer.npy', np.array(charges))