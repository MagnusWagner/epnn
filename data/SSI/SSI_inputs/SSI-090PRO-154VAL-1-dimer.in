import numpy as np

memory 8 GB

set {
scf_type pk
basis aug-cc-pvdz
d_convergence 10
reference rhf
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}

molecule test {
0 1 
 C   -0.153855517046    1.067006820044   -0.981595216523
 C   -0.717855517046    1.974006820044   -2.037595216523
 C    0.613144482954    0.001006820044   -1.721595216523
 H   -0.991855517046    0.610006820044   -0.458595216523
 H    0.479144482954    1.610006820044   -0.278595216523
 H   -1.701855517046    2.337006820044   -1.738595216523
 H   -0.037855517046    2.808006820044   -2.212595216523
 H    0.646144482954   -0.933993179956   -1.160595216523
 H    1.629144482954    0.354006820044   -1.891595216523
 H   -0.766573517046    1.343666820044   -2.937760216523
 H    0.097652482954   -0.102663179956   -2.687783216523
 C   -0.276855517046   -1.482993179956    1.699404783477
 C    0.521144482954   -1.485993179956    2.987404783477
 H   -0.191855517046   -0.507993179956    1.234404783477
 H    0.132144482954   -2.226993179956    1.012404783477
 H   -1.323855517046   -1.704993179956    1.879404783477
 H    1.531144482954   -1.144993179956    2.765404783477
 H    0.078371482954   -0.803203179956    3.727504783477
 H    0.590105482954   -2.507473179956    3.389674783477
}

e, wfn = energy('pbe', return_wfn=True)
wfn.to_file('SSI-090PRO-154VAL-1-dimer_wfn')
oeprop(wfn, 'MULLIKEN_CHARGES')
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-090PRO-154VAL-1-dimer.npy', np.array(charges))