import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.816043318033973     0.798546329156849    -1.271733361179212
    O                0.839043318033973     0.910546329156849    -0.241733361179212
    H                0.402043318033973     1.769546329156849    -0.362733361179212
    H                2.175043318033973     1.796546329156849    -1.522733361179212
    H                2.669873318033973     0.205886329156849    -0.911547361179212
    H                1.361363318033973     0.347446329156849    -2.166036361179212
    C               -1.598956681966026    -0.961453670843151     1.417266638820788
    O               -1.068956681966027    -0.843453670843151     0.105266638820788
    H               -0.287956681966027    -0.246453670843151     0.130266638820788
    H               -2.531956681966027    -1.521453670843151     1.363266638820789
    H               -1.817956681966027     0.026546329156849     1.824266638820788
    H               -0.906374681966027    -1.503163670843151     2.078236638820789

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-123THR-136SER-1-dimer.npy', np.array(charges))