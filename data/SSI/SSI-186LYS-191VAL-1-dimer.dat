import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                0.911117780851037    -0.126955797011825     0.946331139225903
    C                2.229117780851037    -0.815955797011825     1.082331139225903
    N                1.026117780851037     1.350044202988175     1.076331139225903
    H                0.461117780851037    -0.398955797011825    -0.009668860774097
    H                0.247117780851037    -0.467955797011825     1.749331139225903
    H                2.631117780851037    -0.621955797011825     2.079331139225903
    H                2.939117780851037    -0.438955797011825     0.341331139225903
    H                1.635117780851037     1.745044202988175     0.367331139225903
    H                0.124117780851037     1.806044202988175     0.997331139225903
    H                1.410117780851037     1.611044202988175     1.979331139225903
    H                2.116737780851037    -1.902817797011825     0.955441139225903
    C               -2.388882219148963    -0.570955797011825    -0.931668860774097
    C               -1.851882219148963    -0.031955797011825    -2.262668860774097
    H               -2.425882219148964    -1.657955797011825    -0.946668860774097
    H               -1.749882219148963    -0.247955797011825    -0.112668860774097
    H               -3.393882219148963    -0.181955797011825    -0.756668860774097
    H               -1.715882219148963     1.041044202988175    -2.132668860774098
    H               -2.565812219148963    -0.176862797011825    -3.086868860774098
    H               -0.866652219148963    -0.459940797011825    -2.499638860774097

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-186LYS-191VAL-1-dimer.npy', np.array(charges))