import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                3.223871769674159     1.408506659514998    -2.199578081011370
    C                1.714871769674159     0.326506659514998     0.925421918988630
    C                0.983871769674159     0.655506659514998    -1.119578081011370
    C                2.309871769674160     0.947506659514998    -1.100578081011370
    N                0.635871769674159     0.271506659514998     0.154421918988630
    N                2.746871769674160     0.734506659514998     0.193421918988630
    H               -0.276128230325841    -0.063493340485002     0.474421918988630
    H                1.745871769674159     0.063506659514998     1.978421918988630
    H                0.342871769674159     0.667506659514998    -1.971578081011370
    H                4.209871769674160     0.987506659514998    -2.012578081011370
    H                3.284871769674159     2.493506659514999    -2.144578081011370
    H                2.897088769674159     1.119956659514998    -3.209508081011370
    C               -2.726128230325840    -1.692493340485002    -0.518578081011370
    C               -2.684128230325840    -0.974493340485002     0.819421918988630
    O               -1.588128230325841    -0.871493340485002     1.413421918988630
    O               -3.746128230325841    -0.493493340485002     1.272421918988630
    H               -2.464128230325840    -2.742493340485002    -0.397578081011370
    H               -1.974128230325841    -1.224493340485002    -1.154578081011370
    H               -3.712510230325840    -1.606033340485002    -0.997718081011370

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-045HIE-051GLU-1-dimer.npy', np.array(charges))