import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.960983759380326     1.325057349705911     0.861500814503705
    C               -2.891983759380326     0.398057349705911     0.101500814503705
    O               -1.155983759380326     0.560057349705911     1.742500814503706
    H               -1.338983759380326     1.882057349705911     0.160500814503705
    H               -2.551983759380326     2.038057349705911     1.437500814503705
    H               -2.275983759380326    -0.323942650294089    -0.431499185496295
    H               -0.634983759380326     1.195057349705911     2.258500814503705
    H               -3.510130759380326     0.973077349705911    -0.603659185496295
    H               -3.503332759380326    -0.158836650294089     0.826840814503705
    C                1.402016240619674    -0.916942650294089    -2.126499185496294
    C                1.596016240619674    -0.600942650294089    -0.671499185496295
    O                2.516016240619674    -1.090942650294089    -0.024499185496295
    N                0.688016240619674     0.177057349705911    -0.128499185496295
    H                0.693016240619674     0.273057349705911     0.872500814503705
    H               -0.029983759380326     0.593057349705911    -0.694499185496295
    H                2.264016240619674    -1.480942650294089    -2.485499185496295
    H                1.353016240619674     0.021057349705911    -2.681499185496295
    H                0.477486240619674    -1.489892650294089    -2.290716185496295

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-023SER-051ASN-1-dimer.npy', np.array(charges))