import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.110407301058645     2.440547471497032    -2.805091755916234
    C               -1.445407301058645     0.529547471497031     0.192908244083766
    C               -0.506407301058645     0.682547471497031    -1.791091755916234
    C               -1.570407301058645     1.534547471497032    -1.753091755916234
    N               -0.457407301058645     0.063547471497031    -0.573091755916234
    N               -2.145407301058645     1.416547471497031    -0.502091755916234
    H                0.229592698941355    -0.639452528502969    -0.304091755916234
    H               -1.700407301058645     0.278547471497031     1.216908244083766
    H                0.207592698941355     0.462547471497031    -2.572091755916234
    H               -1.285407301058645     2.712547471497031    -3.456091755916234
    H               -2.471407301058645     3.337547471497031    -2.293091755916234
    H               -2.909996301058645     1.989477471497031    -3.411061755916234
    C                2.136592698941355    -0.213452528502969     2.210908244083766
    C                1.884592698941355    -1.611452528502969     1.647908244083766
    O                1.414592698941355    -1.789452528502969     0.503908244083766
    O                2.156592698941355    -2.566452528502968     2.396908244083767
    H                2.925592698941355    -0.264452528502969     2.964908244083766
    H                1.222592698941355     0.157547471497031     2.676908244083766
    H                2.456146698941355     0.497957471497031     1.435158244083766

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-051HIE-277ASP-1-dimer.npy', np.array(charges))