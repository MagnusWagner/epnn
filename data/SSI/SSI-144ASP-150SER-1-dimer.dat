import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.784499865181590    -1.600878351072509    -1.491611740960376
    C               -0.933499865181590    -0.434878351072509    -0.956611740960375
    O               -0.972499865181590    -0.175878351072509     0.270388259039624
    O               -0.166499865181590     0.175121648927491    -1.710611740960376
    H               -2.719499865181590    -1.649878351072509    -0.929611740960376
    H               -1.233499865181590    -2.520878351072509    -1.293611740960376
    H               -2.030479865181591    -1.576568351072509    -2.563481740960376
    C                2.215500134818409     1.510121648927491     1.681388259039624
    O                1.391500134818410     0.391121648927491     1.926388259039624
    H                0.636500134818410     0.401121648927491     1.306388259039624
    H                3.005500134818409     1.525121648927491     2.434388259039625
    H                1.636500134818410     2.432121648927491     1.774388259039624
    H                2.680791134818409     1.452231648927491     0.686328259039624

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-144ASP-150SER-1-dimer.npy', np.array(charges))