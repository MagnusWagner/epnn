import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.943902954799612     0.369384900143060     1.412017847955107
    C                2.238902954799612     1.479384900143061     2.433017847955107
    H                2.861902954799612    -0.161615099856940     1.155017847955107
    H                1.236902954799612    -0.341615099856940     1.844017847955107
    H                1.493902954799612     0.776384900143060     0.509017847955107
    H                1.293902954799612     1.964384900143060     2.611017847955107
    H                2.941792954799612     2.220676900143060     2.025053847955107
    H                2.595072954799612     1.073052100143061     3.391160847955107
    C               -1.113097045200388    -0.376615099856940    -0.822982152044893
    C               -1.852097045200388     0.345384900143060    -1.911982152044893
    C               -1.283097045200388    -1.836615099856940    -1.159982152044893
    H               -1.502097045200388    -0.133615099856940     0.167017847955107
    H               -0.056097045200388    -0.122615099856940    -0.892982152044893
    H               -2.866097045200388     0.578384900143061    -1.583982152044893
    H               -1.310097045200388     1.254384900143060    -2.142982152044893
    H               -2.140097045200388    -2.215615099856940    -0.597982152044893
    H               -0.396097045200388    -2.406615099856940    -0.880982152044893
    H               -1.893757045200388    -0.342012199856940    -2.769740152044893
    H               -1.479417045200388    -1.916437099856940    -2.239374152044893

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-015ILE-019PRO-1-dimer.npy', np.array(charges))