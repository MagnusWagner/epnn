import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.074040838931129    -1.433708339842920    -0.350969504911281
    C               -0.425040838931129    -1.618708339842921    -1.781969504911281
    C                1.447959161068871    -1.410708339842921    -0.354969504911281
    H               -0.421040838931129    -2.316708339842921     0.164030495088719
    H               -0.521040838931129    -0.529708339842920     0.054030495088719
    H               -1.387040838931129    -2.101708339842921    -1.848969504911281
    H               -0.353040838931129    -0.688708339842920    -2.343969504911282
    H                1.800959161068871    -0.381708339842921    -0.445969504911281
    H                0.314376161068871    -2.363976339842920    -2.110359504911282
    H                1.705298161068871    -1.969911339842920    -1.266599504911281
    H                1.863860161068871    -1.860370339842921     0.558720495088719
    C                0.094959161068871     1.897291660157080     1.611030495088719
    C               -1.056040838931129     2.491291660157079     0.862030495088719
    H                0.112959161068871     2.286291660157080     2.630030495088719
    H                0.003959161068871     0.814291660157080     1.672030495088719
    H                1.039959161068871     2.157291660157080     1.138030495088719
    H               -1.053040838931129     2.077291660157079    -0.147969504911281
    H               -0.959637838931129     3.584866660157080     0.792740495088719
    H               -2.001215838931129     2.180321660157079     1.331010495088719

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-117PRO-126ALA-1-dimer.npy', np.array(charges))