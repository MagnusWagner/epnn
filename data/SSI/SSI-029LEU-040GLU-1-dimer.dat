import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -2.000607321093821    -1.253020236741533     0.966172625773211
    C               -1.208607321093821    -2.461020236741533     0.481172625773211
    H               -2.730607321093820    -1.558020236741533     1.717172625773211
    H               -1.320607321093821    -0.546020236741533     1.426172625773211
    H               -2.507607321093821    -0.778020236741533     0.126172625773211
    H               -0.653607321093821    -2.160020236741533    -0.407827374226789
    H               -1.892837321093821    -3.282670236741533     0.222872625773211
    H               -0.483686321093821    -2.778714236741533     1.245082625773211
    C                1.030392678906179     0.731979763258467    -0.366827374226789
    C                0.577392678906179     1.313979763258467    -1.704827374226789
    C                1.669392678906179     1.719979763258467     0.601172625773211
    H                0.161392678906179     0.295979763258467     0.110172625773211
    H                1.737392678906179    -0.073020236741533    -0.571827374226789
    H               -0.169607321093821     2.076979763258467    -1.528827374226789
    H                2.597392678906179     2.105979763258467     0.173172625773211
    H                0.992392678906179     2.555979763258467     0.763172625773211
    H                0.139522678906179     0.522328763258467    -2.330577374226789
    H                1.431206678906179     1.759479763258467    -2.236367374226789
    H                1.890031678906179     1.241807763258467     1.566922625773211

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-029LEU-040GLU-1-dimer.npy', np.array(charges))