import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                2.522404744509921    -0.087397036534337     0.187008682618635
    O                1.234404744509921    -0.156397036534337     0.792008682618635
    H                1.337404744509920    -0.152397036534337     1.754008682618635
    H                3.089404744509920     0.727602963465663     0.631008682618635
    H                3.062884744509920    -1.031087036534337     0.352318682618635
    H                2.421464744509921     0.110182963465663    -0.890381317381365
    C               -2.285595255490080     0.803602963465663    -0.534991317381365
    N               -1.507595255490080    -0.485397036534337    -0.514991317381365
    H               -1.373595255490079    -0.849397036534337    -1.451991317381365
    H               -0.592595255490079    -0.372397036534337    -0.076991317381365
    H               -2.024595255490079    -1.201397036534337     0.005008682618635
    H               -1.755595255490079     1.509602963465662    -1.185991317381365
    H               -2.302595255490079     1.220602963465663     0.479008682618635
    H               -3.325675255490080     0.737352963465663    -0.886911317381365

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-060THR-087LYS-1-dimer.npy', np.array(charges))