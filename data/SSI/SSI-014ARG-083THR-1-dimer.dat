import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.544724932830600     1.188221985779400    -1.635980396514087
    C                0.570724932830600    -0.342778014220600    -1.602980396514088
    C                1.092724932830600     1.858221985779400    -0.335980396514087
    H                1.128724932830600     1.535221985779400    -2.489980396514087
    H               -0.475275067169400     1.545221985779400    -1.765980396514087
    H                0.679724932830600    -0.799778014220600    -0.651980396514088
    H                1.579724932830600    -0.559778014220600    -1.959980396514087
    H                1.230724932830600     2.925221985779400    -0.518980396514088
    H                0.332724932830600     1.746221985779400     0.438019603485912
    H               -0.057005067169400    -0.831173014220600    -2.362865396514087
    H                2.046684932830599     1.418279985779400    -0.009764396514088
    C               -0.793275067169400    -0.881778014220600     1.191019603485912
    C               -1.415275067169400    -1.741778014220600     2.282019603485912
    H               -1.143275067169401     0.153221985779400     1.192019603485913
    H                0.268724932830600    -0.830778014220600     1.432019603485913
    H               -0.899275067169400    -1.421778014220600     0.260019603485912
    H               -0.685275067169400    -2.472778014220600     2.635019603485912
    H               -2.296905067169400    -2.279477014220600     1.903055603485913
    H               -1.705555067169400    -1.081705014220600     3.112707603485913

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-014ARG-083THR-1-dimer.npy', np.array(charges))