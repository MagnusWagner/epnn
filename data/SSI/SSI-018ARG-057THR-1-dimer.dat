import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.010742563526711    -0.921154655752983     1.067628442654406
    C               -1.445257436473289    -1.002154655752983     1.527628442654406
    C                0.366742563526711    -1.985154655752983     0.073628442654406
    H                0.193742563526711     0.036845344247017     0.611628442654406
    H                0.702742563526711    -0.995154655752983     1.902628442654406
    H               -1.606257436473289    -1.920154655752983     2.088628442654406
    H               -2.103257436473289    -0.999154655752983     0.655628442654406
    H               -0.367257436473289    -1.953154655752983    -0.735371557345594
    H                1.348742563526711    -1.740154655752983    -0.339371557345594
    H               -1.682245436473289    -0.135844655752983     2.162727442654406
    H                0.407284563526711    -2.991204655752983     0.516591442654406
    C               -0.004257436473289     2.134845344247017    -0.794371557345594
    C                1.062742563526711     1.705845344247017    -1.801371557345594
    H               -0.462257436473289     3.068845344247017    -1.098371557345594
    H               -0.800257436473289     1.394845344247017    -0.734371557345594
    H                0.447742563526711     2.282845344247017     0.184628442654406
    H                1.958742563526711     1.436845344247017    -1.239371557345594
    H                1.333352563526711     2.513395344247017    -2.497531557345594
    H                0.739763563526711     0.808165344247017    -2.348963557345594

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-018ARG-057THR-1-dimer.npy', np.array(charges))