import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.093996700346672     0.411754705162925    -0.708837762767049
    C                2.455996700346672     0.714754705162925    -0.078837762767049
    C                1.043996700346672     0.517754705162925    -2.235837762767049
    H                0.806996700346672    -0.602245294837075    -0.433837762767049
    H                0.350996700346672     1.089754705162925    -0.284837762767049
    H                2.755996700346672     1.717754705162925    -0.379837762767049
    H                1.831996700346672    -0.097245294837075    -2.670837762767048
    H                3.206406700346673    -0.009985294837075    -0.427617762767049
    H                2.378806700346672     0.701774705162925     1.018372237232951
    H                0.086836700346672     0.135904705162925    -2.620577762767049
    H                1.202156700346672     1.559134705162925    -2.552877762767049
    C               -1.630003299653328    -1.151245294837075     1.238162237232951
    C               -2.886003299653328    -0.468245294837075     1.745162237232951
    H               -1.743003299653328    -2.234245294837075     1.240162237232951
    H               -1.451003299653328    -0.835245294837075     0.211162237232951
    H               -0.776003299653328    -0.866245294837075     1.854162237232951
    H               -3.728003299653328    -0.784245294837075     1.129162237232951
    H               -2.739003299653327     0.599754705162925     1.593162237232951
    H               -3.111713299653327    -0.669595294837075     2.802762237232951

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-114LEU-118ILE-1-dimer.npy', np.array(charges))