import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.492495459679022     2.071507278182707     0.497826909252299
    C               -0.631495459679022     3.060507278182707     1.666826909252300
    H               -1.001495459679022     1.139507278182707     0.743826909252299
    H               -0.957495459679022     2.501507278182707    -0.389173090747701
    H                0.554504540320978     1.894507278182707     0.255826909252299
    H               -0.049495459679022     3.953507278182707     1.434826909252300
    H               -0.270555459679022     2.617377278182708     2.606696909252300
    H               -1.689856459679022     3.338147278182708     1.779916909252300
    C                0.451504540320978    -1.216492721817293    -0.955173090747701
    C               -0.796495459679022    -2.065492721817293    -1.172173090747700
    C                1.494504540320978    -1.933492721817293    -0.091173090747701
    H                0.904504540320978    -1.012492721817293    -1.927173090747701
    H                0.185504540320978    -0.265492721817293    -0.511173090747701
    H               -1.300495459679022    -2.230492721817293    -0.219173090747701
    H               -0.479495459679022    -3.032492721817293    -1.560173090747700
    H                1.619504540320978    -2.955492721817292    -0.466173090747701
    H                2.453504540320977    -1.419492721817293    -0.217173090747701
    H               -1.503382459679022    -1.587325721817293    -1.866193090747700
    H                1.230854540320978    -1.947484721817293     0.976676909252299

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-041VAL-064LYS-1-dimer.npy', np.array(charges))