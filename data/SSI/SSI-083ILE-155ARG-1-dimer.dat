import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.439697754410194    -1.732421153733613    -1.304102513776903
    C                1.225697754410194    -2.935421153733613    -1.792102513776903
    H                0.473697754410194    -1.668421153733613    -0.218102513776903
    H                0.880697754410194    -0.825421153733613    -1.715102513776903
    H               -0.596302245589806    -1.798421153733613    -1.639102513776903
    H                2.232697754410194    -2.896421153733613    -1.372102513776903
    H                1.318697754410194    -2.844421153733613    -2.873102513776903
    H                0.754017754410194    -3.893813153733613    -1.529422513776903
    C               -0.237302245589806     1.212578846266387     0.744897486223097
    C                0.066697754410194     2.682578846266388     0.912897486223097
    C               -1.504302245589806     0.839578846266387     1.488897486223097
    H               -0.385302245589806     0.988578846266387    -0.312102513776903
    H                0.593697754410194     0.614578846266387     1.117897486223097
    H                0.063697754410194     2.922578846266387     1.978897486223097
    H               -0.731302245589806     3.258578846266387     0.438897486223097
    H               -1.370302245589806     1.020578846266387     2.557897486223097
    H               -2.295302245589806     1.515578846266387     1.157897486223097
    H                1.034817754410194     2.995918846266387     0.495107486223097
    H               -1.860262245589806    -0.185971153733613     1.311297486223097

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083ILE-155ARG-1-dimer.npy', np.array(charges))