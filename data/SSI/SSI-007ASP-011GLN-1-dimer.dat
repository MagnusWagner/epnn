import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.809469767363588     3.004613036781192    -0.813665838130589
    C                0.617469767363587     2.122613036781192    -0.457665838130589
    O               -0.113530232636413     1.634613036781192    -1.344665838130589
    O                0.388469767363587     1.873613036781192     0.748334161869411
    H                1.693469767363587     3.971613036781192    -0.320665838130589
    H                1.836469767363587     3.178613036781192    -1.891665838130589
    H                2.756119767363587     2.547913036781192    -0.489203838130589
    C                0.748469767363587    -2.088386963218808     0.742334161869411
    C               -0.728530232636413    -2.129386963218808     0.412334161869411
    O               -1.225530232636413    -1.306386963218808    -0.360665838130589
    N               -1.452530232636412    -3.058386963218808     1.023334161869411
    H                0.839469767363587    -2.213386963218808     1.822334161869411
    H                1.130469767363588    -1.100386963218808     0.505334161869411
    H               -2.444530232636413    -3.100386963218808     0.836334161869411
    H               -1.020530232636413    -3.705386963218808     1.668334161869411
    H                1.343019767363588    -2.857766963218808     0.227971161869411

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007ASP-011GLN-1-dimer.npy', np.array(charges))