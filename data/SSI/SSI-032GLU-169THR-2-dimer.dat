import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.935434136293873    -0.039094219314931    -1.719939048069400
    C                1.390434136293872     0.216905780685069    -0.300939048069400
    O                0.534434136293872     0.095905780685069     0.602060951930600
    O                2.578434136293872     0.504905780685069    -0.054939048069400
    H                0.001434136293872     0.493905780685069    -1.909939048069400
    H                0.713434136293872    -1.105094219314931    -1.813939048069400
    H                1.665344136293872     0.202515780685069    -2.506609048069400
    C               -2.919565863706127    -0.899094219314931     0.447060951930600
    O               -2.150565863706128     0.187905780685069     0.917060951930600
    H               -1.209565863706128     0.021905780685069     0.685060951930600
    H               -3.437565863706128    -1.342094219314931     1.297060951930600
    H               -3.670289863706128    -0.528394219314931    -0.266379048069400
    H               -2.266172863706128    -1.672072219314931     0.016270951930600

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-032GLU-169THR-2-dimer.npy', np.array(charges))