import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.033732944867069    -1.125511797121888     1.580406987923574
    C                0.784732944867069    -1.165511797121888     0.291406987923574
    O                0.666732944867069    -0.174511797121888    -0.463593012076426
    O                1.521732944867068    -2.153511797121888     0.048406987923574
    H               -1.041267055132931    -1.075511797121888     1.390406987923574
    H                0.317732944867069    -0.230511797121888     2.136406987923574
    H                0.264722944867069    -2.016378797121888     2.182900987923574
    C               -2.103267055132931     2.116488202878112    -0.821593012076426
    O               -0.712267055132931     2.192488202878112    -0.525593012076426
    H               -0.329267055132931     1.293488202878112    -0.603593012076426
    H               -2.471267055132931     1.129488202878112    -0.531593012076426
    H               -2.632087055132931     2.887778202878112    -0.242406012076426
    H               -2.239007055132931     2.240855802878112    -1.906078012076426

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004GLU-039THR-1-dimer.npy', np.array(charges))