import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.250206069486160     0.495580519353909    -2.449226324666828
    C               -1.025206069486160     1.091580519353909    -3.830226324666827
    H               -2.034206069486160     1.016580519353909    -1.905226324666828
    H               -1.546206069486160    -0.544419480646091    -2.564226324666827
    H               -0.325206069486160     0.555580519353909    -1.874226324666827
    H               -1.906206069486160     0.888580519353909    -4.439226324666827
    H               -0.871166069486160     2.178450519353909    -3.759626324666827
    H               -0.150426069486160     0.617500519353909    -4.299266324666827
    C               -0.401206069486160    -0.814419480646091     0.871773675333173
    C                0.368793930513840    -1.839419480646091     0.048773675333173
    C                0.531793930513840     0.095580519353909     1.648773675333173
    O                1.610793930513840     0.429580519353909     1.111773675333172
    O                0.175793930513840     0.489580519353909     2.780773675333173
    H               -1.007206069486160    -0.206419480646091     0.201773675333173
    H               -1.094206069486160    -1.306419480646091     1.536773675333173
    H                1.059793930513840    -2.374419480646091     0.694773675333173
    H                0.947793930513840    -1.305419480646091    -0.702226324666827
    H               -0.280316069486160    -2.544657480646091    -0.490946324666827

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025VAL-083GLU-2-dimer.npy', np.array(charges))