import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.620315545312021    -1.424144828834930     0.012429148722817
    C                2.812315545312021    -2.365144828834930    -0.255570851277183
    H                1.680315545312021    -1.020144828834930     1.021429148722817
    H                1.649315545312021    -0.603144828834930    -0.701570851277183
    H                0.680315545312021    -1.963144828834930    -0.112570851277183
    H                2.673315545312021    -2.847144828834930    -1.219570851277183
    H                2.915185545312021    -3.139553828834930     0.518839148722817
    H                3.750385545312021    -1.792237828834930    -0.297980851277183
    C               -1.297684454687979     0.854855171165070     0.341429148722817
    C               -2.363684454687979     1.773855171165070     0.988429148722817
    C               -0.872684454687979     1.224855171165070    -1.066570851277183
    H               -0.401684454687979     0.920855171165070     0.960429148722817
    H               -1.585684454687979    -0.191144828834930     0.420429148722817
    H               -3.232684454687979     1.848855171165070     0.335429148722817
    H               -0.440684454687979     2.225855171165070    -1.079570851277183
    H               -0.119684454687979     0.515855171165070    -1.405570851277183
    H               -1.938964454687979     2.775947171165070     1.147889148722817
    H               -2.696134454687979     1.317633171165070     1.932539148722817
    H               -1.725694454687979     1.186193171165070    -1.760020851277183

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005LEU-032MET-1-dimer.npy', np.array(charges))