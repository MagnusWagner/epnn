import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.574712564563744     0.632066795338502     0.825546917471380
    C               -0.127287435436256     1.892066795338502     1.347546917471380
    C                1.996712564563744     0.398066795338502     1.276546917471379
    H               -0.031287435436256    -0.232933204661498     1.101546917471379
    H                0.605712564563744     0.710066795338502    -0.261453082528620
    H                0.529712564563744     2.758066795338502     1.269546917471379
    H               -0.402287435436256     1.743066795338502     2.392546917471379
    H                2.604712564563744     1.279066795338502     1.045546917471380
    H                2.011712564563744     0.240066795338502     2.360546917471379
    H               -1.024637435436256     2.042954795338502     0.729486917471380
    H                2.374122564563744    -0.489142904661498     0.746996917471380
    C               -1.702287435436256    -1.583933204661498    -1.148453082528620
    C               -0.704287435436256    -1.293933204661498    -2.239453082528620
    H               -2.311287435436256    -2.456933204661498    -1.373453082528620
    H               -1.145287435436256    -1.768933204661498    -0.232453082528620
    H               -2.305287435436256    -0.689933204661498    -1.035453082528620
    H                0.009712564563744    -2.116933204661497    -2.311453082528620
    H               -0.157287435436256    -0.398933204661498    -1.959453082528620
    H               -1.205577435436256    -1.147423704661498    -3.207563082528620

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-126LYS-158ILE-1-dimer.npy', np.array(charges))