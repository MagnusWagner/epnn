import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.989356217964793    -1.422535065749341     0.085134886630940
    C               -3.078356217964793    -0.395535065749341     0.357134886630940
    H               -2.396356217964793    -2.419535065749341     0.237134886630940
    H               -1.670356217964793    -1.324535065749341    -0.943865113369060
    H               -1.117356217964794    -1.269535065749341     0.717134886630940
    H               -2.654356217964794     0.596464934250659     0.191134886630940
    H               -3.438216217964793    -0.462915065749341     1.394424886630940
    H               -3.913312217964793    -0.536255065749341    -0.345035113369060
    C                1.518643782035207     0.102464934250659    -0.195865113369060
    C                2.750643782035207     0.576464934250659    -0.994865113369060
    C                0.900643782035206     1.150464934250659     0.736134886630940
    H                0.751643782035206    -0.243535065749341    -0.885865113369060
    H                1.798643782035206    -0.738535065749341     0.435134886630940
    H                3.492643782035207     0.949464934250659    -0.285865113369060
    H                0.445643782035206     1.952464934250659     0.159134886630940
    H                0.123643782035206     0.676464934250659     1.329134886630940
    H                1.662643782035206     1.557464934250659     1.403134886630940
    H                3.189153782035206    -0.258925065749341    -1.560405113369060
    H                2.508833782035206     1.386604934250659    -1.698575113369060

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061VAL-068ILE-1-dimer.npy', np.array(charges))