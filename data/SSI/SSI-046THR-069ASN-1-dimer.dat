import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.335482524437461     1.481388604491576    -2.644157251919370
    O               -0.729482524437461     1.694388604491577    -1.361157251919370
    H               -0.975482524437461     2.587388604491576    -1.077157251919370
    H               -1.183482524437461     2.373388604491576    -3.253157251919371
    H               -0.852102524437461     0.630028604491576    -3.145687251919370
    H               -2.418772524437460     1.311248604491577    -2.557297251919370
    C                1.207517475562539    -1.409611395508424     2.265842748080630
    C                0.535517475562539    -0.911611395508424     1.000842748080630
    O                0.403517475562539    -1.630611395508424     0.011842748080630
    N                0.119517475562539     0.355388604491576     1.025842748080630
    H               -0.244482524437461     0.750388604491576     0.163842748080630
    H                0.267517475562539     0.929388604491576     1.840842748080630
    H                0.581517475562539    -1.099611395508424     3.103842748080630
    H                2.179517475562540    -0.927611395508424     2.382842748080630
    H                1.305797475562539    -2.504931395508424     2.290772748080630

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-046THR-069ASN-1-dimer.npy', np.array(charges))