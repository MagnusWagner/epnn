import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.027071871945389     2.067226587385986     1.946168192145610
    C                0.300928128054611     2.763226587385986     0.641168192145610
    H                0.050928128054611     2.767226587385986     2.779168192145610
    H               -1.046071871945389     1.685226587385986     1.899168192145611
    H                0.646928128054611     1.229226587385986     2.113168192145610
    H                0.286928128054611     2.055226587385986    -0.185831807854390
    H                1.290978028054611     3.239676587385987     0.694028192145610
    H               -0.460223771945389     3.537526587385986     0.464804192145610
    C                1.336928128054611    -1.100773412614014    -0.944831807854389
    C               -0.149071871945389    -1.242773412614014    -0.634831807854390
    O               -0.725071871945389    -0.270773412614014    -0.095831807854390
    O               -0.743071871945389    -2.304773412614014    -0.955831807854389
    H                1.830928128054611    -2.049773412614014    -0.739831807854390
    H                1.800928128054611    -0.335773412614014    -0.324831807854390
    H                1.494823128054611    -0.863933412614014    -2.007363807854390

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024THR-041GLU-1-dimer.npy', np.array(charges))