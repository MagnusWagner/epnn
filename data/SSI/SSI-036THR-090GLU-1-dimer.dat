import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.403250905768602    -1.378875688009548    -0.999787714766283
    C                1.943250905768602    -0.214875688009548    -1.846787714766283
    C                2.324250905768602    -2.588875688009547    -1.056787714766283
    O                1.292250905768602    -0.952875688009548     0.355212285233717
    H                0.424250905768602    -1.670875688009548    -1.371787714766283
    H                2.940250905768601     0.029124311990452    -1.478787714766283
    H                3.322250905768601    -2.314875688009548    -0.715787714766283
    H                1.931250905768602    -3.376875688009548    -0.414787714766283
    H                2.387250905768601    -2.970875688009547    -2.075787714766283
    H                0.488250905768602    -0.386875688009548     0.383212285233717
    H                1.293934905768602     0.665204311990452    -1.729141714766283
    H                2.039668905768601    -0.478945688009548    -2.910259014766283
    C               -1.881749094231398     1.171124311990452     2.298212285233717
    C               -1.747749094231398     1.292124311990452     0.789212285233717
    O               -0.935749094231398     0.546124311990452     0.191212285233717
    O               -2.458749094231398     2.141124311990453     0.210212285233717
    H               -2.866749094231399     0.769124311990452     2.542212285233717
    H               -1.792749094231398     2.163124311990452     2.747212285233717
    H               -1.108289094231398     0.519334311990452     2.730567285233717

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-036THR-090GLU-1-dimer.npy', np.array(charges))