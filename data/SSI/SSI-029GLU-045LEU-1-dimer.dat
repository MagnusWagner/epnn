import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.394438154830232    -0.899840135652760     1.606370769073524
    C                0.388438154830232     0.219159864347240     1.392370769073524
    O               -0.830561845169768    -0.049840135652760     1.309370769073524
    O                0.861438154830232     1.383159864347240     1.356370769073524
    H                1.728438154830232    -0.828840135652760     2.641370769073524
    H                2.271438154830232    -0.740840135652760     0.976370769073524
    H                1.004788154830232    -1.909200135652760     1.407950769073524
    C               -0.595561845169768    -0.364840135652760    -2.081629230926476
    C               -1.191561845169768    -0.276840135652760    -3.493629230926476
    H               -1.163561845169768     0.270159864347240    -1.403629230926476
    H               -0.642561845169768    -1.389840135652760    -1.724629230926476
    H                0.444438154830232    -0.040840135652760    -2.093629230926476
    H               -2.236561845169768    -0.578840135652760    -3.419629230926476
    H               -1.152761845169768     0.771389864347240    -3.824839230926476
    H               -0.693111845169768    -0.968780135652760    -4.188443230926476

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-029GLU-045LEU-1-dimer.npy', np.array(charges))