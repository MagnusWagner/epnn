import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.255420704045800    -0.984326124029881    -1.220258984718215
    C                1.265579295954200    -0.874326124029881    -1.331258984718215
    C               -0.913420704045800    -1.318326124029881    -2.543258984718215
    H               -0.481420704045800    -1.773326124029881    -0.503258984718215
    H               -0.664420704045800    -0.054326124029881    -0.830258984718215
    H                1.660579295954200    -1.846326124029881    -1.632258984718215
    H                1.670579295954200    -0.644326124029881    -0.344258984718215
    H               -0.912420704045800    -0.431326124029881    -3.180258984718215
    H               -0.327420704045800    -2.095326124029881    -3.039258984718215
    H                1.601269295954200    -0.114196124029881    -2.052026984718215
    H               -1.945853704045800    -1.683656124029881    -2.440234984718215
    C                0.253579295954200     1.286673875970119     1.870741015281785
    C               -0.376420704045800     1.834673875970119     3.139741015281786
    H               -0.130420704045800     1.821673875970119     1.002741015281785
    H                1.338579295954200     1.384673875970119     1.925741015281785
    H                0.023579295954200     0.232673875970119     1.755741015281785
    H                0.011579295954200     1.265673875970119     3.969741015281785
    H               -1.469926704045800     1.717593875970119     3.116613015281785
    H               -0.063471704045800     2.882903875970120     3.254924015281786

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-049LYS-121LEU-1-dimer.npy', np.array(charges))