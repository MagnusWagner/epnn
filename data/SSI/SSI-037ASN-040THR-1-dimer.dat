import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.936105726619331    -0.880962558608294    -1.205571717875400
    C                0.763105726619331    -1.143962558608294    -0.310571717875400
    O               -0.275894273380669    -0.513962558608294    -0.457571717875400
    N                0.901105726619331    -2.097962558608294     0.617428282124600
    H                1.956105726619331    -1.635962558608294    -1.988571717875400
    H                2.853105726619331    -0.991962558608294    -0.626571717875400
    H                0.118105726619331    -2.301962558608294     1.217428282124600
    H                1.756105726619331    -2.628962558608294     0.678428282124600
    H                1.928195726619331     0.123257441391706    -1.654451717875401
    C               -1.964894273380669     2.648037441391706     0.257428282124600
    O               -1.094894273380669     1.726037441391706     0.888428282124600
    H               -1.574894273380669     1.275037441391706     1.592428282124600
    H               -1.469894273380669     3.086037441391706    -0.609571717875400
    H               -2.894774273380669     2.144137441391706    -0.044911717875400
    H               -2.180314273380669     3.424407441391706     1.006328282124600

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037ASN-040THR-1-dimer.npy', np.array(charges))