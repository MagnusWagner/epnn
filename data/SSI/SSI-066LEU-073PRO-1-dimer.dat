import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.780128392099954    -1.589104231926194    -1.656235247845635
    C               -0.290871607900046    -1.377104231926194    -2.716235247845635
    H                1.158128392099954    -0.636104231926194    -1.291235247845635
    H                0.349128392099954    -2.123104231926194    -0.809235247845635
    H                1.604128392099954    -2.178104231926195    -2.061235247845635
    H               -1.055871607900046    -0.734104231926194    -2.292235247845636
    H                0.153828392099954    -0.910884231926194    -3.607795247845636
    H               -0.752081607900046    -2.337834231926194    -2.988765247845636
    C               -0.297871607900046     0.909895768073806     0.866764752154365
    C                0.704128392099954     0.181895768073806     1.732764752154365
    C               -0.922871607900046     1.922895768073805     1.825764752154365
    H               -1.031871607900046     0.221895768073806     0.449764752154365
    H                0.223128392099954     1.429895768073806     0.061764752154365
    H                0.204128392099954    -0.530104231926194     2.389764752154364
    H                1.464128392099954    -0.322104231926194     1.134764752154365
    H               -1.114871607900046     2.849895768073806     1.292764752154365
    H                1.137978392099954     1.008115768073806     2.315114752154365
    H               -0.124401607900046     2.109935768073806     2.558884752154365
    H               -1.889731607900046     1.575375768073806     2.218714752154364

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-066LEU-073PRO-1-dimer.npy', np.array(charges))