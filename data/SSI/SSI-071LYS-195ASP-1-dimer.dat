import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.850890032994479     0.500796563305794    -0.407842145361183
    C               -2.530890032994479     1.807796563305794    -0.717842145361183
    C               -2.251890032994480    -0.028203436694206     0.963157854638817
    H               -2.132890032994479    -0.222203436694206    -1.175842145361183
    H               -0.773890032994479     0.659796563305794    -0.437842145361183
    H               -2.341890032994479     2.521796563305794     0.079157854638817
    H               -3.599890032994479     1.638796563305794    -0.819842145361183
    H               -3.308890032994479    -0.310203436694206     0.925157854638817
    H               -1.651890032994479    -0.919203436694206     1.169157854638817
    H               -2.104880032994479     2.179646563305794    -1.661372145361183
    H               -2.094900032994479     0.716946563305794     1.756947854638817
    C                2.057109967005521     0.121796563305794     1.241157854638817
    C                1.634109967005521    -0.609203436694206    -0.039842145361183
    O                1.955109967005521    -0.126203436694206    -1.153842145361183
    O                0.980109967005521    -1.671203436694206     0.089157854638817
    H                2.364109967005521    -0.605203436694206     1.992157854638817
    H                1.210109967005521     0.691796563305794     1.626157854638817
    H                2.886079967005521     0.825446563305794     1.074787854638817

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-071LYS-195ASP-1-dimer.npy', np.array(charges))