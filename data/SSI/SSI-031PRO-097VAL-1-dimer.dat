import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.881226471772177    -1.069401844716356    -0.205016697343052
    C               -2.086226471772176    -0.170401844716356     0.237983302656948
    C               -1.169226471772177    -2.386401844716356     0.498983302656948
    H                0.068773528227823    -0.662401844716356     0.145983302656948
    H               -0.839226471772177    -1.208401844716356    -1.280016697343052
    H               -1.826226471772177     0.882598155283644     0.279983302656948
    H               -2.951226471772177    -0.293401844716356    -0.421016697343052
    H               -0.261226471772177    -2.981401844716356     0.561983302656948
    H               -1.974226471772177    -2.975401844716356     0.056983302656948
    H               -2.307407671772177    -0.556201844716356     1.244093302656948
    H               -1.465545971772177    -2.021401844716356     1.493463302656948
    C                1.785773528227823     1.569598155283644    -0.978016697343052
    C                2.290773528227823     1.988598155283644     0.411983302656948
    H                1.495773528227823     2.452598155283644    -1.547016697343052
    H                2.571773528227824     1.042598155283644    -1.517016697343052
    H                0.923773528227823     0.918598155283644    -0.873016697343052
    H                2.579773528227824     1.094598155283644     0.967983302656948
    H                1.497515528227823     2.519998155283644     0.958183302656948
    H                3.203688528227824     2.597398155283644     0.335253302656948

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031PRO-097VAL-1-dimer.npy', np.array(charges))