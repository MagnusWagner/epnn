import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.130800391122310    -2.791913380173816    -0.492838505859234
    S                1.211579608877690    -1.618843380173816    -0.196138505859234
    C                1.735719608877690    -1.303333380173815    -1.889908505859234
    H               -0.778070391122310    -2.801713380173816     0.359121494140766
    H                0.428529608877690    -3.703463380173816    -0.526328505859234
    H               -0.715660391122310    -2.699383380173815    -1.384058505859234
    H                2.508129608877690    -0.527913380173815    -1.885218505859234
    H                0.899069608877690    -0.959193380173815    -2.500168505859234
    H                2.164389608877690    -2.210913380173816    -2.323108505859234
    C               -1.376800391122310     0.605086619826185     0.432161494140766
    C               -2.706800391122310     0.980086619826185     1.041161494140766
    C               -0.353800391122310     1.762086619826184     0.475161494140766
    O               -0.327800391122310     2.575086619826185     1.408161494140766
    O                0.478199608877690     1.826086619826185    -0.426838505859234
    H               -0.981800391122310    -0.193913380173815     1.047161494140766
    H               -1.522800391122310     0.239086619826185    -0.587838505859234
    H               -3.317800391122310     1.487086619826185     0.293161494140766
    H               -2.548800391122310     1.673086619826185     1.865161494140766
    H               -3.232200391122310     0.109486619826185     1.460761494140766

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-060MET-070GLU-1-dimer.npy', np.array(charges))