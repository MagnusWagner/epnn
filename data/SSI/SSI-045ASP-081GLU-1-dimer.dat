import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -2 1
    --
    -2 1
    C                0.931353963881311     1.584837822835823    -2.981344876522876
    C                0.151353963881311     1.141837822835823    -1.753344876522877
    O                0.531353963881311     0.091837822835823    -1.201344876522876
    O               -0.819646036118689     1.826837822835823    -1.351344876522877
    H                1.826353963881311     2.109837822835823    -2.638344876522876
    H                0.327353963881311     2.285837822835823    -3.559344876522877
    H                1.230476963881311     0.730200822835823    -3.605944876522877
    C                0.827353963881311    -2.113162177164177     1.421655123477124
    C               -0.245646036118689    -1.105162177164177     1.848655123477124
    O               -0.669646036118689    -0.282162177164177     1.014655123477124
    O               -0.710646036118689    -1.143162177164177     3.009655123477124
    H                1.425353963881311    -1.683162177164177     0.617655123477124
    H                0.343353963881311    -3.011162177164177     1.034655123477124
    H                1.510833963881311    -2.407418177164177     2.231755123477124

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-045ASP-081GLU-1-dimer.npy', np.array(charges))