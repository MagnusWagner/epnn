import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.500467804506944     1.487973509585722    -0.074584380689915
    C               -0.003532195493056     0.165973509585722     1.414415619310085
    N                0.315467804506944     0.693973509585722     0.242415619310085
    N                0.765467804506944     0.344973509585722     2.472415619310085
    N               -1.096532195493056    -0.577026490414278     1.509415619310085
    H               -0.366532195493056     0.539973509585722    -0.499584380689915
    H                2.384467804506944     1.048973509585722     0.391415619310085
    H                1.370467804506944     2.514973509585722     0.273415619310085
    H                1.563467804506944     0.953973509585722     2.414415619310085
    H                0.529467804506944    -0.087026490414278     3.353415619310085
    H               -1.660532195493056    -0.725026490414278     0.678415619310085
    H               -1.366532195493056    -0.989026490414278     2.386415619310085
    H                1.631067804506944     1.476493509585722    -1.166744380689915
    C               -0.364532195493056    -1.178026490414278    -3.208584380689915
    O               -0.932532195493056    -0.760026490414278    -1.991584380689915
    H               -1.895532195493056    -0.910026490414278    -2.062584380689914
    H                0.348467804506944    -0.430026490414278    -3.554584380689914
    H               -1.149532195493056    -1.270026490414278    -3.958584380689915
    H                0.144587804506944    -2.145846490414278    -3.089764380689914

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-074ARG-135SER-2-dimer.npy', np.array(charges))