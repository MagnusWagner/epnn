import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.125659624813318     1.680254926078435    -1.599190881614343
    C               -0.283659624813318     1.417254926078434    -0.352190881614343
    O                0.879340375186682     0.970254926078434    -0.463190881614343
    O               -0.803659624813318     1.638254926078434     0.755809118385657
    H               -0.717659624813318     2.549254926078434    -2.119190881614343
    H               -2.154659624813318     1.911254926078434    -1.315190881614343
    H               -1.124219624813318     0.821934926078434    -2.287140881614343
    C                0.347340375186682    -3.296745073921565     0.859809118385657
    O                0.906340375186682    -2.004745073921566     0.716809118385657
    H                0.445340375186682    -1.588745073921566    -0.033190881614343
    H               -0.732659624813318    -3.254745073921566     0.706809118385657
    H                0.539340375186682    -3.647745073921565     1.875809118385657
    H                0.803930375186682    -4.001135073921565     0.148919118385657

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-102ASP-106SER-1-dimer.npy', np.array(charges))