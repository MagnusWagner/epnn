import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.563886935030490    -0.825298589860062     1.176121743371577
    C               -2.270886935030490    -1.867298589860062     2.058121743371577
    H               -0.577886935030490    -0.612298589860062     1.590121743371577
    H               -1.460886935030490    -1.179298589860062     0.152121743371577
    H               -2.131886935030490     0.098701410139938     1.117121743371577
    H               -3.275886935030490    -2.013298589860062     1.668121743371577
    H               -2.340083935030490    -1.505618589860062     3.094653743371576
    H               -1.743917935030490    -2.832688589860061     2.040123743371577
    C                0.824113064969510     0.726701410139938    -1.263878256628423
    C                1.651113064969510     0.054701410139938    -0.169878256628423
    C                1.425113064969510     1.970701410139938    -1.879878256628423
    H                0.682113064969510    -0.030298589860062    -2.034878256628423
    H               -0.160886935030490     0.974701410139938    -0.866878256628423
    H                1.149113064969510    -0.884298589860062     0.071121743371577
    H                1.319113064969510     2.792701410139938    -1.182878256628423
    H                2.487113064969511     1.823701410139938    -2.080878256628423
    H                1.697493064969510     0.652371410139938     0.752425743371577
    H                2.642573064969510    -0.233818589860062    -0.549049256628423
    H                0.933243064969510     2.240901410139938    -2.825951256628423

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-046ILE-071GLU-1-dimer.npy', np.array(charges))