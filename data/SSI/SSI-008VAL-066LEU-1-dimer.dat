import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.644894201949740     1.951067319294222     0.493848834510022
    C               -0.406894201949740     3.436067319294221     0.747848834510022
    H               -0.996894201949740     1.458067319294222     1.399848834510022
    H               -1.402894201949740     1.824067319294222    -0.280151165489978
    H                0.286105798050260     1.492067319294222     0.165848834510022
    H               -1.332894201949740     3.859067319294222     1.134848834510022
    H                0.389553798050260     3.565221319294221     1.495508834510022
    H               -0.146872201949740     3.956110319294222    -0.185931165489978
    C                0.255105798050260    -1.279932680705778    -0.386151165489978
    C               -0.624894201949740    -2.224932680705779    -1.213151165489978
    C                1.444105798050260    -1.967932680705778     0.322848834510022
    H                0.632105798050260    -0.492932680705778    -1.037151165489978
    H               -0.368894201949740    -0.825932680705778     0.384848834510022
    H               -0.073894201949740    -2.550932680705778    -2.093151165489978
    H                1.076105798050260    -2.785932680705778     0.938848834510022
    H               -1.557761201949740    -1.721332680705778    -1.506663165489978
    H               -0.892665201949740    -3.097372680705778    -0.599021165489978
    H                2.155710798050260    -2.383092680705778    -0.406021165489978
    H                1.964938798050260    -1.277092680705778     1.002168834510022

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008VAL-066LEU-1-dimer.npy', np.array(charges))