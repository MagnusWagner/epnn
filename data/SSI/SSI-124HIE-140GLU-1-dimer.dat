import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.208985862550533     1.614209077192188    -3.285825738607770
    C                0.763014137449467     0.631209077192189    -1.396825738607770
    C               -1.406985862550533     0.327209077192189    -1.162825738607770
    C               -1.203985862550533     1.059209077192189    -2.293825738607770
    N               -0.160985862550533     0.071209077192189    -0.619825738607770
    N                0.166014137449467     1.237209077192188    -2.428825738607769
    H                0.007014137449467    -0.414790922807811     0.262174261392230
    H                1.821014137449467     0.621209077192189    -1.205825738607770
    H               -2.361985862550533     0.033209077192189    -0.756825738607770
    H               -2.136985862550533     2.695209077192188    -3.255825738607770
    H               -3.189985862550533     1.327209077192189    -2.927825738607770
    H               -2.059295862550533     1.284459077192189    -4.324505738607770
    C                2.229014137449467    -1.401790922807812     1.970174261392230
    C                0.885014137449467    -1.136790922807811     2.622174261392230
    O               -0.102985862550533    -0.952790922807811     1.884174261392230
    O                0.818014137449467    -1.088790922807811     3.870174261392230
    H                2.917014137449467    -1.712790922807811     2.754174261392230
    H                2.620014137449467    -0.472790922807811     1.550174261392230
    H                2.192444137449467    -2.156350922807812     1.170609261392230

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-124HIE-140GLU-1-dimer.npy', np.array(charges))