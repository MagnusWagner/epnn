import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.208294491274226     0.976509606132233     0.293622571405925
    C               -0.724294491274226     1.976509606132233    -0.758377428594075
    C               -2.054294491274226    -0.137490393867767    -0.308377428594075
    H               -0.380294491274226     0.591509606132233     0.877622571405925
    H               -1.894294491274226     1.507509606132233     0.952622571405925
    H               -1.438294491274226     2.029509606132233    -1.581377428594075
    H                0.236705508725774     1.649509606132233    -1.155377428594075
    H               -2.512294491274226     0.229509606132233    -1.233377428594075
    H               -1.406294491274226    -0.979490393867767    -0.575377428594075
    H               -0.626034491274226     2.985789606132233    -0.332127428594075
    H               -2.851754491274226    -0.456770393867767     0.378732571405925
    C                1.425705508725774    -1.698490393867767     0.844622571405925
    C                2.488705508725774    -1.053490393867767    -0.049377428594075
    H                0.886705508725774    -0.957490393867767     1.424622571405925
    H                0.725705508725774    -2.279490393867767     0.240622571405925
    H                1.903705508725774    -2.373490393867767     1.551622571405925
    H                3.219705508725774    -1.808490393867767    -0.341377428594075
    H                2.993195508725774    -0.235570393867767     0.485882571405925
    H                2.006455508725774    -0.659200393867767    -0.956007428594075

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-099LYS-104THR-1-dimer.npy', np.array(charges))