import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.591933352373464     1.196163178421914    -1.453147525938464
    C                0.216933352373464     0.593163178421914    -1.211147525938464
    O                0.128933352373464    -0.496836821578086    -0.612147525938464
    O               -0.782066647626536     1.219163178421914    -1.621147525938464
    H                1.963933352373464     1.642163178421914    -0.528147525938464
    H                1.513933352373464     2.001163178421914    -2.187147525938464
    H                2.307663352373464     0.452983178421914    -1.834487525938464
    C               -1.198066647626536    -1.342836821578086     2.505852474061536
    O                0.112933352373464    -0.991836821578086     2.074852474061536
    H                0.097933352373464    -0.852836821578086     1.104852474061536
    H               -1.871066647626536    -0.511836821578086     2.289852474061536
    H               -1.530956647626536    -2.241786821578085     1.966342474061536
    H               -1.180766647626536    -1.528796821578086     3.589882474061536

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004ASP-043THR-1-dimer.npy', np.array(charges))