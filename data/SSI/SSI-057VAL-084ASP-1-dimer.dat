import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.664217343329835    -1.868924905345099    -1.588840401306377
    C                1.876217343329835    -2.288924905345099    -0.764840401306377
    H                0.106217343329835    -2.739924905345099    -1.922840401306377
    H                0.003217343329835    -1.254924905345099    -0.983840401306377
    H                0.983217343329835    -1.294924905345099    -2.459840401306377
    H                1.531217343329835    -2.817924905345099     0.114159598693623
    H                2.547997343329835    -2.917194905345099    -1.368150401306377
    H                2.410707343329836    -1.396174905345099    -0.408030401306377
    C                0.345217343329835     1.327075094654901     1.609159598693623
    C               -0.703782656670165     1.042075094654901     0.540159598693623
    O               -0.789782656670165     1.819075094654901    -0.436840401306377
    O               -1.441782656670165     0.042075094654901     0.680159598693623
    H                1.307217343329835     1.511075094654901     1.129159598693623
    H                0.449217343329835     0.457075094654901     2.258159598693623
    H                0.098407343329835     2.212855094654901     2.212869598693623

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-057VAL-084ASP-1-dimer.npy', np.array(charges))