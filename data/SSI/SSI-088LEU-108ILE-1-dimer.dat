import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.591264297094564    -1.692871440588144     1.457943078827834
    C                0.432264297094564    -2.435871440588144     2.784943078827834
    H                1.540264297094564    -1.156871440588144     1.435943078827834
    H                0.575264297094564    -2.400871440588143     0.631943078827834
    H               -0.226735702905436    -0.981871440588143     1.331943078827834
    H                1.241264297094564    -3.153871440588144     2.869943078827834
    H                0.516854297094564    -1.731693440588143     3.625763078827834
    H               -0.520895702905436    -2.984658440588143     2.802993078827834
    C               -0.273735702905436     1.023128559411856    -1.041056921172166
    C               -1.561735702905436     1.108128559411857    -1.882056921172166
    C                0.783264297094564     2.071128559411857    -1.388056921172166
    H               -0.531735702905436     1.126128559411856     0.013943078827834
    H                0.189264297094564     0.045128559411857    -1.164056921172166
    H               -1.275735702905436     1.192128559411856    -2.933056921172166
    H                0.421264297094564     3.075128559411856    -1.175056921172166
    H                1.676264297094564     1.890128559411856    -0.789056921172166
    H                1.042264297094564     1.998128559411857    -2.444056921172166
    H               -2.168645702905437     0.197401559411857    -1.771446921172166
    H               -2.137485702905436     2.008812559411856    -1.622686921172166

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-088LEU-108ILE-1-dimer.npy', np.array(charges))