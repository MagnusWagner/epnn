import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.897695609301156    -0.284003845800004     1.691700472844003
    C                0.957695609301156    -1.803003845800004     1.528700472844003
    H               -0.139304390698844     0.009996154199996     1.852700472844003
    H                1.251695609301156     0.206996154199996     0.790700472844003
    H                1.499695609301156     0.025996154199996     2.544700472844003
    H                0.345695609301156    -2.075003845800004     0.665700472844003
    H                0.540795609301156    -2.290392845800004     2.422370472844003
    H                1.996875609301156    -2.119992845800004     1.356580472844003
    C               -1.382304390698844     0.536996154199996    -1.284299527155997
    C               -0.474304390698844     1.553996154199996    -1.937299527155997
    H               -0.830304390698844    -0.388003845800004    -1.119299527155997
    H               -2.228304390698844     0.323996154199996    -1.929299527155997
    H               -1.739304390698844     0.908996154199996    -0.324299527155997
    H               -0.161304390698844     1.193996154199996    -2.918299527155997
    H                0.396695609301156     1.599996154199996    -1.296299527155997
    H               -0.918434390698844     2.555976154199996    -2.030989527155997

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-007ALA-011ILE-1-dimer.npy', np.array(charges))