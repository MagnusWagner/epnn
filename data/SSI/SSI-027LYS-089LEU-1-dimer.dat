import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.092888842598301    -0.303367662419629     0.738297796673192
    C                2.292888842598301     0.622632337580372     0.639297796673192
    C                1.426888842598301    -1.679367662419629     0.171297796673192
    H                0.796888842598301    -0.400367662419629     1.786297796673192
    H                0.280888842598301     0.139632337580371     0.167297796673192
    H                2.605888842598301     0.726632337580371    -0.400702203326808
    H                3.111888842598301     0.169632337580371     1.202297796673192
    H                1.666888842598301    -1.580367662419629    -0.892702203326808
    H                2.323888842598301    -2.050367662419629     0.680297796673192
    H                2.073148842598301     1.616159337580371     1.057169796673192
    H                0.602888842598301    -2.393990662419629     0.313926796673192
    C               -2.394111157401699    -0.082367662419629    -0.854702203326808
    C               -2.354111157401699     1.424632337580371    -0.644702203326808
    H               -1.760111157401699    -0.580367662419629    -0.128702203326808
    H               -3.410111157401699    -0.456367662419629    -0.711702203326808
    H               -2.054111157401699    -0.331367662419629    -1.861702203326808
    H               -1.419111157401699     1.807632337580371    -1.052702203326808
    H               -3.204591157401699     1.876971337580371    -1.175803203326808
    H               -2.381661157401699     1.668934337580371     0.427471796673192

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-027LYS-089LEU-1-dimer.npy', np.array(charges))