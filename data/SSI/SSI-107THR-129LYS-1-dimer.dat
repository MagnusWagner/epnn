import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.904998508604008     0.158967975566117     1.475869133357875
    O                0.481998508604008     0.129967975566117     1.362869133357875
    H                0.128998508604008    -0.290032024433883     2.170869133357875
    H                2.174998508604008     0.411967975566117     2.501869133357876
    H                2.306608508604008    -0.829608024433883     1.208609133357875
    H                2.302738508604008     0.926248975566117     0.795368133357875
    C               -1.656001491395992     0.424967975566117    -1.720130866642125
    N               -0.746001491395992    -0.623032024433883    -1.195130866642125
    H               -1.222001491395992    -1.497032024433883    -0.985130866642125
    H               -0.016001491395992    -0.847032024433883    -1.874130866642125
    H               -0.281001491395992    -0.321032024433883    -0.346130866642125
    H               -2.245001491395991     0.024967975566117    -2.552130866642125
    H               -1.065001491395992     1.264967975566117    -2.097130866642124
    H               -2.333561491395991     0.797696975566117    -0.937833866642125

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-107THR-129LYS-1-dimer.npy', np.array(charges))