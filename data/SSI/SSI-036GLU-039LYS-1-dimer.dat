import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.025531882719737     1.025328735692244     2.042891524487629
    C                0.797531882719737     0.302328735692244     1.529891524487629
    O                0.310531882719737     0.464328735692244     0.399891524487629
    O                0.242531882719737    -0.482671264307756     2.333891524487629
    H                2.555531882719737     0.377328735692244     2.745891524487630
    H                1.703531882719737     1.890328735692244     2.618891524487629
    H                2.742788882719737     1.370163735692244     1.283531524487630
    C               -1.326468117280263     0.051328735692244    -2.363108475512370
    C               -0.047468117280263    -0.668671264307756    -2.764108475512370
    N               -1.796468117280263    -0.583671264307756    -1.097108475512371
    H               -1.124468117280263     1.113328735692244    -2.196108475512370
    H               -2.072468117280263    -0.051671264307756    -3.158108475512371
    H               -0.289468117280263    -1.698671264307756    -3.038108475512370
    H                0.649531882719737    -0.699671264307756    -1.925108475512371
    H               -2.679468117280263    -0.191671264307756    -0.798108475512371
    H               -1.109468117280263    -0.387671264307756    -0.362108475512371
    H               -1.907468117280263    -1.584671264307756    -1.189108475512371
    H                0.460144882719737    -0.193878464307756    -3.616688475512370

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-036GLU-039LYS-1-dimer.npy', np.array(charges))