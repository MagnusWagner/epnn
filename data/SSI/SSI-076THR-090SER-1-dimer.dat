import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.280877084514014    -2.003144751150578    -1.075934240170826
    O                0.417122915485986    -1.401144751150578     0.010065759829175
    H                0.427122915485986    -2.030144751150578     0.755065759829175
    H               -0.074877084514014    -3.074144751150578    -1.084934240170826
    H               -1.360517084514014    -1.824750751150578    -0.963903240170825
    H                0.092802915485986    -1.560868751150578    -2.011216240170826
    C               -0.540877084514014     2.071855248849422     0.932065759829175
    O                0.384122915485986     1.431855248849422     0.074065759829175
    H                0.327122915485986     0.464855248849422     0.193065759829175
    H               -0.135877084514014     3.037855248849422     1.239065759829174
    H               -0.698877084514014     1.455855248849422     1.818065759829174
    H               -1.508767084514014     2.225821248849422     0.432579759829175

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-076THR-090SER-1-dimer.npy', np.array(charges))