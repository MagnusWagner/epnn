import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.318634731686509     0.811876823809029     0.046770324356741
    C                2.988634731686509     0.854876823809029    -1.318229675643259
    H                2.327634731686509    -0.201123176190971     0.444770324356741
    H                2.860634731686509     1.455876823809029     0.737770324356741
    H                1.290634731686509     1.156876823809029    -0.023229675643259
    H                4.017634731686508     0.519876823809029    -1.206229675643259
    H                2.473568731686508     0.203321823809029    -2.039466675643259
    H                3.010320731686509     1.882784823809029    -1.709297675643259
    C               -2.163365268313491     0.390876823809029    -0.520229675643259
    C               -1.305365268313491    -0.475123176190971     0.370770324356741
    O               -0.649365268313491    -1.405123176190971    -0.144229675643259
    O               -1.285365268313491    -0.214123176190971     1.587770324356741
    H               -2.633365268313492     1.185876823809028     0.063770324356741
    H               -2.969365268313491    -0.205123176190971    -0.944229675643259
    H               -1.563288268313491     0.857603823809029    -1.315259675643259

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024LEU-028GLU-2-dimer.npy', np.array(charges))