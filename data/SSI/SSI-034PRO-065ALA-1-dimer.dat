import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.035984963163270    -0.183703471250499    -1.002536439535421
    C               -0.291984963163271     1.100296528749501    -1.362536439535421
    C               -2.029984963163271    -0.331703471250499    -2.148536439535421
    H               -1.574984963163271    -0.047703471250499    -0.063536439535421
    H               -0.361984963163271    -1.038703471250499    -0.939536439535421
    H                0.078015036836729     1.592296528749501    -0.461536439535421
    H                0.531015036836729     0.876296528749501    -2.043536439535421
    H               -2.894984963163270    -0.915703471250499    -1.829536439535421
    H               -1.566984963163271    -0.843703471250499    -2.982536439535421
    H               -1.054211963163270     1.706889628749501    -1.873476439535421
    H               -2.312123963163271     0.697781528749501    -2.414166439535421
    C                1.191015036836729    -0.292703471250499     1.607463560464579
    C                2.107015036836729    -0.307703471250499     2.841463560464579
    H                1.791015036836729    -0.313703471250499     0.696463560464579
    H                0.532015036836729    -1.162703471250499     1.622463560464579
    H                0.575015036836729     0.606296528749501     1.610463560464579
    H                1.486015036836729    -0.287703471250499     3.739463560464579
    H                2.791975036836730     0.553004528749501     2.844463560464579
    H                2.693725036836729    -1.237878471250499     2.864703560464579

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-034PRO-065ALA-1-dimer.npy', np.array(charges))