import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.764157185717039    -2.255178983803682    -2.941307778228900
    C               -0.598842814282960    -2.006178983803682    -0.198307778228900
    C                0.764157185717039    -0.598178983803682    -1.193307778228901
    C                0.895157185717040    -1.808178983803682    -1.801307778228900
    N               -0.171842814282961    -0.749178983803682    -0.199307778228900
    N                0.025157185717040    -2.671178983803682    -1.167307778228901
    H               -0.510842814282961    -0.010178983803682     0.421692221771100
    H               -1.349842814282960    -2.413178983803683     0.470692221771100
    H                1.273157185717040     0.312821016196318    -1.442307778228900
    H                1.197157185717040    -2.947178983803682    -3.550307778228900
    H                2.620157185717039    -2.799178983803682    -2.541307778228901
    H                2.100347185717039    -1.437248983803682    -3.595502778228900
    C               -1.220842814282960     3.650821016196317     1.591692221771100
    C               -0.589842814282961     2.259821016196317     1.765692221771100
    O               -1.182842814282960     1.300821016196318     1.232692221771100
    O                0.481157185717039     2.092821016196318     2.400692221771100
    H               -2.246842814282961     3.608821016196318     1.960692221771100
    H               -1.275842814282961     3.904821016196318     0.531692221771100
    H               -0.705932814282961     4.458941016196317     2.131882221771099

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083HIE-086GLU-1-dimer.npy', np.array(charges))