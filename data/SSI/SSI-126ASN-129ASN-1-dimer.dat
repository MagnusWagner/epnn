import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.190578260970430     1.542564147132308     2.623222599445042
    C                0.591578260970429     0.166564147132309     2.118222599445042
    O                1.761578260970430    -0.110435852867691     1.869222599445042
    N               -0.385421739029570    -0.710435852867692     1.958222599445042
    H               -0.124421739029570    -1.678435852867691     1.827222599445042
    H               -1.329421739029570    -0.470435852867691     2.232222599445042
    H               -0.577421739029571     1.414564147132308     3.388222599445041
    H               -0.247421739029570     2.107564147132309     1.799222599445042
    H                1.032558260970430     2.095027147132309     3.065767599445042
    C               -0.604421739029570     1.169564147132308    -1.691777400554958
    C               -0.517421739029571    -0.250435852867691    -2.214777400554958
    O               -0.526421739029571    -0.486435852867691    -3.421777400554958
    N               -0.440421739029571    -1.210435852867692    -1.307777400554958
    H               -0.405421739029570    -2.168435852867691    -1.626777400554958
    H               -0.473421739029571    -0.987435852867691    -0.325777400554958
    H               -0.816421739029570     1.157564147132308    -0.621777400554958
    H               -1.450421739029570     1.645564147132309    -2.190777400554958
    H                0.308138260970429     1.752310147132308    -1.885787400554958

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-126ASN-129ASN-1-dimer.npy', np.array(charges))