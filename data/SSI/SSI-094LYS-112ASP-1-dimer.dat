import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.804655564075542     0.070528927585775    -0.827024227844730
    N                2.035655564075542     0.347528927585775     0.411975772155270
    H                1.090655564075542    -0.048471072414225     0.320975772155270
    H                2.474655564075542    -0.064471072414225     1.225975772155270
    H                1.932655564075542     1.340528927585775     0.576975772155271
    H                2.891655564075542    -1.009471072414225    -0.975024227844730
    H                3.814655564075542     0.485528927585775    -0.743024227844730
    H                2.310405564075542     0.509138927585775    -1.706414227844729
    C               -2.627344435924458    -0.128471072414225    -0.473024227844730
    C               -1.231344435924458    -0.123471072414225     0.128975772155270
    O               -0.930344435924458     0.773528927585775     0.950975772155271
    O               -0.413344435924458    -0.995471072414225    -0.230024227844730
    H               -2.859344435924458    -1.109471072414225    -0.886024227844729
    H               -2.655344435924458     0.599528927585775    -1.285024227844730
    H               -3.408594435924458     0.150908927585775     0.249185772155270

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094LYS-112ASP-1-dimer.npy', np.array(charges))