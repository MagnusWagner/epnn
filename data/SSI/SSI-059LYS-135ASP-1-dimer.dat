import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.368695276810452     0.714273000309156     1.620780980235923
    C               -1.806695276810452     0.330273000309156     1.893780980235924
    C                0.588304723189548    -0.003726999690844     2.570780980235924
    H               -0.204695276810452     0.447273000309156     0.625780980235923
    H               -0.244695276810452     1.795273000309156     1.713780980235924
    H               -2.067695276810452     0.704273000309156     2.880780980235924
    H               -1.900695276810452    -0.756726999690844     1.897780980235924
    H                0.466304723189548    -1.082726999690844     2.434780980235923
    H                1.617304723189548     0.250273000309156     2.295780980235924
    H               -2.493755276810452     0.742078000309156     1.139880980235924
    H                0.396764723189548     0.264725000309156     3.620180980235923
    C               -0.158695276810452    -1.528726999690844    -1.868219019764077
    C                0.431304723189548    -0.174726999690844    -1.503219019764076
    O               -0.104695276810452     0.860273000309156    -1.966219019764077
    O                1.429304723189548    -0.159726999690844    -0.748219019764077
    H               -1.203695276810452    -1.553726999690843    -1.553219019764077
    H                0.370304723189548    -2.324726999690844    -1.338219019764076
    H               -0.106715276810452    -1.714278999690843    -2.951209019764077

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-059LYS-135ASP-1-dimer.npy', np.array(charges))