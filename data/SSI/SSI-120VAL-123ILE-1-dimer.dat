import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.620021097766416     0.398750677976793    -1.480665182281376
    C               -2.110021097766416     1.126750677976794    -2.741665182281376
    H               -1.848021097766416    -0.665249322023207    -1.556665182281376
    H               -0.542021097766416     0.530750677976794    -1.375665182281376
    H               -2.116021097766416     0.810750677976793    -0.601665182281376
    H               -1.873021097766416     2.188750677976794    -2.663665182281376
    H               -3.196232097766416     1.022050677976793    -2.880135182281376
    H               -1.622779097766416     0.702750677976793    -3.632065182281377
    C                0.745978902233584    -0.529249322023207     1.209334817718624
    C                1.085978902233584    -1.279249322023207     2.493334817718624
    C                1.953978902233584     0.242750677976794     0.600334817718624
    H                0.373978902233584    -1.259249322023207     0.491334817718624
    H               -0.051021097766416     0.177750677976794     1.445334817718624
    H                1.313978902233584    -0.503249322023206     3.224334817718624
    H                2.754978902233585    -0.453249322023207     0.350334817718624
    H                1.642978902233584     0.756750677976794    -0.310665182281376
    H                2.326978902233584     0.977750677976793     1.316334817718624
    H                0.217826902233584    -1.858449322023207     2.840884817718623
    H                1.952868902233584    -1.948649322023207     2.391394817718624

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-120VAL-123ILE-1-dimer.npy', np.array(charges))