import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.062814020318223    -0.588148901045913     1.371584293664756
    C                0.592814020318223    -0.209148901045913     2.736584293664756
    C                1.282814020318223    -1.082148901045914     0.633584293664756
    H               -0.399185979681777     0.262851098954087     0.869584293664757
    H               -0.654185979681777    -1.403148901045913     1.474584293664756
    H                0.967814020318223     0.814851098954087     2.721584293664757
    H               -0.190185979681777    -0.330148901045913     3.486584293664756
    H                1.855814020318223    -0.218148901045913     0.293584293664757
    H                1.023814020318223    -1.724148901045913    -0.209415706335243
    H                1.426799020318223    -0.909995901045914     2.889170293664757
    H                1.841424020318223    -1.629920901045913     1.406824293664756
    C               -0.796185979681777     0.187851098954087    -2.234415706335243
    C               -1.148185979681777     1.659851098954086    -2.425415706335244
    H                0.157814020318223     0.092851098954087    -1.717415706335244
    H               -1.557185979681777    -0.301148901045913    -1.627415706335244
    H               -0.717185979681777    -0.314148901045913    -3.194415706335243
    H               -1.124185979681777     2.126851098954087    -1.446415706335244
    H               -0.404316979681777     2.153371098954087    -3.068140706335243
    H               -2.156439979681777     1.758011098954086    -2.854121706335244

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-157PRO-161VAL-1-dimer.npy', np.array(charges))