import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.433891888475274     1.307802551438773    -0.720917902410034
    C               -1.198891888475274     2.506802551438773    -1.273917902410034
    C               -0.009891888475274     0.376802551438773    -1.825917902410034
    H                0.435108111524726     1.638802551438773    -0.158917902410034
    H               -1.077891888475274     0.732802551438773    -0.053917902410034
    H               -1.732891888475274     2.180802551438773    -2.168917902410034
    H                0.744108111524726     0.858802551438773    -2.446917902410033
    H                0.380108111524726    -0.537197448561227    -1.385917902410034
    H               -0.864891888475274     0.107802551438773    -2.444917902410034
    H               -1.975267888475274     2.823952551438774    -0.562117902410034
    H               -0.541151888475274     3.334882551438773    -1.576664902410033
    C                0.558108111524726    -1.616197448561227     1.303082097589967
    C                1.061108111524726    -2.478197448561227     2.477082097589967
    H                0.359108111524726    -0.599197448561227     1.642082097589967
    H                1.325108111524726    -1.583197448561227     0.530082097589966
    H               -0.343891888475274    -2.038197448561227     0.860082097589966
    H                1.151108111524726    -3.501197448561227     2.126082097589966
    H                0.364578111524726    -2.440057448561227     3.327602097589967
    H                2.056088111524726    -2.133917448561227     2.795652097589967

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028ILE-151VAL-1-dimer.npy', np.array(charges))