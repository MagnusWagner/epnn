import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.980359686735039    -1.104105109971797     1.248342464111585
    C                0.475640313264961    -0.957105109971797     0.859342464111585
    O                0.738640313264961    -0.127105109971797    -0.032657535888415
    O                1.338640313264961    -1.689105109971797     1.406342464111585
    H               -1.498359686735039    -1.567105109971797     0.407342464111585
    H               -1.425359686735039    -0.124105109971797     1.411342464111585
    H               -1.126229686735039    -1.725115109971797     2.144480464111585
    C               -0.513359686735039     2.082894890028203    -2.233657535888415
    O               -0.967359686735039     1.532894890028203    -1.008657535888415
    H               -0.245359686735039     0.958894890028203    -0.657657535888415
    H               -0.305359686735039     1.294894890028203    -2.952657535888415
    H               -1.302879686735039     2.752614890028203    -2.605323135888415
    H                0.410390313264961     2.648144890028203    -2.040842535888415

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-171ASP-176THR-1-dimer.npy', np.array(charges))