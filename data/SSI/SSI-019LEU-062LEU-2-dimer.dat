import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.567138130918539    -0.039502593748418     1.200906767003988
    C               -0.589138130918540    -0.574502593748418     2.641906767003988
    C               -1.924138130918539     0.476497406251582     0.736906767003988
    H                0.166861869081460     0.767497406251582     1.158906767003988
    H               -0.229138130918540    -0.826502593748418     0.522906767003988
    H               -1.410138130918540    -1.285502593748418     2.741906767003988
    H               -2.419138130918539     1.045497406251582     1.519906767003988
    H               -0.736028130918540     0.237877406251582     3.368856767003988
    H                0.334201869081460    -1.136442593748418     2.846046767003988
    H               -1.753608130918540     1.129337406251582    -0.131839232996012
    H               -2.561548130918540    -0.375772593748418     0.458803767003988
    C                1.791861869081461     0.604497406251582    -1.790093232996012
    C                1.250861869081460    -0.462502593748418    -2.713093232996012
    H                1.142861869081460     1.478497406251582    -1.785093232996012
    H                1.851861869081460     0.211497406251582    -0.775093232996012
    H                2.791861869081461     0.897497406251582    -2.115093232996012
    H                0.258861869081460    -0.683502593748418    -2.339093232996012
    H                1.180211869081460    -0.120782593748418    -3.756278232996012
    H                1.831651869081460    -1.392622593748418    -2.626119232996012

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019LEU-062LEU-2-dimer.npy', np.array(charges))