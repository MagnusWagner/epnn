import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -3.361625008706490     1.110676377089131    -1.176831297505424
    O               -2.223625008706490     1.103676377089131    -0.334831297505424
    H               -2.471625008706490     0.669676377089131     0.496168702494576
    H               -3.987625008706490     1.951676377089131    -0.892831297505424
    H               -3.053705008706490     1.214266377089131    -2.227761297505425
    H               -3.939075008706491     0.188066377089131    -1.017635297505424
    C                0.351374991293510    -0.247323622910869    -0.528831297505424
    C                1.282374991293510     0.823676377089131    -1.070831297505425
    C                2.584374991293510    -0.971323622910869     0.915168702494575
    S                0.793374991293510    -0.913323622910869     1.075168702494576
    H               -0.675625008706490    -0.216323622910869    -0.749831297505424
    H                0.586374991293510    -1.089323622910869    -1.182831297505425
    H                0.864374991293510     1.152676377089131    -2.021831297505425
    H                2.241374991293510     0.369676377089131    -1.318831297505424
    H                3.032374991293509    -0.003323622910869     0.706168702494576
    H                2.999374991293509    -1.306323622910869     1.856168702494575
    H                2.861374991293510    -1.693323622910869     0.151168702494576
    H                1.465854991293510     1.698776377089131    -0.430096297505424

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083THR-086MET-1-dimer.npy', np.array(charges))