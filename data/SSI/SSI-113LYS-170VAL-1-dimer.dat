import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.522141537309555    -1.283261427901140     1.117184968581906
    C                0.987858462690445    -1.211261427901140     1.153184968581906
    C               -1.198141537309555    -0.400261427901140     2.104184968581906
    H               -0.859141537309555    -1.037261427901140     0.110184968581906
    H               -0.823141537309555    -2.315261427901140     1.317184968581906
    H                1.314858462690445    -0.210261427901140     0.859184968581906
    H               -0.853141537309555    -0.615261427901140     3.115184968581906
    H               -0.978141537309555     0.644738572098860     1.876184968581906
    H                1.392508462690445    -1.960384427901140     0.456714968581906
    H                1.352568462690445    -1.389626427901140     2.175524968581906
    H               -2.286221537309554    -0.561732427901140     2.101224968581906
    C                0.389858462690445     0.802738572098860    -1.670815031418094
    C                0.307858462690445     2.009738572098860    -2.629815031418095
    H                0.021858462690445    -0.104261427901140    -2.149815031418094
    H                1.430858462690445     0.635738572098860    -1.389815031418094
    H               -0.195141537309555     1.010738572098860    -0.774815031418094
    H                0.860858462690445     1.780738572098860    -3.538815031418094
    H               -0.741081537309555     2.219097572098859    -2.886495031418094
    H                0.775758462690445     2.883015572098859    -2.151845031418094

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-113LYS-170VAL-1-dimer.npy', np.array(charges))