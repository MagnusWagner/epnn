import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.240728763524757    -2.193170147445430    -0.929516786259851
    O               -0.187728763524757    -1.532170147445430     0.332483213740149
    H               -0.030728763524757    -0.580170147445430     0.199483213740149
    H                0.751271236475243    -2.550170147445430    -1.207516786259851
    H               -0.941868763524757    -3.028700147445430    -0.787096786259851
    H               -0.627218763524757    -1.507020147445430    -1.697516786259851
    C                0.142271236475243     2.473829852554570    -0.058516786259851
    O                0.226271236475243     1.207829852554571     0.609483213740149
    H                1.106271236475243     1.135829852554570     1.025483213740149
    H                0.435271236475243     3.275829852554570     0.617483213740149
    H                0.770611236475243     2.453719852554570    -0.961166786259851
    H               -0.902988763524757     2.606429852554570    -0.374496786259851

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025THR-045THR-1-dimer.npy', np.array(charges))