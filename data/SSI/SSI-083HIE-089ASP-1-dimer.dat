import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.679772592329446    -3.485670472954471     1.487758712633016
    C               -0.611227407670554    -0.664670472954471     1.597758712633016
    C                1.045772592329446    -1.282670472954471     0.288758712633016
    C                0.916772592329446    -2.212670472954472     1.259758712633016
    N                0.097772592329446    -0.321670472954471     0.541758712633016
    N               -0.143227407670554    -1.819670472954471     2.053758712633015
    H               -0.027227407670554     0.547329527045529     0.026758712633016
    H               -1.429227407670554    -0.092670472954471     2.022758712633016
    H                1.768772592329446    -1.291670472954471    -0.517241287366984
    H                1.894772592329446    -3.581670472954471     2.550758712633015
    H                2.624772592329446    -3.430670472954472     0.947758712633016
    H                1.117306592329446    -4.379550472954471     1.180171712633016
    C               -0.743227407670554     1.197329527045529    -2.618241287366984
    C               -0.698227407670554     2.333329527045529    -1.617241287366984
    O               -0.332227407670554     2.101329527045528    -0.476241287366984
    O               -1.049227407670554     3.463329527045528    -1.950241287366984
    H               -1.359227407670554     0.410329527045529    -2.176241287366985
    H                0.244772592329446     0.768329527045529    -2.759241287366984
    H               -1.205977407670554     1.484479527045529    -3.573965287366984

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-083HIE-089ASP-1-dimer.npy', np.array(charges))