import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.601486379665166     0.294066173861201    -1.629575473559449
    C               -0.742513620334834     0.559066173861201    -0.977575473559450
    O               -0.809513620334834     0.607066173861201     0.270424526440550
    O               -1.730513620334834     0.743066173861201    -1.715575473559450
    H                1.289486379665166    -0.016933826138799    -0.845575473559450
    H                0.992486379665166     1.223066173861201    -2.049575473559449
    H                0.564916379665166    -0.460493826138799    -2.429140473559449
    C                1.723486379665166    -0.769933826138799     2.355424526440550
    O                0.788486379665166    -1.300933826138799     1.413424526440550
    H                0.224486379665166    -0.566933826138799     1.083424526440550
    H                1.600486379665166     0.307066173861201     2.419424526440551
    H                1.552746379665165    -1.243583826138799     3.333436526440551
    H                2.731546379665165    -1.013633826138798     1.988790526440550

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-140GLU-155THR-1-dimer.npy', np.array(charges))