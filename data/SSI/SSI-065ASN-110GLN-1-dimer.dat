import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.894362306590281    -1.472529246267662    -2.080340399117160
    C                0.857362306590281    -1.626529246267662    -1.011340399117160
    O                0.718362306590281    -0.784529246267662    -0.136340399117160
    N                0.067362306590281    -2.706529246267662    -1.116340399117160
    H                1.551362306590281    -1.974529246267662    -2.987340399117160
    H                2.782362306590281    -2.002529246267662    -1.737340399117161
    H               -0.708637693409719    -2.795529246267662    -0.479340399117160
    H                0.191362306590281    -3.362529246267662    -1.871340399117160
    H                2.153942306590281    -0.434199246267662    -2.334270399117160
    C               -0.600637693409719     2.491470753732338    -0.019340399117160
    C               -0.920637693409719     1.610470753732338     1.111659600882840
    O               -2.088637693409719     1.254470753732338     1.234659600882840
    N                0.063362306590281     1.319470753732338     1.990659600882840
    H               -0.843637693409719     1.983470753732338    -0.953340399117160
    H                0.464362306590281     2.724470753732338    -0.023340399117160
    H               -0.144637693409719     0.711470753732338     2.766659600882840
    H                1.015362306590281     1.601470753732338     1.776659600882839
    H               -1.181657693409719     3.421240753732338     0.069829600882840

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-065ASN-110GLN-1-dimer.npy', np.array(charges))