import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.022981743469678     0.667121033507765     0.296680483089505
    C                2.762981743469677     1.996121033507764     0.409680483089505
    H                1.543981743469677     0.579121033507765    -0.681319516910495
    H                2.717981743469677    -0.163878966492235     0.435680483089505
    H                1.280981743469678     0.647121033507765     1.092680483089505
    H                3.133981743469677     2.098121033507764     1.430680483089505
    H                2.069181743469677     2.824015033507764     0.201765483089505
    H                3.637591743469677     1.996121033507764    -0.257444516910495
    C               -1.109018256530322    -1.141878966492236     0.060680483089505
    C               -1.357018256530323    -0.954878966492235    -1.422319516910495
    C               -2.387018256530323    -0.652878966492235     0.674680483089505
    H               -0.283018256530322    -0.531878966492235     0.383680483089505
    H               -0.942018256530322    -2.198878966492236     0.251680483089505
    H               -0.422018256530322    -0.771878966492235    -1.952319516910495
    H               -1.872018256530322    -1.824878966492235    -1.834319516910495
    H               -2.371018256530323    -0.434878966492235     1.720680483089505
    H               -3.077018256530323    -1.367878966492235     0.342680483089505
    H               -2.019328256530323    -0.077298966492235    -1.456822516910495
    H               -2.598418256530322     0.255641033507765     0.091675483089505

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-087ALA-171PRO-1-dimer.npy', np.array(charges))