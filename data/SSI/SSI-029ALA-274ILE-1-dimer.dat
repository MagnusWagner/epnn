import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.380049057104490     1.512263813423720     1.167165520013768
    C               -1.760049057104490     1.156263813423720     1.721165520013768
    H                0.267950942895510     0.635263813423720     1.156165520013768
    H               -0.481049057104490     1.894263813423720     0.153165520013768
    H                0.073950942895510     2.274263813423721     1.799165520013768
    H               -2.382049057104490     2.054263813423720     1.704165520013768
    H               -1.663281057104490     0.801443813423720     2.757865520013768
    H               -2.265556057104490     0.382293813423720     1.124985520013768
    C                0.349950942895510    -1.315736186576280    -1.199834479986232
    C                1.794950942895510    -1.354736186576280    -1.684834479986232
    H                0.311950942895510    -1.593736186576280    -0.147834479986232
    H               -0.071049057104490    -0.316736186576280    -1.301834479986232
    H               -0.281049057104490    -1.990736186576280    -1.782834479986232
    H                1.786950942895510    -1.264736186576280    -2.766834479986232
    H                2.240480942895510    -2.329416186576279    -1.436834479986232
    H                2.405550942895510    -0.523276186576280    -1.302944479986232

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-029ALA-274ILE-1-dimer.npy', np.array(charges))