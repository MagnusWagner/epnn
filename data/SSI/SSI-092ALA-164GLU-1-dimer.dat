import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.864183993555537     1.629496443907646     0.085038321142787
    C                2.804183993555537     1.046496443907647    -0.973961678857213
    H                0.830183993555537     1.550496443907646    -0.246961678857213
    H                1.982183993555537     1.093496443907646     1.029038321142786
    H                2.090183993555537     2.680496443907646     0.250038321142787
    H                3.828183993555537     1.194496443907646    -0.625961678857214
    H                2.663639993555537     1.564096443907646    -1.934347678857214
    H                2.624165993555537    -0.030733556092354    -1.105014678857213
    C               -1.056816006444463    -0.742503556092354     0.251038321142787
    C               -2.113816006444463     0.049496443907647     1.045038321142786
    C               -1.573816006444463    -2.035503556092354    -0.389961678857213
    H               -0.704816006444463    -0.105503556092353    -0.558961678857213
    H               -0.208816006444463    -0.972503556092354     0.897038321142786
    H               -3.008816006444463     0.163496443907647     0.432038321142787
    H               -0.788816006444463    -2.446503556092353    -1.028961678857214
    H               -1.760816006444463    -2.775503556092354     0.388038321142787
    H               -1.750977106444463     1.050876443907646     1.319988321142787
    H               -2.406569306444463    -0.480933556092354     1.963148321142786
    H               -2.483043606444463    -1.860453556092354    -0.983816678857213

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-092ALA-164GLU-1-dimer.npy', np.array(charges))