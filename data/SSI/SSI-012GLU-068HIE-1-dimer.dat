import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.579534055256924     0.390866832338626     3.278936898433108
    C                0.776534055256924    -0.495133167661374     2.334936898433108
    O               -0.390465944743076    -0.155133167661374     2.045936898433109
    O                1.320534055256924    -1.526133167661374     1.878936898433108
    H                2.280534055256924     0.965866832338626     2.672936898433108
    H                2.164534055256924    -0.212133167661374     3.973936898433108
    H                0.950394055256924     1.116686832338626     3.815004898433108
    C               -0.668465944743076     2.285866832338626    -0.702063101566892
    C               -0.591465944743076     0.971866832338626    -1.426063101566892
    C               -0.610465944743076    -1.213133167661374    -1.686063101566892
    C               -0.498465944743076     0.709866832338626    -2.756063101566891
    N               -0.660465944743076    -0.245133167661374    -0.780063101566892
    N               -0.512465944743076    -0.661133167661374    -2.890063101566892
    H               -0.674465944743076    -2.277133167661374    -1.484063101566892
    H               -0.182465944743076     3.041866832338626    -1.314063101566892
    H               -0.109465944743076     2.207866832338626     0.229936898433108
    H               -0.569465944743076    -1.170133167661374    -3.771063101566892
    H               -0.473465944743076     1.441866832338626    -3.552063101566892
    H               -1.697505944743076     2.604654832338626    -0.479703301566892

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-012GLU-068HIE-1-dimer.npy', np.array(charges))