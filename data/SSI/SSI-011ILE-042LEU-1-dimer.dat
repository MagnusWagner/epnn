import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.067855259521833     0.346368798865856     0.440087682488170
    C                2.484855259521833    -1.076631201134144     0.043087682488170
    H                2.933855259521833     1.009368798865856     0.459087682488170
    H                1.333855259521833     0.750368798865856    -0.251912317511830
    H                1.600855259521833     0.350368798865856     1.426087682488170
    H                1.626855259521833    -1.735631201134144     0.177087682488170
    H                3.312985259521833    -1.417161201134144     0.682029482488170
    H                2.795945259521833    -1.114621201134144    -1.011322317511830
    C               -1.534144740478167     0.250368798865856    -0.108912317511830
    C               -3.016144740478167     0.478368798865856    -0.372912317511830
    H               -1.344144740478167     0.207368798865856     0.965087682488170
    H               -1.218144740478167    -0.686631201134144    -0.568912317511830
    H               -0.962144740478167     1.068368798865856    -0.548912317511830
    H               -3.161144740478167     0.523368798865856    -1.448912317511830
    H               -3.332044740478167     1.423218798865856     0.093422482488170
    H               -3.615554740478167    -0.360231201134144     0.011085982488170

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011ILE-042LEU-1-dimer.npy', np.array(charges))