import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.872968800518642    -1.238261661626189    -1.203736236138236
    C               -1.931968800518642    -2.045261661626189    -1.959736236138236
    H                0.063031199481358    -1.792261661626189    -1.146736236138236
    H               -0.697968800518642    -0.294261661626189    -1.719736236138236
    H               -1.236968800518642    -1.034261661626189    -0.197736236138236
    H               -1.557968800518642    -2.263261661626189    -2.959736236138236
    H               -2.137565800518641    -2.984726661626190    -1.425756236138236
    H               -2.839591800518641    -1.432701661626189    -2.064596236138236
    C                0.336031199481358     0.969738338373811     1.002263763861764
    C                1.555031199481358     0.580738338373811     0.115263763861764
    C                0.927031199481358     1.789738338373811     2.115263763861764
    H               -0.174968800518642     0.094738338373811     1.399263763861764
    H               -0.351968800518642     1.586738338373811     0.421263763861764
    H                1.918031199481358    -0.408261661626189     0.397263763861764
    H                1.277031199481358     0.603738338373811    -0.937736236138236
    H                1.267031199481358     1.115738338373811     2.903263763861764
    H                0.205031199481358     2.502738338373810     2.517263763861764
    H                2.326243199481358     1.332578338373811     0.338803763861764
    H                1.783956199481358     2.298448338373810     1.649543763861764

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-129LEU-195PRO-1-dimer.npy', np.array(charges))