import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.502812332403502    -0.854898103222812     1.586042990576645
    C                0.937187667596498    -1.358898103222812     1.403042990576645
    C               -0.281812332403502     0.461101896777188     2.353042990576645
    H               -1.062812332403502    -1.571898103222812     2.189042990576645
    H               -0.997812332403502    -0.688898103222812     0.630042990576645
    H                0.969187667596498    -2.424898103222811     1.190042990576645
    H                1.421187667596498    -0.800898103222812     0.600042990576645
    H               -0.152812332403502     1.299101896777188     1.665042990576645
    H                1.421787667596498    -1.129618103222812     2.363562990576645
    H                0.644547667596498     0.287081896777188     2.920112990576646
    H               -1.112122332403502     0.628611896777188     3.054842990576645
    C                0.003187667596498     0.357101896777188    -2.048957009423355
    C               -0.195812332403502     1.337101896777188    -3.197957009423355
    H                1.059187667596498     0.095101896777188    -1.956957009423355
    H               -0.330812332403502     0.823101896777188    -1.121957009423355
    H               -0.580812332403502    -0.548898103222812    -2.220957009423354
    H               -1.252812332403502     1.579101896777188    -3.251957009423355
    H                0.102797667596498     0.868261896777188    -4.147177009423355
    H                0.348307667596498     2.281181896777188    -3.047437009423354

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-273PRO-283LEU-1-dimer.npy', np.array(charges))