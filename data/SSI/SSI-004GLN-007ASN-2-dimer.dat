import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.360126542329636    -2.371264955392477     1.639772148423098
    C               -0.129126542329636    -2.345264955392476     0.760772148423098
    O                0.494873457670364    -3.378264955392477     0.500772148423098
    N                0.251873457670364    -1.181264955392477     0.257772148423098
    H                1.093873457670364    -1.172264955392477    -0.301227851576902
    H               -0.254126542329636    -0.333264955392477     0.393772148423098
    H               -1.361126542329636    -3.323264955392477     2.173772148423098
    H               -2.255126542329636    -2.363264955392477     1.019772148423097
    H               -1.375940542329636    -1.571214955392477     2.394532148423098
    C               -0.738126542329636     1.648735044607523    -1.680227851576902
    C                0.227873457670364     2.298735044607523    -0.723227851576902
    O                0.991873457670364     1.589735044607523    -0.054227851576902
    N                0.229873457670364     3.608735044607523    -0.664227851576902
    H               -1.101126542329636     0.730735044607523    -1.228227851576903
    H               -0.153126542329636     1.365735044607523    -2.558227851576902
    H                0.889873457670364     4.051735044607523    -0.043227851576902
    H               -0.381126542329636     4.165735044607524    -1.233227851576902
    H               -1.583582542329636     2.263546044607523    -2.022587851576902

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004GLN-007ASN-2-dimer.npy', np.array(charges))