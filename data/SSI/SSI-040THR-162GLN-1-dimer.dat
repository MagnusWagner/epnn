import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.551253583366464    -0.969067762973711     1.388408591041301
    C                2.615253583366464    -1.997067762973711     1.717408591041301
    H                0.865253583366464    -0.828067762973711     2.215408591041301
    H                2.031253583366464    -0.015067762973711     1.167408591041301
    H                0.994253583366464    -1.286067762973711     0.506408591041301
    H                3.352253583366464    -1.989067762973711     0.913408591041301
    H                2.188593583366464    -3.007667762973711     1.798955591041301
    H                3.124703583366464    -1.734577762973711     2.656321591041301
    C               -0.898746416633536     0.898932237026289    -0.856591408958699
    C               -1.848746416633536    -0.145067762973711    -1.492591408958699
    C               -1.481746416633536     2.270932237026289    -0.813591408958699
    H               -0.706746416633536     0.560932237026289     0.163408591041301
    H                0.046253583366464     0.920932237026289    -1.402591408958699
    H               -2.769746416633536    -0.157067762973711    -0.912591408958699
    H               -1.535746416633536     2.684932237026289    -1.821591408958699
    H               -2.490746416633536     2.218932237026289    -0.404591408958699
    H               -1.369956416633536    -1.135337762973711    -1.481191408958699
    H               -2.084946416633536     0.110022237026289    -2.536210408958699
    H               -0.897736416633536     2.958702237026289    -0.184374908958699

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-040THR-162GLN-1-dimer.npy', np.array(charges))