import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                2.488314999779619     1.139194336983397    -0.203942163948330
    C                1.200314999779619     0.370194336983397    -0.517942163948330
    O                0.154314999779619     1.018194336983397    -0.765942163948330
    O                1.221314999779619    -0.881805663016603    -0.514942163948330
    H                2.214314999779619     2.064194336983397     0.293057836051670
    H                2.981314999779619     1.405194336983397    -1.141942163948330
    H                3.204954999779619     0.578964336983397     0.414583836051670
    C               -2.387685000220381    -1.279805663016603     1.520057836051670
    N               -2.281685000220381    -0.296805663016603     0.401057836051670
    H               -2.377685000220382    -0.785805663016603    -0.483942163948330
    H               -3.038685000220381     0.375194336983397     0.415057836051670
    H               -1.375685000220381     0.170194336983397     0.336057836051670
    H               -3.329685000220381    -1.837805663016603     1.469057836051670
    H               -2.354685000220381    -0.760805663016603     2.484057836051671
    H               -1.544005000220381    -1.983595663016603     1.466421836051670

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-186GLU-189LYS-1-dimer.npy', np.array(charges))