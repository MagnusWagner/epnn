import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.778542412006851     0.271018450012383     1.633193029979656
    O               -2.217542412006851     0.870018450012383     0.469193029979656
    H               -1.336542412006851     0.461018450012383     0.324193029979656
    H               -2.726542412006851    -0.791981549987617     1.699193029979656
    H               -2.271372412006851     0.680798450012382     2.519113029979656
    H               -3.862402412006851     0.457688450012383     1.653452029979656
    C                1.296457587993149     0.055018450012383    -1.953806970020344
    C                1.338457587993149    -0.336981549987618    -0.488806970020344
    O                0.287457587993149    -0.250981549987618     0.192193029979656
    O                2.434457587993149    -0.689981549987618    -0.005806970020344
    H                1.438457587993149    -0.836981549987617    -2.567806970020345
    H                2.115457587993149     0.748018450012383    -2.161806970020344
    H                0.348327587993149     0.537698450012383    -2.233216970020345

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031THR-085GLU-1-dimer.npy', np.array(charges))