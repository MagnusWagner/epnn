import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.862700634281969     2.014012518384421    -0.861631895065228
    C               -1.524700634281969     0.684012518384421    -1.042631895065228
    C               -1.860700634281969    -1.470987481615579    -0.747631895065228
    C               -2.567700634281969     0.310012518384421    -1.830631895065228
    N               -1.106700634281969    -0.449987481615579    -0.376631895065228
    N               -2.759700634281969    -1.039987481615579    -1.626631895065228
    H               -1.736700634281969    -2.494987481615579    -0.413631895065228
    H               -0.057700634281969     2.102012518384421    -1.580631895065228
    H               -0.403700634281969     1.987012518384421     0.123368104934772
    H               -3.442700634281969    -1.625987481615579    -2.092631895065228
    H               -3.136700634281969     0.951012518384421    -2.481631895065228
    H               -1.534320634281969     2.882662518384421    -0.927786895065228
    C                3.087299365718031    -1.287987481615579     1.890368104934772
    C                2.431299365718031     0.043012518384421     1.489368104934772
    O                1.355299365718031     0.060012518384421     0.855368104934772
    O                3.029299365718031     1.093012518384421     1.815368104934772
    H                3.356299365718031    -1.310987481615579     2.921368104934772
    H                4.032299365718031    -1.372987481615579     1.364368104934772
    H                2.503178365718031    -2.192548481615579     1.665485104934772

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-196HIE-218GLU-1-dimer.npy', np.array(charges))