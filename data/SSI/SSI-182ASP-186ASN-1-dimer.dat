import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                2.425533020930887     1.864655066331232     0.087877349930666
    C                1.806533020930887     1.383655066331232    -1.211122650069335
    O                0.582533020930887     1.128655066331232    -1.234122650069334
    O                2.537533020930887     1.272655066331232    -2.219122650069334
    H                1.720533020930887     1.688655066331232     0.903877349930666
    H                2.590533020930887     2.940655066331232     0.006877349930666
    H                3.380573020930887     1.365905066331232     0.309545349930666
    C               -0.713466979069113    -0.445344933668768     1.219877349930665
    C               -0.779466979069113    -0.637344933668768     2.736877349930666
    C               -1.726466979069113    -1.284344933668768     0.470877349930666
    O               -2.886466979069113    -1.387344933668768     0.869877349930666
    N               -1.303466979069113    -1.887344933668768    -0.623122650069334
    H               -0.902466979069113     0.599655066331232     0.977877349930666
    H                0.285533020930887    -0.689344933668768     0.865877349930666
    H               -1.795466979069113    -0.412344933668768     3.068877349930666
    H               -1.970466979069113    -2.416344933668768    -1.166122650069334
    H               -0.323466979069113    -1.801344933668768    -0.887122650069334
    H               -0.055746979069113     0.043315066331232     3.209037349930666
    H               -0.583746979069113    -1.680931933668768     3.024317349930666

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-182ASP-186ASN-1-dimer.npy', np.array(charges))