import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.138514786692273    -0.236325113467161     1.660973615210322
    C                0.632485213307727    -1.314325113467161     2.393973615210322
    C                0.763485213307727     0.993674886532839     1.692973615210322
    H               -1.066514786692273    -0.028325113467161     2.194973615210322
    H               -0.362514786692273    -0.543325113467161     0.641973615210322
    H               -0.052514786692273    -1.907325113467161     3.001973615210322
    H                1.160485213307727    -1.953325113467161     1.697973615210322
    H                0.188485213307727     1.914674886532839     1.623973615210322
    H                1.486485213307727     0.936674886532839     0.876973615210322
    H                1.343075213307727    -0.750208113467161     3.015933615210322
    H                1.291395213307727     0.907735886532839     2.654183615210322
    C               -0.754514786692273     0.316674886532839    -2.064026384789678
    C               -0.519514786692273     0.215674886532839    -3.580026384789678
    H               -0.831514786692273    -0.681325113467161    -1.632026384789678
    H                0.081485213307727     0.826674886532839    -1.591026384789678
    H               -1.658514786692273     0.882674886532839    -1.844026384789678
    H                0.330485213307727    -0.430325113467161    -3.779026384789678
    H               -0.315514786692273     1.213674886532839    -3.933026384789678
    H               -1.397464786692273    -0.094739113467161    -4.165566384789678

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-067PRO-101ILE-1-dimer.npy', np.array(charges))