import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.601684719079676    -1.912458359800695    -0.655354843968565
    C               -0.356684719079676    -3.403458359800695    -0.804354843968565
    H               -0.807684719079676    -1.457458359800695    -1.624354843968565
    H               -1.462684719079676    -1.738458359800695    -0.007354843968565
    H                0.281315280920324    -1.452458359800695    -0.215354843968565
    H               -1.216684719079676    -3.830458359800695    -1.316354843968565
    H                0.547092280920324    -3.596764359800695    -1.400864843968565
    H               -0.249133719079676    -3.880581359800695     0.180925156031435
    C                0.202315280920324     1.271541640199305     0.425645156031435
    C               -0.771684719079676     2.247541640199305     1.092645156031435
    C                1.546315280920324     1.881541640199305    -0.020354843968565
    H                0.397315280920324     0.450541640199305     1.114645156031435
    H               -0.284684719079676     0.870541640199305    -0.464354843968565
    H               -0.380684719079676     2.520541640199305     2.069645156031435
    H                1.340315280920324     2.732541640199305    -0.667354843968565
    H               -1.766566719079676     1.788711640199305     1.191075156031435
    H               -0.886340719079676     3.148091640199305     0.471475156031435
    H                2.124881280920325     2.255021640199305     0.837415156031435
    H                2.142359280920325     1.181581640199305    -0.624334843968565

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-094VAL-152LEU-1-dimer.npy', np.array(charges))