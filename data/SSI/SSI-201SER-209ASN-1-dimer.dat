import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.946711842296401     1.472392828856065    -1.125033398147175
    C                1.269711842296401     1.483392828856065    -2.616033398147175
    O               -0.456288157703599     1.522392828856065    -0.928033398147175
    H                1.327711842296400     0.548392828856065    -0.691033398147175
    H                1.435711842296401     2.311392828856065    -0.627033398147175
    H                2.261711842296401     1.063392828856065    -2.740033398147175
    H               -0.772288157703599     2.407392828856065    -1.158033398147175
    H                1.277231842296401     2.511842828856064    -3.006212398147175
    H                0.556481842296401     0.835922828856065    -3.147159398147175
    C                0.103711842296401    -2.265607171143935     2.012966601852825
    C               -0.439288157703599    -1.159607171143935     1.124966601852825
    O               -0.454288157703599    -1.269607171143935    -0.099033398147175
    N               -0.905288157703599    -0.085607171143935     1.741966601852825
    H               -0.714288157703599    -2.566607171143936     2.669966601852825
    H                0.907711842296401    -1.872607171143935     2.636966601852825
    H               -1.205288157703599     0.679392828856065     1.152966601852825
    H               -0.887288157703599    -0.011607171143935     2.746966601852825
    H                0.447561842296401    -3.139937171143935     1.440848601852825

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-201SER-209ASN-1-dimer.npy', np.array(charges))