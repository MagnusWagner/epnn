import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                3.772241125621175     0.467488249942877    -1.499436452380015
    C                0.204241125621175     0.061488249942877    -2.021436452380015
    C                1.513241125621175     0.167488249942877    -0.256436452380015
    C                2.290241125621175     0.276488249942877    -1.364436452380015
    N                0.216241125621175     0.034488249942877    -0.695436452380015
    N                1.450241125621175     0.207488249942877    -2.459436452380015
    H               -0.606758874378825    -0.105511750057123    -0.106436452380015
    H               -0.677758874378825    -0.035511750057123    -2.642436452380016
    H                1.845241125621175     0.183488249942877     0.769563547619985
    H                4.176241125621174    -0.385511750057123    -2.045436452380015
    H                4.219241125621174     0.472488249942877    -0.506436452380015
    H                4.031551125621174     1.394528249942877    -2.031746452380015
    C               -3.294758874378825     0.422488249942877     2.522563547619985
    C               -2.135758874378825    -0.318511750057123     1.869563547619985
    O               -2.106758874378825    -0.412511750057123     0.623563547619985
    O               -1.257758874378825    -0.817511750057123     2.603563547619985
    H               -2.933758874378825     0.909488249942877     3.431563547619985
    H               -4.065758874378826    -0.291511750057123     2.810563547619985
    H               -3.720048874378825     1.194498249942877     1.864443547619985

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-132HIE-147ASP-1-dimer.npy', np.array(charges))