import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.480689633136742     0.858688115609987     1.039131264408224
    C                0.166689633136742     2.124688115609987     1.827131264408224
    H                0.263689633136742     1.022688115609987    -0.015868735591776
    H                1.534689633136742     0.609688115609987     1.151131264408224
    H               -0.116310366863258     0.027688115609987     1.416131264408225
    H                0.459689633136742     1.949688115609987     2.859131264408224
    H               -0.913630366863258     2.326708115609987     1.781282264408225
    H                0.759909633136742     2.975418115609987     1.460586264408224
    C               -1.066310366863258    -1.289311884390013    -1.531868735591775
    C                0.415689633136742    -1.694311884390013    -1.345868735591775
    H               -1.709310366863258    -2.154311884390014    -1.366868735591776
    H               -1.331310366863258    -0.524311884390013    -0.803868735591776
    H               -1.234310366863258    -0.882311884390013    -2.526868735591775
    H                0.568689633136742    -1.901311884390013    -0.285868735591776
    H                1.056689633136742    -0.855311884390013    -1.616868735591776
    H                0.700109633136742    -2.591371884390013    -1.915419735591776

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-053LEU-091ILE-1-dimer.npy', np.array(charges))