import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.992566776982444    -0.548786378010810     3.911263230755642
    C               -0.240566776982444    -0.766786378010810     0.369263230755642
    C               -0.991566776982444    -0.468786378010810     2.412263230755641
    C               -1.840566776982445     0.163213621989190     1.560263230755641
    N               -0.000566776982444    -1.041786378010810     1.645263230755641
    N               -1.356566776982445    -0.052786378010810     0.286263230755642
    H                0.275433223017556    -1.213786378010810    -0.463736769244358
    H               -1.764566776982445     0.268213621989190    -0.584736769244358
    H               -2.723566776982445     0.727213621989190     1.833263230755642
    H               -0.985566776982445     0.454213621989190     4.307263230755642
    H               -0.053566776982444    -1.006786378010810     4.226263230755642
    H               -1.821526776982445    -1.135664378010810     4.333643230755643
    C                1.971433223017556     1.686213621989190    -3.048736769244358
    C                1.233433223017556     0.552213621989190    -2.340736769244358
    O               -0.016566776982444     0.512213621989190    -2.422736769244358
    O                1.894433223017556    -0.271786378010810    -1.667736769244358
    H                2.933433223017555     1.880213621989190    -2.567736769244358
    H                1.337433223017555     2.563213621989189    -2.972736769244359
    H                2.100523223017556     1.505923621989190    -4.126156769244358

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-031HIE-128GLU-1-dimer.npy', np.array(charges))