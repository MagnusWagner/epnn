import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -1.982599067204807    -2.010257699374787     0.494182108702017
    C               -2.820599067204807    -1.929257699374787     1.761182108702017
    H               -0.967599067204807    -2.337257699374787     0.724182108702017
    H               -2.434599067204807    -2.732257699374787    -0.182817891297983
    H               -1.952599067204807    -1.037257699374787     0.002182108702017
    H               -2.796599067204807    -2.896257699374787     2.258182108702017
    H               -2.418088067204807    -1.158078699374787     2.434432108702016
    H               -3.870274067204808    -1.707363699374787     1.518392108702017
    C               -0.015599067204807     1.056742300625213    -0.769817891297983
    C                0.321400932795193     2.389742300625213    -1.438817891297983
    C                1.210400932795193     0.377742300625213    -0.189817891297983
    O                2.175400932795192     0.134742300625213    -0.945817891297983
    O                1.201400932795193     0.087742300625213     1.026182108702017
    H               -0.744599067204807     1.231742300625213     0.024182108702017
    H               -0.473599067204807     0.394742300625213    -1.506817891297983
    H                0.979400932795193     2.181742300625213    -2.282817891297983
    H                0.821966832795192     3.058662300625213    -0.723297891297983
    H               -0.598016967204808     2.843312300625212    -1.837497891297983

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005LEU-030ASP-1-dimer.npy', np.array(charges))