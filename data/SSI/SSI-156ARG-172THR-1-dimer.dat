import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.694865660369605    -0.467445535478864     0.859155415846210
    C                0.481865660369605    -0.658445535478864    -1.305844584153791
    N               -0.559134339630395     0.023554464521136    -0.847844584153790
    N                1.538865660369605    -0.914445535478864    -0.529844584153790
    N                0.485865660369605    -1.051445535478864    -2.567844584153790
    H               -0.562134339630395     0.396554464521136     0.091155415846210
    H               -1.427134339630395     0.108554464521136    -1.379844584153791
    H                2.288865660369606    -1.478445535478864    -0.937844584153790
    H                1.294865660369605    -1.574445535478864    -2.918844584153790
    H               -0.300134339630395    -0.867445535478864    -3.163844584153791
    H                0.728865660369605    -0.304445535478864     1.338155415846209
    H                2.243865660369605     0.475554464521136     0.870155415846210
    H                2.252455660369606    -1.206615535478864     1.453058415846209
    C               -2.113134339630395     1.273554464521136     2.599155415846210
    O               -1.243134339630395     1.487554464521136     1.489155415846209
    H               -0.919134339630395     2.399554464521136     1.541155415846210
    H               -1.791134339630395     1.899554464521136     3.431155415846209
    H               -3.139404339630395     1.550654464521136     2.316341415846210
    H               -2.061154339630395     0.221704464521136     2.916805415846210

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-156ARG-172THR-1-dimer.npy', np.array(charges))