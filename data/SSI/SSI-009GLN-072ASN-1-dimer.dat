import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.611316493559224     3.740668930169957    -0.395321780282523
    C                0.747316493559224     2.275668930169958    -0.047321780282523
    O                0.585316493559223     1.393668930169957    -0.887321780282523
    N                1.063316493559224     2.008668930169958     1.209678219717477
    H                1.618316493559224     4.128668930169957    -0.548321780282523
    H                0.167316493559224     4.255668930169957     0.458678219717477
    H                1.268316493559224     1.060668930169957     1.470678219717477
    H                1.298316493559224     2.767668930169957     1.845678219717477
    H               -0.012363506440776     3.927918930169957    -1.281867780282523
    C               -0.445683506440777    -3.354331069830043     1.007678219717477
    C               -0.815683506440776    -2.340331069830043    -0.053321780282523
    O               -1.583683506440776    -2.628331069830043    -0.968321780282523
    N               -0.246683506440776    -1.155331069830043     0.048678219717477
    H               -0.415683506440777    -0.446331069830043    -0.654321780282523
    H                0.422316493559223    -0.993331069830043     0.778678219717477
    H               -0.302683506440776    -2.847331069830043     1.963678219717477
    H                0.504316493559223    -3.806331069830043     0.718678219717477
    H               -1.208073506440776    -4.138999069830043     1.121929219717477

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-009GLN-072ASN-1-dimer.npy', np.array(charges))