import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.297534323268644    -0.206734000790122    -1.341734551849524
    C               -1.154534323268644    -1.092734000790122    -2.568734551849524
    H               -0.355534323268644     0.304265999209878    -1.163734551849524
    H               -2.072534323268644     0.540265999209878    -1.523734551849524
    H               -1.584534323268644    -0.805734000790122    -0.476734551849524
    H               -2.143534323268644    -1.438734000790122    -2.873734551849524
    H               -0.525967323268644    -1.966700000790122    -2.342704551849524
    H               -0.703890323268644    -0.508681000790122    -3.384701551849524
    C                0.393465676731356     0.761265999209878     1.526265448150476
    C                1.498465676731356     1.283265999209878     0.602265448150476
    C                0.592465676731356    -0.702734000790122     1.891265448150476
    H                0.353465676731356     1.367265999209878     2.435265448150476
    H               -0.569534323268644     0.883265999209878     1.030265448150476
    H                1.071465676731356     2.104265999209878     0.023265448150476
    H                1.810465676731356     0.506265999209878    -0.096734551849524
    H                0.675465676731356    -1.294734000790122     0.973265448150476
    H                1.534465676731356    -0.796734000790122     2.444265448150476
    H                2.368715676731356     1.673502999209878     1.150335448150476
    H               -0.243443323268644    -1.071798000790122     2.503675448150476

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-021THR-150LYS-1-dimer.npy', np.array(charges))