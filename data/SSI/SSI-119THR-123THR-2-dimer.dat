import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.847864392164354     1.036724533033058    -1.284226967228688
    C                0.552864392164354    -0.015275466966942    -2.354226967228688
    H                1.079864392164354     2.003724533033058    -1.730226967228688
    H               -0.035135607835646     1.168724533033058    -0.670226967228688
    H                1.679864392164354     0.712724533033058    -0.660226967228688
    H                0.462864392164354    -0.988275466966942    -1.875226967228688
    H                1.374622392164354    -0.058295466966942    -3.084200867228688
    H               -0.393850607835646     0.217724533033058    -2.863579867228689
    C               -0.470135607835646    -1.127275466966942     1.985773032771312
    O               -0.812135607835646     0.118724533033058     1.388773032771312
    H               -1.243135607835646     0.636724533033058     2.085773032771312
    H                0.123864392164354    -0.943275466966942     2.881773032771311
    H               -1.385768607835646    -1.666260466966942     2.270573032771312
    H                0.145578392164354    -1.707703466966942     1.282922032771312

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-119THR-123THR-2-dimer.npy', np.array(charges))