import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.701941828794427     2.278669172623144    -0.672064827839974
    C               -0.049941828794427     2.880669172623145     0.550935172160026
    H               -1.372941828794427     2.997669172623145    -1.141064827839975
    H                0.066058171205573     1.988669172623144    -1.391064827839975
    H               -1.266941828794427     1.384669172623145    -0.411064827839974
    H                0.570058171205573     2.136669172623145     1.049935172160026
    H               -0.848691828794427     3.236389172623144     1.218365172160026
    H                0.586058171205573     3.711479172623144     0.211445172160026
    C                0.270058171205573    -1.109330827376856     0.152935172160026
    C               -0.674941828794427    -1.902330827376856    -0.753064827839974
    C                1.172058171205573    -2.208330827376856     0.743935172160025
    H               -0.272941828794427    -0.571330827376856     0.930935172160026
    H                0.870058171205573    -0.422330827376856    -0.447064827839974
    H               -1.490941828794427    -2.326330827376856    -0.167064827839974
    H               -1.057941828794427    -1.267330827376856    -1.553064827839975
    H                0.632058171205573    -2.705330827376856     1.547935172160026
    H                2.116058171205573    -1.832330827376856     1.116935172160026
    H               -0.031651828794427    -2.707750827376855    -1.137094827839974
    H                1.319638171205573    -2.900610827376856    -0.098064827839974

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-186VAL-208PRO-1-dimer.npy', np.array(charges))