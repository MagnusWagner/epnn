import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.801398430062395     0.493272358399406     0.174164359003760
    C               -3.211398430062395     0.514272358399406    -0.441835640996240
    H               -1.131398430062395    -0.081727641600594    -0.464835640996240
    H               -1.410398430062395     1.505272358399406     0.278164359003760
    H               -1.816398430062395     0.053272358399406     1.172164359003760
    H               -3.866398430062395     1.040272358399406     0.254164359003759
    H               -3.610228430062395    -0.499907641600594    -0.591398740996240
    H               -3.210688430062395     1.054882358399406    -1.399825740996240
    C                1.933601569937605    -0.123727641600594    -0.198835640996240
    C                3.081601569937605    -0.882727641600594     0.464164359003760
    H                2.178601569937605     0.932272358399406    -0.303835640996240
    H                1.739601569937605    -0.541727641600594    -1.187835640996241
    H                1.035601569937605    -0.219727641600594     0.409164359003760
    H                2.826601569937605    -1.941727641600594     0.479164359003760
    H                3.224121569937605    -0.530577641600594     1.496481359003760
    H                4.012331569937606    -0.783547641600594    -0.113679240996240

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-026ILE-078ALA-1-dimer.npy', np.array(charges))