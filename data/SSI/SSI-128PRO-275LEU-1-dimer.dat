import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.149986022808929    -1.426057110368757     0.556143398059888
    C                1.143986022808929    -1.690057110368757    -0.566856601940113
    C               -1.091013977191071    -2.239057110368757     0.190143398059888
    H               -0.064013977191071    -0.365057110368757     0.651143398059887
    H                0.546986022808929    -1.796057110368757     1.497143398059887
    H                0.900986022808929    -1.072057110368757    -1.430856601940113
    H                2.169986022808929    -1.520057110368757    -0.246856601940113
    H               -1.494013977191071    -2.697057110368757     1.094143398059888
    H                0.952076022808929    -2.752877110368757    -0.775616601940113
    H               -0.697103977191071    -3.016287110368757    -0.481236601940113
    H               -1.872523977191071    -1.619937110368757    -0.274556601940113
    C                0.197986022808929     2.249942889631242    -0.656856601940113
    C               -0.394013977191071     3.019942889631242     0.511143398059888
    H                0.307986022808929     2.898942889631243    -1.525856601940113
    H                1.191986022808929     1.888942889631243    -0.386856601940113
    H               -0.433013977191071     1.397942889631243    -0.915856601940113
    H                0.179986022808929     3.933942889631243     0.639143398059887
    H               -1.443473977191071     3.269232889631242     0.295523398059887
    H               -0.328363977191071     2.465862889631243     1.459133398059887

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-128PRO-275LEU-1-dimer.npy', np.array(charges))