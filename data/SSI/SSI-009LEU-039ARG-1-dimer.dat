import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.148203151908117     1.847040163032970     1.164725244903929
    C                0.939203151908117     2.780040163032970     2.074725244903930
    H               -0.250796848091883     1.016040163032971     1.734725244903929
    H               -0.683796848091883     2.394040163032971     0.721725244903929
    H                0.793203151908117     1.473040163032970     0.367725244903929
    H                0.255203151908117     3.144040163032971     2.835725244903929
    H                1.784403151908117     2.267040163032970     2.556875244903929
    H                1.294543151908117     3.647450163032970     1.499103244903929
    C               -0.224796848091883    -1.503959836967030    -0.562274755096071
    C               -1.550796848091883    -2.133959836967029    -0.990274755096071
    C                0.675203151908117    -1.091959836967030    -1.734274755096071
    H               -0.426796848091883    -0.636959836967030     0.061725244903929
    H                0.312203151908117    -2.225959836967029     0.050725244903929
    H               -1.913796848091883    -2.736959836967030    -0.158274755096071
    H               -1.394796848091883    -2.816959836967030    -1.822274755096071
    H                0.226203151908117    -0.280959836967030    -2.302274755096071
    H                1.606203151908117    -0.683959836967030    -1.335274755096071
    H               -2.344839848091883    -1.410989836967030    -1.228631755096071
    H                0.897463151908117    -1.924889836967030    -2.417527755096071

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-009LEU-039ARG-1-dimer.npy', np.array(charges))