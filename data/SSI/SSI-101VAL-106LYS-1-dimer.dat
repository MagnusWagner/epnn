import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.170059812524744     1.282587435272755    -1.629506689519862
    C               -0.827059812524744     1.139587435272755    -3.105506689519862
    H               -1.703059812524744     2.217587435272754    -1.450506689519862
    H               -1.800059812524744     0.448587435272755    -1.315506689519862
    H               -0.263059812524744     1.265587435272755    -1.023506689519862
    H               -0.289059812524744     0.205587435272755    -3.264506689519862
    H               -0.219009812524744     1.995147435272755    -3.434566689519862
    H               -1.776449812524744     1.122957435272755    -3.660826689519862
    C                0.596940187475256    -0.855412564727245     1.043493310480138
    C               -0.127059812524744     0.142587435272755     1.970493310480138
    C                1.577940187475256    -1.767412564727245     1.794493310480138
    H               -0.143059812524744    -1.470412564727245     0.527493310480138
    H                1.147940187475256    -0.293412564727245     0.288493310480138
    H               -0.794059812524744     0.742587435272755     1.349493310480138
    H                2.248940187475256    -1.177412564727245     2.417493310480138
    H                1.003940187475256    -2.437412564727245     2.437493310480138
    H                0.578430187475256     0.824167435272755     2.468223310480138
    H               -0.770279812524744    -0.382562564727245     2.691943310480138
    H                2.175160187475256    -2.369652564727246     1.094033310480138

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-101VAL-106LYS-1-dimer.npy', np.array(charges))