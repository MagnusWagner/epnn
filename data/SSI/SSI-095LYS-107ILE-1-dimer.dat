import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.039096322116991    -0.717301181284593     0.475026989550817
    C               -1.402096322116991    -2.001301181284592    -0.271973010449183
    C               -0.713096322116991    -0.928301181284593     1.944026989550817
    H               -0.177096322116991    -0.263301181284593    -0.007973010449183
    H               -1.862096322116991    -0.004301181284593     0.396026989550817
    H               -2.175096322116992    -2.539301181284592     0.279026989550817
    H                0.066903677883009    -1.681301181284593     2.059026989550817
    H               -0.343096322116991     0.015698818715407     2.341026989550818
    H               -0.501366322116991    -2.618621181284592    -0.404633010449183
    H               -1.854186322116991    -1.742241181284593    -1.240733010449183
    H               -1.620006322116991    -1.222181181284593     2.492796989550818
    C                1.498903677883009     2.084698818715407    -0.349973010449183
    C                1.590903677883009     1.501698818715407    -1.763973010449183
    H                2.350903677883009     2.736698818715408    -0.158973010449183
    H                0.579903677883009     2.659698818715408    -0.238973010449183
    H                1.475903677883009     1.302698818715407     0.406026989550817
    H                0.730903677883009     0.853698818715407    -1.938973010449183
    H                2.511733677883009     0.909738818715407    -1.871923010449183
    H                1.584463677883009     2.313448818715408    -2.506283010449182

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-095LYS-107ILE-1-dimer.npy', np.array(charges))