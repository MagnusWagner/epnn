import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.784443868788457     0.367300505957173     0.395643003552087
    C               -0.638443868788456     1.310300505957173     0.110643003552087
    O               -0.846443868788456     2.490300505957173    -0.151356996447913
    N                0.580556131211544     0.799300505957173     0.162643003552087
    H                1.341556131211544     1.347300505957173    -0.216356996447913
    H                0.680556131211544    -0.204699494042827     0.281643003552087
    H               -1.693443868788457     0.012300505957173     1.422643003552087
    H               -1.695443868788457    -0.489699494042827    -0.273356996447913
    H               -2.765651868788456     0.844630505957173     0.256393003552087
    C                1.896556131211544    -2.480699494042828    -0.350356996447913
    O                0.572556131211544    -2.018699494042827    -0.103356996447913
    H               -0.028443868788456    -2.751699494042827    -0.290356996447913
    H                2.543556131211544    -1.627699494042827    -0.558356996447913
    H                2.265886131211544    -3.018939494042827     0.535023003552086
    H                1.898716131211543    -3.139549494042827    -1.231216996447913

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-044ASN-059THR-1-dimer.npy', np.array(charges))