import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.761708417655456    -0.434106344521613    -4.163446022455360
    C                1.743708417655456    -0.588106344521612    -0.670446022455360
    C               -0.046291582344544     0.109893655478387    -1.728446022455361
    C                0.816708417655456    -0.397106344521613    -2.656446022455360
    N                0.524708417655456    -0.094106344521613    -0.492446022455361
    N                1.953708417655456    -0.773106344521613    -1.970446022455361
    H                0.130708417655456     0.127893655478387     0.426553977544640
    H                2.449708417655456    -0.813106344521613     0.122553977544640
    H               -1.020291582344544     0.540893655478387    -1.911446022455361
    H                0.680708417655456    -1.477106344521613    -4.469446022455360
    H                1.700708417655456    -0.040106344521613    -4.539446022455360
    H               -0.068478582344544     0.132163655478387    -4.610805022455360
    C               -2.378291582344544     1.011893655478387     1.890553977544639
    C               -1.262291582344544     0.479893655478387     2.768553977544639
    O               -0.127291582344544     0.339893655478388     2.263553977544639
    O               -1.512291582344544     0.165893655478387     3.947553977544640
    H               -2.946291582344544     0.157893655478387     1.515553977544639
    H               -1.931291582344544     1.505893655478387     1.023553977544639
    H               -3.067087582344544     1.716373655478387     2.379703977544640

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-037HIE-050GLU-1-dimer.npy', np.array(charges))