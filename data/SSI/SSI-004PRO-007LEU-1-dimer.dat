import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.739926565052590     1.134320311732380     0.216403911456337
    C               -1.895926565052590     0.373320311732380    -0.413596088543663
    C               -0.600926565052590     2.373320311732380    -0.666596088543663
    H                0.162073434947410     0.529320311732380     0.150403911456337
    H               -0.947926565052589     1.397320311732380     1.254403911456336
    H               -1.858926565052589    -0.687679688267620    -0.166596088543663
    H               -2.840926565052590     0.807320311732380    -0.083596088543663
    H               -1.286926565052590     3.147320311732380    -0.318596088543664
    H               -1.772286565052590     0.541330311732380    -1.493636088543663
    H               -0.933966565052590     2.022190311732380    -1.654419088543664
    H                0.430883434947410     2.754030311732380    -0.687506088543663
    C                1.022073434947411    -2.245679688267620     0.090403911456337
    C                2.174073434947411    -1.558679688267620     0.800403911456336
    H                1.318073434947410    -3.241679688267620    -0.230596088543663
    H                0.176073434947411    -2.335679688267620     0.772403911456336
    H                0.709073434947410    -1.666679688267620    -0.777596088543663
    H                1.816073434947410    -0.613679688267620     1.204403911456337
    H                2.983803434947411    -1.379458688267620     0.077761911456337
    H                2.528713434947411    -2.186056688267620     1.631446911456337

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-004PRO-007LEU-1-dimer.npy', np.array(charges))