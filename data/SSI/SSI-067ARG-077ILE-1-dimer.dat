import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.175242300267745    -1.325984083068090    -0.632220008519178
    C                0.186757699732255    -2.524984083068091     0.215779991480822
    C               -1.548242300267745    -1.521984083068090    -1.277220008519178
    H               -0.249242300267745    -0.480984083068090     0.033779991480822
    H                0.573757699732255    -1.097984083068090    -1.378220008519178
    H                0.125757699732255    -3.420984083068091    -0.402220008519178
    H               -0.565242300267745    -2.619984083068090     1.002779991480822
    H               -1.520242300267745    -2.435984083068090    -1.876220008519178
    H               -2.315242300267744    -1.661984083068090    -0.511220008519178
    H                1.178937699732255    -2.482504083068091     0.688828991480822
    H               -1.795811300267745    -0.679644083068090    -1.939921008519178
    C                0.978757699732255     2.034015916931910     0.409779991480822
    C                0.554757699732255     3.254015916931910     1.238779991480822
    H                0.631757699732255     1.133015916931910     0.897779991480822
    H                0.572757699732255     2.102015916931910    -0.599220008519178
    H                2.066757699732255     1.987015916931910     0.359779991480822
    H               -0.480242300267745     3.501015916931910     0.995779991480822
    H                1.179757699732255     4.097015916931909     0.944779991480822
    H                0.634777699732255     3.071105916931909     2.320510591480821

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-067ARG-077ILE-1-dimer.npy', np.array(charges))