import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.746143108428700     0.424427124497130     0.398872099847674
    C                1.362143108428700     1.544427124497130     1.357872099847674
    H                1.313143108428700    -0.508572875502870     0.745872099847674
    H                1.370143108428699     0.647427124497130    -0.600127900152326
    H                2.830143108428699     0.315427124497130     0.356872099847674
    H                0.286143108428700     1.699427124497130     1.288872099847674
    H                1.628043108428700     1.251287124497130     2.384212099847674
    H                1.877253108428700     2.476127124497130     1.081112099847674
    C               -1.344856891571300    -0.767572875502870    -1.577127900152326
    C               -1.761856891571300    -1.209572875502870    -0.182127900152326
    H               -2.010856891571300    -1.172572875502870    -2.338127900152326
    H               -1.394856891571300     0.320427124497130    -1.631127900152326
    H               -0.319856891571300    -1.071572875502870    -1.767127900152325
    H               -2.782856891571301    -0.885572875502870    -0.032127900152326
    H               -1.148856891571300    -0.681572875502870     0.549872099847674
    H               -1.666306891571300    -2.291532875502869    -0.008267900152326

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-105LEU-168ILE-1-dimer.npy', np.array(charges))