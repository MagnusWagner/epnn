import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.217722943352816    -0.253566456757068     0.800779916749316
    C               -1.662722943352816    -1.607566456757068     1.281779916749316
    C               -1.571722943352816     0.683433543242932     1.926779916749316
    H               -1.781722943352816     0.019433543242932    -0.093220083250684
    H               -0.150722943352816    -0.241566456757068     0.588779916749316
    H               -1.929722943352816    -2.231566456757069     0.427779916749316
    H               -0.870722943352816    -2.071566456757068     1.870779916749316
    H               -1.699722943352816     1.708433543242932     1.572779916749316
    H               -0.792722943352816     0.651433543242932     2.688779916749316
    H               -2.524422943352816    -1.380130456757068     1.926559916749316
    H               -2.497962943352816     0.267847543242932     2.350289916749316
    C                1.697277056647184     0.340433543242932    -1.451220083250684
    C                2.675277056647184     0.817433543242932    -2.516220083250684
    H                1.522277056647184    -0.731566456757068    -1.543220083250684
    H                2.111277056647184     0.546433543242932    -0.465220083250684
    H                0.751277056647184     0.872433543242932    -1.550220083250684
    H                3.583277056647184     0.215433543242932    -2.466220083250684
    H                2.948277056647184     1.842433543242932    -2.265220083250684
    H                2.279297056647184     0.768653543242932    -3.541320083250684

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-130PRO-139ILE-1-dimer.npy', np.array(charges))