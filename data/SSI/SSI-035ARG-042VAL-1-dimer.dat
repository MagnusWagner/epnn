import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.680528907466000    -0.935314525114968    -1.073633468479904
    C               -0.983528907466000     0.348685474885032    -1.839633468479904
    C               -1.743528907466000    -2.014314525114969    -1.278633468479904
    H                0.310471092534000    -1.309314525114968    -1.328633468479904
    H               -0.672528907466000    -0.683314525114968    -0.013633468479904
    H               -0.319528907466000     1.128685474885032    -1.460633468479904
    H               -2.006528907466000     0.650685474885032    -1.611633468479904
    H               -1.941528907466000    -2.509314525114969    -0.326633468479904
    H               -2.683528907466000    -1.557314525114968    -1.592633468479904
    H               -0.862861907466000     0.288705474885032    -2.931348468479903
    H               -1.416888317466000    -2.747554525114968    -2.030736468479904
    C                1.109471092534000     1.263685474885031     1.547366531520096
    C                2.259471092534000     1.263685474885031     2.556366531520097
    H                0.292471092534000     0.635685474885032     1.904366531520096
    H                0.730471092534000     2.276685474885032     1.426366531520096
    H                1.456471092534000     0.884685474885032     0.584366531520096
    H                1.882471092534000     1.626685474885032     3.511366531520096
    H                2.637993092534000     0.239535474885032     2.689916531520096
    H                3.053180092534000     1.951475474885032     2.229296531520096

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035ARG-042VAL-1-dimer.npy', np.array(charges))