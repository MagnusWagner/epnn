import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.892174131755139    -1.145199475537378     1.830410656400354
    C               -0.121825868244861    -2.229199475537378     2.187410656400353
    H                1.517174131755139    -0.919199475537379     2.692410656400354
    H                1.533174131755139    -1.469199475537379     1.012410656400354
    H                0.353174131755139    -0.248199475537378     1.549410656400354
    H                0.414174131755139    -3.046199475537378     2.670410656400354
    H               -0.897415868244861    -1.839989475537378     2.863410656400354
    H               -0.592215868244861    -2.611039475537378     1.269300656400354
    C               -0.065825868244861     0.719800524462621    -1.078589343599646
    C                0.680174131755139     1.290800524462622    -2.297589343599646
    C               -1.391825868244861     1.413800524462621    -0.725589343599646
    H               -0.227825868244861    -0.351199475537378    -1.203589343599646
    H                0.584174131755139     0.862800524462621    -0.220589343599646
    H                0.656174131755139     2.380800524462622    -2.250589343599646
    H               -2.135825868244861     1.234800524462622    -1.500589343599646
    H               -1.767825868244861     1.011800524462622     0.216410656400354
    H               -1.232825868244861     2.486800524462621    -0.612589343599646
    H                1.725734131755139     0.949520524462621    -2.279369343599646
    H                0.155044131755139     0.963130524462622    -3.206909343599646

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-006VAL-038ILE-1-dimer.npy', np.array(charges))