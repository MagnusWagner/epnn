import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.045567574267624     1.061370598375489     1.825127071519216
    C               -0.065567574267624     2.152370598375489     2.261127071519216
    H               -1.697567574267624     0.774370598375489     2.642127071519217
    H               -0.485567574267624     0.190370598375489     1.503127071519216
    H               -1.671567574267624     1.419370598375489     1.010127071519217
    H               -0.626567574267624     2.877370598375490     2.848127071519217
    H                0.740832425732376     1.724060598375489     2.874537071519216
    H                0.369852425732376     2.666699598375490     1.391717071519217
    C                0.112432425732376    -0.700629401624511    -1.105872928480784
    C               -0.459567574267624    -1.306629401624511    -2.393872928480783
    C                1.472432425732376    -1.254629401624511    -0.672872928480783
    H                0.183432425732376     0.382370598375489    -1.207872928480783
    H               -0.584567574267624    -0.913629401624511    -0.300872928480783
    H               -0.477567574267624    -2.392629401624511    -2.293872928480783
    H                1.724432425732376    -0.855629401624511     0.310127071519217
    H                2.249432425732376    -0.956629401624511    -1.373872928480784
    H                1.429432425732376    -2.342629401624510    -0.612872928480783
    H               -1.491347574267624    -0.940282401624511    -2.499772928480783
    H                0.168712425732376    -1.059905601624511    -3.262422928480783

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-005VAL-037ILE-1-dimer.npy', np.array(charges))