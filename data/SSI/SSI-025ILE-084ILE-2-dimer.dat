import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.511164830498320    -1.125385790129233    -0.262188229664640
    C                2.443164830498321    -1.099385790129233     0.949811770335360
    H                0.453164830498320    -1.052385790129233    -0.068188229664639
    H                1.792164830498320    -0.312385790129233    -0.932188229664640
    H                1.671164830498320    -2.062385790129233    -0.796188229664640
    H                2.476164830498321    -0.093385790129233     1.368811770335361
    H                3.441164830498320    -1.369385790129233     0.604811770335360
    H                2.088414830498320    -1.805305790129233     1.715210770335361
    C               -1.997835169501680     0.352614209870767    -0.389188229664640
    C               -1.955835169501680     1.878614209870767    -0.291188229664640
    H               -1.384835169501680     0.006614209870767    -1.224188229664639
    H               -1.676835169501680    -0.119385790129233     0.533811770335361
    H               -3.011835169501679    -0.013385790129233    -0.531188229664640
    H               -2.455835169501679     2.167614209870766     0.629811770335361
    H               -2.487327569501679     2.348891209870767    -1.131638229664640
    H               -0.913421169501680     2.228006209870766    -0.255168229664639

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025ILE-084ILE-2-dimer.npy', np.array(charges))