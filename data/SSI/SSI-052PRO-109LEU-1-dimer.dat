import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.976735106062101     0.723322404479453    -0.712183440844466
    C                2.201735106062102     1.615322404479453    -0.851183440844466
    C                1.429735106062101    -0.521677595520547    -1.480183440844466
    H                0.088735106062101     1.180322404479453    -1.148183440844466
    H                0.825735106062101     0.480322404479453     0.339816559155534
    H                2.173735106062102     2.143322404479453    -1.806183440844466
    H                2.235735106062101     2.323322404479453    -0.022183440844466
    H                1.279735106062101    -0.350677595520547    -2.547183440844466
    H                0.866735106062101    -1.398677595520547    -1.163183440844466
    H                3.049455106062101     0.914514404479453    -0.835443340844466
    H                2.499635106062101    -0.632779595520547    -1.250042570844466
    C               -1.649264893937899    -0.490677595520547     1.305816559155534
    C               -2.906264893937899    -1.273677595520547     1.694816559155534
    H               -1.026264893937899    -0.323677595520547     2.183816559155534
    H               -1.087264893937899    -1.055677595520547     0.562816559155534
    H               -1.932264893937899     0.473322404479453     0.880816559155534
    H               -3.508264893937899    -1.399677595520547     0.797816559155534
    H               -3.465104893937899    -0.708403595520547     2.455185559155534
    H               -2.627534893937899    -2.271997595520547     2.063142559155534

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-052PRO-109LEU-1-dimer.npy', np.array(charges))