import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -2.800483810442328     0.482159818501890    -2.308970687617610
    C               -0.267483810442328    -1.207840181498109    -0.339970687617610
    C               -1.994483810442328    -0.434840181498110    -1.458970687617610
    C               -2.412483810442328    -1.502840181498110    -0.736970687617610
    N               -0.645483810442328    -0.274840181498110    -1.208970687617610
    N               -1.312483810442328    -1.984840181498110    -0.059970687617610
    H                0.747516189557672    -1.398840181498110    -0.017970687617610
    H               -1.261483810442328    -2.847840181498110     0.473029312382390
    H               -3.418483810442328    -1.903840181498109    -0.716970687617610
    H               -3.662483810442328    -0.066840181498110    -2.691970687617610
    H               -2.200483810442328     0.814159818501890    -3.156970687617610
    H               -3.148523810442328     1.347952318501891    -1.726500687617610
    C                1.251516189557672     1.697159818501891     2.299029312382390
    C                2.261516189557673     1.130159818501891     1.367029312382390
    O                3.075516189557672     1.866159818501891     0.762029312382390
    O                2.239516189557672    -0.099840181498110     1.248029312382390
    H                1.205516189557672     1.083159818501890     3.203029312382390
    H                0.276516189557672     1.652159818501890     1.811029312382390
    H                1.486876189557672     2.731714318501890     2.589379312382390

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-148HIE-152GLU-1-dimer.npy', np.array(charges))