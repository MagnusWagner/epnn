import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.206136121389450    -1.048943272473832    -0.811521621148844
    C               -1.331136121389451    -2.089943272473831    -0.742521621148844
    C                1.234863878610549    -1.509943272473832    -1.087521621148844
    H               -0.479136121389450    -0.287943272473832    -1.540521621148844
    H               -0.185136121389450    -0.557943272473832     0.156478378851156
    H               -1.068136121389450    -2.804943272473832     0.038478378851156
    H                1.886863878610549    -0.705943272473832    -0.746521621148844
    H               -1.444776121389451    -2.611483272473832    -1.704330621148844
    H               -2.277726121389450    -1.622063272473832    -0.434211621148844
    H                1.515442878610550    -2.411243272473831    -0.522775621148844
    H                1.439965878610549    -1.638763272473832    -2.160526621148845
    C                0.146863878610550     2.318056727526168     0.524478378851156
    C                0.139863878610550     2.240056727526168     2.050478378851156
    H                0.828863878610550     1.576056727526168     0.110478378851156
    H               -0.858136121389450     2.138056727526168     0.140478378851156
    H                0.451863878610550     3.311056727526168     0.194478378851156
    H               -0.403136121389450     3.110056727526168     2.421478378851156
    H                1.163964878610549     2.251486727526168     2.451834378851156
    H               -0.384076121389450     1.333756727526168     2.388274378851156

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-028LEU-037VAL-1-dimer.npy', np.array(charges))