import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.061688831026563     1.447648123446633    -1.457170857537208
    C               -1.193688831026563     0.729648123446633    -0.711170857537208
    O               -1.589688831026563     1.155648123446633     0.393829142462792
    O               -1.661688831026563    -0.315351876553367    -1.228170857537207
    H               -0.316688831026563     1.546648123446633    -2.512170857537208
    H                0.818311168973438     0.801648123446633    -1.417170857537207
    H                0.236481168973437     2.419958123446634    -1.038000857537207
    C                1.665311168973437    -1.223351876553367     1.003829142462793
    C                2.753311168973438    -1.729351876553367     1.947829142462792
    H                2.086311168973437    -1.023351876553367     0.015829142462792
    H                0.877311168973437    -1.971351876553367     0.929829142462793
    H                1.226311168973437    -0.305351876553367     1.401829142462792
    H                2.286311168973438    -1.991351876553367     2.891829142462793
    H                3.505761168973438    -0.943051876553367     2.107679142462792
    H                3.217401168973438    -2.637261876553367     1.535139142462792

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-061GLU-145LEU-1-dimer.npy', np.array(charges))