import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.214373245580510    -2.282303549664371    -3.430409271654843
    C                0.854373245580510    -1.125303549664371    -2.492409271654842
    O                1.204373245580510    -1.208303549664371    -1.294409271654842
    O                0.246373245580510    -0.148303549664371    -2.955409271654843
    H                0.459373245580510    -3.065303549664371    -3.340409271654842
    H                2.163373245580510    -2.717303549664371    -3.108409271654842
    H                1.318353245580510    -1.983373549664371    -4.483889271654842
    C               -1.642626754419490     2.483696450335629     2.965590728345158
    C               -0.004626754419490    -0.544303549664371     1.725590728345158
    C               -0.583626754419490     1.395696450335629     0.860590728345158
    C               -0.957626754419490     1.406696450335629     2.160590728345158
    N               -0.006626754419490     0.168696450335629     0.613590728345158
    N               -0.586626754419490     0.170696450335629     2.690590728345158
    H                0.386373245580510    -0.154303549664371    -0.271409271654842
    H                0.393373245580510    -1.549303549664371     1.824590728345158
    H               -0.716626754419490     2.202696450335629     0.153590728345158
    H               -2.543626754419490     2.054696450335629     3.404590728345158
    H               -1.925626754419490     3.283696450335629     2.288590728345158
    H               -0.983696754419490     2.857356450335629     3.763205728345158

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-024ASP-065HIE-1-dimer.npy', np.array(charges))