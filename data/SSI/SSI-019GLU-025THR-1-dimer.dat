import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                1.613306547875651    -0.033980097317100     1.002523809145835
    C                0.264306547875651     0.661019902682900     1.180523809145836
    O               -0.532693452124349     0.633019902682900     0.211523809145836
    O               -0.060693452124349     1.121019902682900     2.300523809145836
    H                1.979306547875651     0.120019902682900    -0.013476190854164
    H                1.459306547875651    -1.107980097317100     1.122523809145836
    H                2.366436547875651     0.282447902682900     1.739185809145836
    C               -0.752693452124349    -0.940980097317100    -2.860476190854164
    O               -0.434693452124349    -1.284980097317100    -1.517476190854164
    H               -0.384693452124349    -0.452980097317100    -0.985476190854164
    H               -0.787693452124349     0.144019902682900    -2.945476190854164
    H                0.030386547875651    -1.339082097317100    -3.522520190854164
    H               -1.740893452124349    -1.352730097317100    -3.113305190854164

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-019GLU-025THR-1-dimer.npy', np.array(charges))