import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.745405363123667    -2.314051392893754     1.457898101041840
    N                0.700594636876333    -2.026051392893753     1.207898101041840
    H                0.748594636876333    -1.355051392893754     0.436898101041840
    H                1.146594636876333    -1.608051392893753     2.014898101041840
    H                1.215594636876333    -2.859051392893754     0.948898101041840
    H               -1.283405363123667    -1.374051392893754     1.620898101041840
    H               -0.858405363123667    -2.930051392893753     2.353898101041840
    H               -1.204865363123667    -2.844921392893753     0.611099501041840
    C               -0.069405363123667     2.203948607106247     0.296898101041840
    C               -0.009405363123667     1.116948607106246    -0.770101898958160
    O               -0.283405363123667    -0.055051392893754    -0.457101898958160
    O                0.320594636876333     1.418948607106246    -1.943101898958160
    H               -0.897405363123667     2.849948607106246     0.003898101041840
    H                0.857594636876333     2.781948607106246     0.267898101041840
    H               -0.235025363123667     1.855569607106246     1.327044171041840

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008LYS-068GLU-2-dimer.npy', np.array(charges))