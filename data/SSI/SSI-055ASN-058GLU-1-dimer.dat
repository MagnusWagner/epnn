import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.963392146879382     1.326283398041337     0.116379464859199
    C               -1.259392146879382     1.999283398041337     1.467379464859199
    C               -1.994392146879382     0.282283398041337    -0.262620535140801
    O               -2.312392146879382     0.113283398041337    -1.437620535140801
    N               -2.525392146879383    -0.432716601958663     0.722379464859199
    H               -0.899392146879382     2.067283398041337    -0.677620535140801
    H               -0.001392146879382     0.838283398041337     0.181379464859199
    H               -1.218392146879382     1.229283398041337     2.234379464859199
    H               -3.204392146879382    -1.138716601958663     0.478379464859199
    H               -2.188392146879382    -0.351716601958663     1.662379464859199
    H               -2.271752146879382     2.428953398041337     1.489993464859199
    H               -0.451616146879382     2.693723398041337     1.741691464859199
    C                2.947607853120618    -0.362716601958663     1.018379464859199
    C                2.219607853120618    -0.819716601958663    -0.237620535140801
    O                2.800607853120618    -0.699716601958663    -1.337620535140801
    O                1.064607853120618    -1.294716601958663    -0.134620535140801
    H                3.542607853120618    -1.190716601958663     1.414379464859199
    H                2.213607853120618    -0.078716601958663     1.776379464859199
    H                3.611404853120618     0.490843398041337     0.816349464859199

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-055ASN-058GLU-1-dimer.npy', np.array(charges))