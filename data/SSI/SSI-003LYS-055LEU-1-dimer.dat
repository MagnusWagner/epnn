import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.182463566864223    -1.157695717904784     0.215820191813125
    C               -1.574463566864223    -0.968695717904784     1.677820191813125
    C               -0.381463566864223    -2.432695717904784    -0.012179808186875
    H               -2.091463566864223    -1.199695717904784    -0.387179808186875
    H               -0.596463566864223    -0.303695717904784    -0.116179808186875
    H               -2.171463566864223    -1.841695717904784     1.963820191813125
    H                0.536536433135777    -2.409695717904783     0.574820191813125
    H               -1.014463566864223    -3.248695717904783     0.337820191813125
    H               -2.175258566864223    -0.053847717904784     1.787814301813125
    H               -0.690940566864223    -0.924627717904784     2.331612891813125
    H               -0.112268566864223    -2.597085717904784    -1.065987808186875
    C                1.077536433135777     1.646304282095216    -1.109179808186875
    C                1.988536433135777     2.833304282095217    -0.751179808186875
    H                0.058536433135777     1.843304282095217    -0.789179808186875
    H                1.073536433135777     1.499304282095216    -2.190179808186875
    H                1.446536433135777     0.743304282095216    -0.625179808186875
    H                1.522536433135777     3.733304282095216    -1.152179808186875
    H                2.113999433135777     2.977407282095216     0.332099191813125
    H                2.961716433135777     2.728753282095216    -1.253165808186875

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-003LYS-055LEU-1-dimer.npy', np.array(charges))