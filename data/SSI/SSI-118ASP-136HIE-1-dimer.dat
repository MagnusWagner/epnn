import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                0.580771669939785    -0.477949868473977     4.236915931648765
    C                0.576771669939785    -0.086949868473977     2.777915931648766
    O               -0.510228330060215     0.069050131526023     2.183915931648766
    O                1.700771669939785     0.054050131526023     2.239915931648765
    H                1.065771669939785     0.324050131526023     4.796915931648766
    H                1.212771669939785    -1.341949868473977     4.371915931648766
    H               -0.412808330060215    -0.649901068473977     4.676505931648766
    C               -0.478228330060215     1.198050131526023    -3.982084068351234
    C               -0.560228330060215    -1.209949868473977    -1.243084068351235
    C               -0.184228330060215     0.937050131526023    -1.392084068351234
    C               -0.390228330060215     0.473050131526023    -2.659084068351234
    N               -0.260228330060215    -0.139949868473977    -0.533084068351234
    N               -0.672228330060215    -0.862949868473977    -2.535084068351235
    H               -0.179228330060215    -0.103949868473977     0.487915931648766
    H               -0.727228330060215    -2.200949868473977    -0.840084068351234
    H                0.112771669939785     1.933050131526023    -1.155084068351234
    H               -1.345228330060215     0.800050131526023    -4.509084068351235
    H                0.374771669939785     1.016050131526023    -4.618084068351235
    H               -0.618488330060215     2.282530131526023    -3.862791068351234

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-118ASP-136HIE-1-dimer.npy', np.array(charges))