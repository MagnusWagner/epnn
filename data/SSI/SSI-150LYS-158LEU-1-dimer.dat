import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.989857118169707    -0.736886930084751    -0.497314772281531
    C               -2.184857118169707     0.024113069915249     0.075685227718469
    C               -1.340857118169707    -2.083886930084751    -1.131314772281531
    H               -0.481857118169707    -0.115886930084751    -1.238314772281531
    H               -0.297857118169707    -0.911886930084751     0.325685227718469
    H               -2.727857118169707    -0.652886930084751     0.741685227718469
    H               -2.083857118169707    -2.596886930084751    -0.520314772281531
    H               -1.781857118169707    -1.901886930084751    -2.112314772281531
    H               -2.869633118169707     0.355213069915249    -0.718955772281531
    H               -1.835107118169707     0.873207069915249     0.681252227718469
    H               -0.455617118169707    -2.725811310084751    -1.250825772281531
    C                2.318142881830293     0.643113069915249     0.582685227718469
    C                2.132142881830293     2.108113069915249     0.930685227718469
    H                3.335142881830293     0.473113069915249     0.225685227718469
    H                2.142142881830293     0.031113069915249     1.467685227718469
    H                1.621142881830293     0.353113069915249    -0.199314772281531
    H                1.147142881830293     2.214113069915249     1.379685227718469
    H                2.182442881830293     2.722445069915249     0.019605227718469
    H                2.882972881830293     2.423911069915249     1.669956227718469

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-150LYS-158LEU-1-dimer.npy', np.array(charges))