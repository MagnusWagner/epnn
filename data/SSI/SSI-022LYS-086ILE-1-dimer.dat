import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.119302750602590     0.431571629843162    -0.364108345366630
    C               -0.737302750602590     1.867571629843162    -0.712108345366630
    C               -1.977302750602590    -0.200428370156838    -1.460108345366630
    H               -0.207302750602590    -0.145428370156838    -0.267108345366630
    H               -1.651302750602590     0.439571629843162     0.586891654633370
    H               -1.634302750602590     2.484571629843162    -0.769108345366630
    H               -0.276302750602590     1.857571629843162    -1.700108345366630
    H               -2.915302750602590     0.341571629843162    -1.572108345366630
    H               -1.434302750602590    -0.155428370156838    -2.404108345366630
    H               -0.015502750602590     2.313304629843162    -0.011878345366630
    H               -2.179361750602590    -1.259073370156838    -1.240008345366630
    C                1.674697249397410    -0.512428370156838     1.776891654633370
    C                2.084697249397410    -1.552428370156838     0.740891654633370
    H                1.968697249397410     0.483571629843162     1.476891654633370
    H                0.599697249397410    -0.557428370156838     1.950891654633370
    H                2.180697249397410    -0.711428370156838     2.719891654633370
    H                1.308697249397410    -1.637428370156838    -0.017108345366630
    H                2.109697249397410    -2.518428370156838     1.240891654633370
    H                3.033417249397410    -1.338662370156838     0.226851654633370

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-022LYS-086ILE-1-dimer.npy', np.array(charges))