import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.949431021288839     1.099287019438707     0.440405164028632
    O               -1.218431021288839    -0.056712980561293     0.850405164028632
    H               -0.466431021288839    -0.167712980561293     0.236405164028632
    H               -2.911431021288839     1.106287019438707     0.955405164028632
    H               -1.382077021288839     2.002347019438707     0.709827164028632
    H               -2.122623021288839     1.049697019438707    -0.644742835971368
    C                2.249568978711161    -0.351712980561293    -0.451594835971368
    O                0.881568978711161    -0.607712980561293    -0.775594835971368
    H                0.849568978711161    -1.477712980561293    -1.200594835971368
    H                2.885568978711161    -0.946712980561293    -1.107594835971368
    H                2.473278978711162     0.715747019438707    -0.594737835971368
    H                2.446698978711161    -0.638252980561293     0.591972164028632

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-039THR-046THR-1-dimer.npy', np.array(charges))