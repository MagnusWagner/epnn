import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -0.693974497591666     1.192265973808790     2.403979553757427
    N               -0.778974497591666     0.578265973808791     1.033979553757427
    H               -0.739974497591666    -0.434734026191209     1.068979553757427
    H               -1.660974497591666     0.816265973808791     0.589979553757427
    H               -0.046974497591666     0.903265973808791     0.410979553757427
    H               -1.541974497591666     0.844265973808791     3.005979553757427
    H               -0.789974497591666     2.281265973808791     2.317979553757427
    H                0.231025502408334     0.975479973808791     2.958394553757427
    C                1.293025502408334    -1.343734026191210    -1.716020446242573
    O                0.244025502408334    -0.399734026191210    -1.599020446242573
    H               -0.369974497591666    -0.534734026191209    -2.337020446242573
    H                0.929025502408334    -2.262734026191210    -2.172020446242573
    H                2.112915502408334    -0.909973926191209    -2.307311446242573
    H                1.694565502408334    -1.565424626191209    -0.716210446242573

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-008LYS-043THR-1-dimer.npy', np.array(charges))