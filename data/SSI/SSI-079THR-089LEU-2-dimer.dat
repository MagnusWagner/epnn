import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.012896945478538    -0.678594747542196    -2.238712089893328
    O                0.761103054521462    -1.005594747542196    -1.089712089893328
    H                1.287103054521462    -1.794594747542196    -1.307712089893328
    H                0.613103054521462    -0.785594747542196    -3.125712089893328
    H               -0.878796945478538    -1.353584747542196    -2.306642089893328
    H               -0.339096945478538     0.369145252457804    -2.162382089893328
    C                0.308103054521462     0.886405252457804     1.566287910106672
    C               -1.155896945478538     0.966405252457804     1.979287910106672
    H                0.953103054521462     1.111405252457804     2.416287910106671
    H                0.536103054521462    -0.120594747542196     1.227287910106672
    H                0.508103054521462     1.592405252457804     0.761287910106672
    H               -1.785896945478538     0.858405252457804     1.096287910106672
    H               -1.336586945478538     1.944705252457804     2.448637910106672
    H               -1.388296945478538     0.156635252457804     2.686577910106672

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-079THR-089LEU-2-dimer.npy', np.array(charges))