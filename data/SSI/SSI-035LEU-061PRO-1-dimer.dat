import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.830108021369947     1.967675063374000     0.926774061534811
    C                1.291108021369947     2.820675063374000     2.089774061534811
    H                0.448108021369947     1.019675063374000     1.300774061534811
    H                0.036108021369947     2.486675063374000     0.390774061534811
    H                1.665108021369947     1.783675063374000     0.253774061534811
    H                0.407108021369947     2.976675063374000     2.704774061534811
    H                2.091648021369947     2.353515063374000     2.682134061534811
    H                1.664478021369947     3.792175063374000     1.733634061534811
    C               -0.302891978630053    -1.113324936626000    -1.034225938465189
    C               -1.352891978630053    -1.445324936626000     0.005774061534811
    C               -0.480891978630053    -2.289324936626000    -2.066225938465189
    H                0.695108021369947    -1.122324936626000    -0.583225938465189
    H               -0.485891978630053    -0.141324936626000    -1.487225938465189
    H               -1.097891978630053    -1.046324936626000     0.982774061534811
    H               -2.336891978630053    -1.076324936626000    -0.291225938465189
    H                0.401108021369947    -2.411324936626000    -2.694225938465189
    H               -1.367891978630053    -2.214324936626001    -2.698225938465189
    H               -1.349145978630053    -2.545234936626000     0.019264061534811
    H               -0.586981978630053    -3.145264936626001    -1.383495938465189

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035LEU-061PRO-1-dimer.npy', np.array(charges))