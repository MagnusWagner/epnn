import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.202162754758777    -1.953219704857502    -0.080096742983320
    C                1.468162754758777    -3.471219704857502     0.147903257016680
    H                0.165162754758777    -1.798219704857502    -0.375096742983320
    H                1.388162754758777    -1.400219704857502     0.837903257016680
    H                1.857162754758777    -1.572219704857502    -0.863096742983320
    H                0.816162754758777    -3.842219704857502     0.939903257016680
    H                2.508162754758777    -3.609219704857502     0.454903257016680
    H                1.293672754758777    -4.082999704857501    -0.749466742983320
    C               -0.471837245241223     1.363780295142498    -0.217096742983320
    C               -1.909837245241223     1.639780295142498    -0.708096742983320
    C               -0.316837245241223     2.496780295142498     0.839903257016680
    H                0.260162754758777     1.478780295142498    -1.019096742983320
    H               -0.361837245241223     0.377780295142498     0.229903257016680
    H               -2.109837245241223     1.199780295142498    -1.683096742983320
    H               -2.653837245241223     1.277780295142498     0.006903257016680
    H                0.735162754758777     2.723780295142499     1.006903257016680
    H               -0.786837245241223     2.249780295142498     1.797903257016680
    H               -1.945817245241223     2.738010295142498    -0.759076742983320
    H               -0.830037245241223     3.355660295142498     0.382783257016680

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-159ILE-203PRO-1-dimer.npy', np.array(charges))