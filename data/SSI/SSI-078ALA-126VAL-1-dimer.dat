import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.341536728133910    -0.906281811405402     1.306859795799320
    C                1.700536728133910    -2.014281811405402     0.328859795799320
    H                1.828536728133910     0.027718188594598     1.023859795799321
    H                0.268536728133910    -0.762281811405402     1.304859795799320
    H                1.661536728133910    -1.185281811405402     2.310859795799320
    H                1.162536728133910    -2.916281811405402     0.621859795799320
    H                2.778786728133910    -2.224501811405402     0.385369795799320
    H                1.385196728133910    -1.757841811405402    -0.693300204200680
    C               -0.786463271866090     1.487718188594598    -0.615140204200679
    C               -2.255463271866090     1.433718188594598    -1.021140204200680
    H               -0.360463271866090     0.487718188594598    -0.641140204200680
    H               -0.237463271866090     2.121718188594598    -1.313140204200680
    H               -0.665463271866090     1.913718188594598     0.379859795799320
    H               -2.682463271866090     2.429718188594598    -0.913140204200680
    H               -2.808513271866090     0.727558188594598    -0.384380204200680
    H               -2.332513271866090     1.127648188594598    -2.074890204200680

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-078ALA-126VAL-1-dimer.npy', np.array(charges))