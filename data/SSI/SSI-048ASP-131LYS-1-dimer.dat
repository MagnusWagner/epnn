import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.401194682140239     2.455109939208151     1.190668232948646
    C                0.374194682140239     1.277109939208150     0.219668232948646
    O               -0.672805317859761     0.598109939208151     0.110668232948646
    O                1.413194682140239     1.015109939208151    -0.428331767051354
    H                0.825194682140239     3.335109939208150     0.702668232948646
    H                1.054194682140239     2.185109939208151     2.022668232948647
    H               -0.592945317859761     2.699347939208151     1.593195232948646
    C               -0.967805317859761    -2.930890060791850     0.068668232948646
    N               -0.461805317859761    -2.046890060791850    -1.014331767051354
    H                0.519194682140239    -2.205890060791849    -1.206331767051354
    H               -0.976805317859761    -2.183890060791849    -1.875331767051354
    H               -0.565805317859761    -1.063890060791849    -0.740331767051354
    H               -0.807805317859761    -3.982890060791850    -0.194331767051354
    H               -2.042805317859761    -2.775890060791850     0.205668232948646
    H               -0.455385317859761    -2.711177060791850     1.016903232948646

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-048ASP-131LYS-1-dimer.npy', np.array(charges))