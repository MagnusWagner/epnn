import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -2.592857355108032    -1.303821521421748     1.442500628427932
    O               -1.631857355108032    -0.270821521421748     1.336500628427932
    H               -1.120857355108032    -0.448821521421748     2.142500628427932
    H               -2.737857355108032    -1.557821521421748     2.491500628427932
    H               -3.551077355108032    -0.977381521421748     1.012100628427932
    H               -2.182877355108032    -2.171601521421748     0.905030628427932
    C               -0.057857355108032     1.444178478578252    -1.976499371572068
    C                1.130142644891968     0.071178478578252    -0.267499371572068
    N                0.028142644891968     0.637178478578252    -0.754499371572068
    N                2.276142644891967     0.171178478578252    -0.905499371572068
    N                1.076142644891968    -0.594821521421748     0.852500628427932
    H               -0.816857355108032     0.526178478578252    -0.203499371572068
    H                2.382142644891968     0.729178478578252    -1.723499371572068
    H                3.124142644891968    -0.247821521421748    -0.493499371572068
    H                0.208142644891968    -1.026821521421748     1.081500628427932
    H                1.940142644891968    -1.004821521421748     1.230500628427932
    H                0.886142644891968     1.441178478578252    -2.521499371572068
    H               -0.262857355108032     2.485178478578252    -1.710499371572068
    H               -0.833227355108032     1.065858478578252    -2.658909371572068

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-062THR-099ARG-1-dimer.npy', np.array(charges))