import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C               -2.141074736952507     0.513965378092621    -1.208254798261899
    C               -1.809074736952506     0.899965378092621    -2.645254798261900
    H               -3.093074736952507     0.956965378092621    -0.911254798261899
    H               -2.215074736952507    -0.572034621907379    -1.130254798261899
    H               -1.360074736952507     0.853965378092621    -0.530254798261899
    H               -0.844074736952507     0.474965378092621    -2.925254798261899
    H               -1.776602736952507     1.994635378092621    -2.748443798261899
    H               -2.592209736952507     0.491805378092621    -3.301081798261900
    C                0.804925263047493    -0.499034621907379     0.940745201738101
    C                1.641925263047493     0.763965378092621     0.873745201738101
    N                1.383925263047493    -1.515034621907379     1.852745201738101
    H               -0.192074736952507    -0.227034621907379     1.306745201738101
    H                0.685925263047493    -0.914034621907379    -0.067254798261899
    H                1.905925263047493     1.078965378092622     1.884745201738101
    H                1.022925263047493     1.552965378092621     0.441745201738101
    H                1.443925263047493    -1.168034621907379     2.804745201738100
    H                0.812925263047493    -2.353034621907379     1.876745201738101
    H                2.313925263047493    -1.800034621907378     1.564745201738101
    H                2.558415263047493     0.690445378092621     0.269889801738101

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-035THR-112LYS-1-dimer.npy', np.array(charges))