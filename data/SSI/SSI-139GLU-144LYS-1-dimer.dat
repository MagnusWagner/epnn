import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.132485032223163     2.264669409405716     1.121728541353982
    C                0.010485032223163     1.579669409405716     0.343728541353982
    O               -1.171514967776837     1.717669409405716     0.729728541353982
    O                0.309485032223163     0.908669409405716    -0.669271458646018
    H                1.155485032223163     3.327669409405716     0.871728541353982
    H                2.092485032223164     1.830669409405716     0.829728541353982
    H                1.010575032223163     2.155749409405716     2.209508541353982
    C               -0.260514967776837    -2.210330590594284     0.067728541353982
    C                1.119485032223163    -2.608330590594284    -0.442271458646018
    N               -1.027514967776837    -1.495330590594284    -0.988271458646018
    H               -0.793514967776837    -3.116330590594284     0.378728541353982
    H               -0.147514967776837    -1.562330590594284     0.943728541353982
    H                1.648485032223163    -1.711330590594284    -0.776271458646018
    H                1.004485032223163    -3.282330590594283    -1.295271458646018
    H               -0.943514967776837    -1.915330590594284    -1.911271458646018
    H               -2.000514967776837    -1.369330590594284    -0.730271458646018
    H               -0.622514967776837    -0.553330590594284    -1.072271458646018
    H                1.716995032223163    -3.107940590594284     0.334498541353982

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-139GLU-144LYS-1-dimer.npy', np.array(charges))