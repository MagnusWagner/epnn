import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.550010289720376     0.550150963832882    -0.644817756883636
    C                2.211010289720376     1.124150963832882     0.604182243116364
    C                0.831010289720376     1.662150963832882    -1.397817756883636
    H                2.302010289720376     0.097150963832882    -1.292817756883636
    H                0.830010289720376    -0.210849036167118    -0.348817756883636
    H                1.473010289720376     1.723150963832882     1.135182243116364
    H                3.021010289720376     1.793150963832882     0.304182243116364
    H                0.109010289720376     2.130150963832882    -0.723817756883636
    H                1.553010289720376     2.417150963832882    -1.702817756883636
    H                2.596400289720377     0.360570963832882     1.295863243116364
    H                0.292700289720376     1.276100963832882    -2.275992756883636
    C               -1.638989710279624    -1.187849036167118     0.676182243116364
    C               -2.849989710279624    -2.112849036167118     0.711182243116364
    H               -1.691989710279624    -0.452849036167118     1.477182243116364
    H               -0.734989710279624    -1.779849036167118     0.822182243116364
    H               -1.585989710279624    -0.680849036167118    -0.287817756883636
    H               -2.953989710279623    -2.497849036167118     1.727182243116364
    H               -2.643989710279623    -2.966849036167118     0.069182243116364
    H               -3.793229710279624    -1.634059036167118     0.409430243116364

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-021LYS-039ILE-1-dimer.npy', np.array(charges))