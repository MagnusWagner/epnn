import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C                4.096321572045476     1.046182144034660    -0.147446015894514
    C                0.750321572045476     1.201182144034660     1.267553984105485
    C                1.664321572045476     0.178182144034660    -0.452446015894514
    C                2.637321572045475     0.895182144034660     0.174553984105486
    N                0.497321572045476     0.391182144034660     0.244553984105486
    N                2.039321572045476     1.530182144034660     1.244553984105486
    H               -0.431678427954524     0.052182144034660    -0.004446015894514
    H                0.016321572045476     1.560182144034660     1.982553984105485
    H                1.790321572045476    -0.456817855965340    -1.318446015894515
    H                4.654321572045475     0.271182144034660     0.377553984105486
    H                4.431321572045475     2.014182144034660     0.228553984105486
    H                4.321411572045476     0.984139144034660    -1.222386015894515
    C               -1.869678427954524    -2.172817855965340    -1.138446015894515
    C               -2.765678427954525    -1.152817855965340    -0.488446015894514
    O               -2.434678427954524     0.045182144034660    -0.578446015894514
    O               -3.793678427954525    -1.543817855965340     0.105553984105486
    H               -2.116678427954524    -3.170817855965340    -0.772446015894514
    H               -0.834678427954524    -1.944817855965340    -0.878446015894514
    H               -1.961805427954524    -2.162657855965340    -2.234536015894515

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017HIE-033ASP-1-dimer.npy', np.array(charges))