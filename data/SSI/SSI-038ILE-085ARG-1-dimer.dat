import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.149540799973027    -1.853311229297798     0.509237095703386
    C                1.421540799973027    -3.336311229297798     0.752237095703386
    H                2.067540799973028    -1.273311229297798     0.582237095703386
    H                0.761540799973027    -1.730311229297798    -0.501762904296614
    H                0.410540799973027    -1.475311229297798     1.216237095703386
    H                2.273540799973028    -3.659311229297798     0.151237095703386
    H                0.536540799973027    -3.865311229297798     0.406237095703386
    H                1.600160799973027    -3.551821229297798     1.816027095703386
    C               -0.770459200026973     1.196688770702202    -0.286762904296614
    C                0.225540799973027     2.350688770702202    -0.111762904296614
    C               -2.074459200026972     1.716688770702202    -0.869762904296614
    H               -0.336459200026973     0.460688770702202    -0.964762904296614
    H               -0.974459200026973     0.716688770702202     0.671237095703386
    H               -0.262459200026973     3.175688770702202     0.410237095703386
    H                0.508540799973027     2.702688770702202    -1.105762904296614
    H               -2.568459200026973     2.343688770702202    -0.123762904296614
    H               -1.841459200026972     2.320688770702202    -1.749762904296614
    H                1.132710799973027     2.062175770702202     0.439427095703386
    H               -2.732768200026972     0.886678770702202    -1.165922904296614

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-038ILE-085ARG-1-dimer.npy', np.array(charges))