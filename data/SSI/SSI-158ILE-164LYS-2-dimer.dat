import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.512053560068689    -0.968860737697314     0.726484121961875
    C               -2.935053560068690    -1.351860737697314     1.122484121961875
    H               -1.534053560068689    -0.282860737697314    -0.113515878038125
    H               -1.042053560068689    -0.454860737697314     1.564484121961875
    H               -0.909053560068689    -1.841860737697314     0.491484121961875
    H               -3.510053560068689    -0.450860737697314     1.335484121961875
    H               -2.882053560068689    -1.918860737697314     2.053484121961874
    H               -3.449823560068689    -1.970020737697314     0.372224121961875
    C                1.177946439931311     1.189139262302686    -0.892515878038125
    C                1.267946439931311    -0.288860737697314    -1.305515878038125
    C                2.073946439931311     1.500139262302686     0.278484121961875
    H                1.486946439931311     1.811139262302686    -1.732515878038125
    H                0.146946439931311     1.435139262302686    -0.634515878038125
    H                1.073946439931311    -0.916860737697314    -0.436515878038125
    H                2.280946439931311    -0.497860737697314    -1.637515878038125
    H                1.707946439931311     0.976139262302686     1.164484121961875
    H                3.082946439931311     1.148139262302686     0.053484121961875
    H                0.573266439931311    -0.568020737697314    -2.111426878038126
    H                2.108136439931311     2.582579262302686     0.471254121961875

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-158ILE-164LYS-2-dimer.npy', np.array(charges))