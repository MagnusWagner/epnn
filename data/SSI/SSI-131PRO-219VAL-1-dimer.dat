import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.746765803566996     1.136553564681597     0.806430376112455
    C               -0.044234196433004     0.317553564681597     1.831430376112456
    C                2.181765803566996     0.744553564681597     1.152430376112455
    H                0.582765803566996     2.204553564681597     0.930430376112455
    H                0.499765803566996     0.836553564681597    -0.210569623887545
    H               -0.014234196433004     0.773553564681597     2.827430376112455
    H               -1.081234196433004     0.179553564681597     1.532430376112455
    H                2.376765803566996     1.289553564681597     2.076430376112455
    H                2.974765803566997     0.956553564681597     0.433430376112455
    H                0.504235803566996    -0.635946435318403     1.823960376112455
    H                2.117255803566997    -0.333446435318403     1.361720376112455
    C               -1.568234196433004    -1.109446435318403    -1.124569623887545
    C               -1.267234196433004    -0.999446435318403    -2.626569623887545
    H               -2.597234196433003    -1.436446435318403    -0.979569623887545
    H               -0.892234196433004    -1.827446435318403    -0.665569623887545
    H               -1.435234196433004    -0.140446435318403    -0.650569623887545
    H               -0.235234196433004    -0.673446435318403    -2.771569623887545
    H               -1.949194196433004    -0.274046435318403    -3.094239623887545
    H               -1.432354196433004    -1.987946435318403    -3.079919623887545

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-131PRO-219VAL-1-dimer.npy', np.array(charges))