import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.225169251187463    -1.891694065304485    -0.980931901106253
    C               -0.057169251187463    -2.560694065304485    -2.339931901106253
    H               -1.109169251187463    -1.254694065304485    -0.995931901106253
    H               -0.342169251187463    -2.654694065304485    -0.211931901106253
    H                0.653830748812537    -1.290694065304485    -0.755931901106253
    H                0.828830748812537    -3.195694065304485    -2.316931901106253
    H                0.065940748812537    -1.808394065304485    -3.132991901106253
    H               -0.942856251187463    -3.177594065304485    -2.551961901106253
    C               -0.250169251187463     1.565305934695515     0.699068098893747
    C                1.138830748812537     2.223305934695515     0.715068098893747
    C               -0.623169251187463     0.768305934695515     1.963068098893747
    H               -0.978169251187463     2.361305934695515     0.550068098893747
    H               -0.269169251187463     0.895305934695515    -0.160931901106253
    H                1.211830748812537     2.866305934695515     1.598068098893747
    H               -0.104169251187463    -0.189694065304485     1.942068098893747
    H               -0.310169251187463     1.333305934695515     2.841068098893747
    H                1.291307748812537     2.831705934695515    -0.188581901106253
    H                1.913340748812537     1.442305934695515     0.702078098893747
    H               -1.708624251187463     0.596605934695515     2.011008098893746

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-234LEU-260LYS-1-dimer.npy', np.array(charges))