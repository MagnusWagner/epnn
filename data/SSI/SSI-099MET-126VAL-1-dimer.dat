import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.098712973623573     0.994371970959904     0.650538002296163
    C               -2.509712973623574     0.459371970959904     0.868538002296163
    C               -0.080712973623574     0.558371970959904     1.715538002296163
    H               -0.798712973623574     0.722371970959904    -0.348461997703837
    H               -1.150712973623573     2.082371970959905     0.692538002296163
    H               -2.789712973623574     0.632371970959904     1.907538002296163
    H                0.038287026376426    -0.522628029040096     1.678538002296163
    H                0.878287026376426     1.013371970959904     1.465538002296163
    H               -2.532955973623574    -0.619568029040096     0.655599002296163
    H               -3.210876973623574     1.016431970959904     0.229747002296163
    H               -0.346753973623574     0.854711970959904     2.740918002296163
    C                1.653287026376426    -0.558628029040096    -0.976461997703837
    C                1.945287026376427    -1.401628029040095    -2.211461997703836
    H                2.546287026376426     0.023371970959904    -0.745461997703837
    H                0.880287026376426     0.151371970959904    -1.218461997703837
    H                1.461287026376427    -1.144628029040095    -0.086461997703837
    H                2.737287026376427    -2.107628029040095    -1.961461997703837
    H                1.064007026376427    -1.969852029040095    -2.543818997703836
    H                2.302337026376426    -0.749558029040096    -3.022216997703837

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-099MET-126VAL-1-dimer.npy', np.array(charges))