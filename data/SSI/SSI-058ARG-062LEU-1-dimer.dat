import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.346609008798393     1.122181987664237    -0.384227811728563
    C               -1.487609008798394     1.862181987664237    -1.119227811728563
    C                0.901390991201607     2.050181987664237    -0.265227811728563
    H               -0.685609008798393     0.835181987664237     0.609772188271437
    H               -0.077609008798393     0.224181987664237    -0.936227811728563
    H               -1.075609008798393     2.421181987664237    -1.961227811728563
    H               -1.949609008798393     2.571181987664237    -0.429227811728563
    H                1.658390991201607     1.587181987664237     0.371772188271437
    H                1.332390991201607     2.176181987664237    -1.261227811728563
    H               -2.255859008798394     1.174192987664237    -1.501921811728563
    H                0.640360991201607     3.051271987664237     0.108513188271437
    C                0.647390991201607    -2.006818012335763     1.426772188271437
    C                0.259390991201607    -2.960818012335763     0.317772188271437
    H                0.989390991201607    -2.559818012335763     2.303772188271437
    H                1.454390991201607    -1.357818012335763     1.082772188271437
    H               -0.207609008798393    -1.388818012335763     1.692772188271437
    H               -0.084609008798393    -2.383818012335763    -0.538227811728563
    H               -0.556099008798393    -3.578334012335763     0.722302188271437
    H                1.127800991201606    -3.568636012335763     0.023804188271437

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-058ARG-062LEU-1-dimer.npy', np.array(charges))