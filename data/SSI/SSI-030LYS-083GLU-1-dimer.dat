import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.216725125406115    -0.523962746460333     2.830986638134302
    N                1.093725125406116     0.265037253539667     1.924986638134302
    H                0.946725125406116     1.260037253539667     2.040986638134302
    H                2.072725125406116     0.072037253539667     2.092986638134302
    H                0.898725125406115     0.039037253539667     0.944986638134302
    H               -0.831274874593885    -0.236962746460333     2.694986638134302
    H                0.486725125406116    -0.328962746460333     3.875986638134302
    H                0.323765125406116    -1.598742746460333     2.622684638134302
    C               -1.122274874593884    -0.448962746460333    -2.412013361865698
    C               -0.345274874593884     0.093037253539667    -1.208013361865698
    O               -0.677274874593884     1.161037253539667    -0.640013361865698
    O                0.653725125406115    -0.567962746460333    -0.836013361865698
    H               -1.657274874593884    -1.355962746460333    -2.134013361865698
    H               -0.389274874593884    -0.752962746460333    -3.163013361865699
    H               -1.780334874593885     0.284117253539667    -2.901449361865698

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-030LYS-083GLU-1-dimer.npy', np.array(charges))