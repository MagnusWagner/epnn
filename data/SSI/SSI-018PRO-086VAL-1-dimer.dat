import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.215932602631964    -0.283683823814673    -0.475615967649863
    C               -2.571932602631964    -1.007683823814673    -0.659615967649863
    C               -1.459932602631964     0.903316176185327     0.455384032350137
    H               -0.886932602631964     0.097316176185327    -1.441615967649863
    H               -0.460932602631964    -0.959683823814673    -0.072615967649863
    H               -2.690932602631964    -1.327683823814673    -1.694615967649863
    H               -2.640932602631964    -1.860683823814673     0.016384032350137
    H               -0.838932602631964     1.760316176185327     0.187384032350137
    H               -1.219932602631964     0.576316176185327     1.464384032350137
    H               -3.310853602631964    -0.244833823814673    -0.373175967649863
    H               -2.536599602631964     1.122406176185327     0.402604032350137
    C                2.361067397368036     0.626316176185327    -0.277615967649863
    C                2.817067397368036    -0.255683823814673     0.921384032350137
    H                3.225067397368036     1.040316176185327    -0.797615967649863
    H                1.797067397368036     0.013316176185327    -0.981615967649863
    H                1.723067397368036     1.435316176185327     0.076384032350137
    H                1.919067397368036    -0.706683823814673     1.341384032350137
    H                3.294229397368036     0.351356176185327     1.704844032350137
    H                3.457015397368036    -1.089683823814673     0.597484032350137

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-018PRO-086VAL-1-dimer.npy', np.array(charges))