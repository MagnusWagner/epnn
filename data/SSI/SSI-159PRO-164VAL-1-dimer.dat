import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.400399101266600     0.558263316713877    -1.197678183973244
    C                1.267399101266600     0.891263316713877    -2.383678183973244
    C               -0.132600898733400     1.888263316713877    -0.738678183973244
    H                1.018399101266600     0.142263316713877    -0.408678183973244
    H               -0.404600898733400    -0.127736683286123    -1.463678183973244
    H                2.086399101266600     0.176263316713877    -2.471678183973244
    H                0.657399101266600     0.909263316713877    -3.286678183973244
    H               -0.395600898733400     1.864263316713877     0.314321816026756
    H               -0.989600898733400     2.168263316713877    -1.338678183973244
    H                1.629869101266600     1.905133316713877    -2.158538183973244
    H                0.678659101266600     2.602553316713877    -0.942758183973244
    C               -0.833600898733400    -1.290736683286123     1.457321816026756
    C               -0.684600898733400    -2.023736683286123     2.785321816026756
    H               -0.746600898733400    -0.213736683286123     1.605321816026756
    H               -0.042600898733400    -1.609736683286123     0.777321816026756
    H               -1.798600898733400    -1.525736683286123     1.005321816026756
    H                0.219399101266600    -1.639736683286123     3.248321816026756
    H               -1.549740898733400    -1.826496683286123     3.435422816026756
    H               -0.565140898733400    -3.102449683286123     2.606135816026756

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-159PRO-164VAL-1-dimer.npy', np.array(charges))