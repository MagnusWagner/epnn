import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.650796995299942    -1.112528345271999    -1.329415891800752
    C               -2.008796995299942    -0.427528345271999    -1.534415891800752
    C               -0.525796995299942    -1.792528345271999     0.044584108199248
    H               -0.471796995299942    -1.847528345271999    -2.111415891800752
    H                0.138203004700058    -0.364528345271999    -1.390415891800752
    H               -2.194796995299941     0.254471654728001    -0.701415891800752
    H               -1.068796995299942    -2.736528345271999     0.062584108199248
    H                0.523203004700058    -2.009528345271999     0.243584108199248
    H               -0.898796995299942    -1.133528345272000     0.829584108199248
    H               -2.025156995299942     0.138563564728001    -2.477425891800752
    H               -2.783716995299942    -1.208218345271999    -1.539465891800752
    C                1.188203004700058     1.553471654728001     0.710584108199248
    C                1.950203004700058     1.710471654728001     2.017584108199248
    H                1.733203004700058     0.897471654728001     0.030584108199248
    H                0.209203004700058     1.119471654728001     0.915584108199248
    H                1.028203004700058     2.510471654728001     0.223584108199248
    H                1.369203004700058     2.316471654728000     2.711584108199249
    H                2.931273004700058     2.175490654728001     1.840774108199248
    H                2.070013004700058     0.704752854728001     2.446744108199249

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-039ILE-054LEU-1-dimer.npy', np.array(charges))