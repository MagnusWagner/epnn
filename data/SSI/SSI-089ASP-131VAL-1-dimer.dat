import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    -1 1
    --
    -1 1
    C               -0.509229493732668     0.944184897517736     1.115236489773064
    C               -0.211229493732668     2.067184897517737     0.120236489773064
    C                0.723770506267332     0.105184897517736     1.439236489773064
    O                1.438770506267332    -0.296815102482264     0.489236489773064
    O                0.961770506267332    -0.155815102482264     2.645236489773064
    H               -0.914229493732668     1.374184897517736     2.033236489773064
    H               -1.273229493732668     0.296184897517736     0.685236489773064
    H                0.166770506267332     1.620184897517736    -0.799763510226936
    H                0.550202506267332     2.749374897517736     0.526236489773064
    H               -1.132440493732668     2.624384897517736    -0.105380510226936
    C               -1.199229493732668    -0.973815102482264    -2.120763510226936
    C               -1.188229493732668    -1.617815102482263    -3.509763510226936
    H               -0.371229493732668    -1.352815102482264    -1.521763510226936
    H               -1.081229493732668     0.104184897517736    -2.218763510226936
    H               -2.134229493732668    -1.188815102482264    -1.606763510226936
    H               -0.204229493732668    -1.457815102482264    -3.951763510226936
    H               -1.381263493732668    -2.698095102482264    -3.433979510226936
    H               -1.935584493732668    -1.137575102482263    -4.158479510226936

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-089ASP-131VAL-1-dimer.npy', np.array(charges))