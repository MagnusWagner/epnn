import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.828160652587520    -0.941037660151765     0.389934770796071
    C               -1.050160652587520    -1.625037660151765     1.738934770796071
    C               -0.906160652587520    -1.908037660151765    -0.770065229203929
    H               -1.594160652587520    -0.177037660151765     0.243934770796071
    H                0.137839347412480    -0.458037660151765     0.376934770796071
    H               -1.894160652587520    -2.311037660151765     1.672934770796071
    H               -0.690160652587520    -1.381037660151765    -1.699065229203929
    H               -0.153160652587520    -2.685037660151765    -0.631065229203929
    H               -1.240050652587520    -0.873787660151765     2.519684770796071
    H               -0.147240652587520    -2.177987660151765     2.037234770796071
    H               -1.901210652587520    -2.371377660151765    -0.842095229203929
    C                1.660839347412480     1.509962339848235    -0.568065229203929
    C                1.061839347412480     2.897962339848235    -0.771065229203929
    H                2.745839347412480     1.518962339848235    -0.671065229203929
    H                1.462839347412480     1.198962339848235     0.456934770796071
    H                1.226839347412480     0.800962339848235    -1.276065229203929
    H                1.544839347412480     3.568962339848235    -0.061065229203929
    H                1.256799347412480     3.250612339848235    -1.794605229203929
    H               -0.018970652587520     2.884972339848235    -0.566885229203929

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-169MET-184VAL-1-dimer.npy', np.array(charges))