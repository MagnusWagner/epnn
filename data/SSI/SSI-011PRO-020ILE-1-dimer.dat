import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.319410257208566     0.974495490638062     0.916906105738501
    C               -0.112410257208566    -0.162504509361938     1.889906105738500
    C               -0.551410257208566     2.194495490638062     1.786906105738501
    H               -1.193410257208566     0.785495490638062     0.295906105738501
    H                0.563589742791434     1.133495490638062     0.300906105738501
    H               -0.641410257208566    -1.055504509361938     1.553906105738501
    H                0.954589742791434    -0.363504509361938     1.998906105738500
    H               -1.138410257208566     2.961495490638062     1.284906105738501
    H                0.412589742791434     2.609495490638062     2.087906105738500
    H               -0.522908257208566     0.215094490638062     2.838015105738501
    H               -1.062097257208566     1.795839490638062     2.675879105738501
    C                0.251589742791434    -1.295504509361939    -1.557093894261499
    C                0.712589742791434    -1.640504509361938    -2.987093894261499
    H                0.630589742791434    -0.317504509361938    -1.284093894261499
    H               -0.833410257208566    -1.303504509361938    -1.509093894261499
    H                0.621589742791434    -2.035504509361938    -0.846093894261499
    H                0.446589742791434    -2.681504509361938    -3.180093894261499
    H                1.805344742791434    -1.538819509361938    -3.061566894261500
    H                0.183603742791434    -1.044232339361938    -3.745139894261499

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-011PRO-020ILE-1-dimer.npy', np.array(charges))