import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.719562829303206    -0.964445682598865     1.908211658992550
    C               -0.265562829303206    -2.109445682598865     1.011211658992550
    H                0.122437170696794    -0.612445682598865     2.497211658992549
    H               -1.074562829303207    -0.132445682598865     1.310211658992550
    H               -1.527562829303206    -1.288445682598865     2.563211658992550
    H                0.664437170696794    -1.824445682598865     0.522211658992550
    H               -0.113622829303206    -3.013148682598865     1.619681658992550
    H               -1.011092829303206    -2.312051682598864     0.228185658992550
    C                0.489437170696794     1.220554317401136    -0.764788341007450
    C                0.493437170696793     1.846554317401135    -2.155788341007450
    H                1.221437170696794     0.415554317401135    -0.709788341007450
    H                0.741437170696794     1.979554317401135    -0.026788341007450
    H               -0.494562829303206     0.836554317401135    -0.528788341007450
    H               -0.278562829303206     2.612554317401135    -2.208788341007450
    H                0.319347170696794     1.074253317401135    -2.919492341007450
    H                1.457677170696794     2.345273317401135    -2.333335341007450

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025LEU-055VAL-1-dimer.npy', np.array(charges))