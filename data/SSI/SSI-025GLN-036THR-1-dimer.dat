import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.403706834950585    -1.437372031457042    -0.610883588657839
    C               -0.898293165049415    -0.716372031457042    -0.927883588657839
    O               -1.160293165049415     0.388627968542958    -0.460883588657839
    N               -1.738293165049415    -1.355372031457042    -1.715883588657839
    H                0.239706834950585    -2.025372031457042     0.291116411342161
    H                1.178706834950585    -0.710372031457042    -0.376883588657839
    H               -2.608293165049415    -0.927372031457042    -1.976883588657839
    H               -1.535293165049415    -2.294372031457042    -2.024883588657839
    H                0.732029834950585    -2.128052031457042    -1.401553588657839
    C                1.624706834950585     1.301627968542958     2.444116411342161
    O                1.495706834950585     1.596627968542958     1.053116411342161
    H                2.388706834950585     1.878627968542958     0.773116411342161
    H                1.955706834950585     2.196627968542957     2.974116411342160
    H                0.648129834950585     0.974417968542958     2.830422411342160
    H                2.373643834950585     0.506427968542958     2.573517411342161

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-025GLN-036THR-1-dimer.npy', np.array(charges))