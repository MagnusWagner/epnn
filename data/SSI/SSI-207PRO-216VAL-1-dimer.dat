import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -0.576149905810458    -0.885741331751984     0.635003028651839
    C               -1.721149905810458    -1.541741331751984     1.451003028651839
    C                0.534850094189542    -1.930741331751984     0.708003028651839
    H               -0.257149905810458     0.038258668248016     1.109003028651839
    H               -0.836149905810458    -0.694741331751984    -0.409996971348161
    H               -1.515149905810458    -1.501741331751984     2.524003028651839
    H               -2.678149905810458    -1.066741331751984     1.250003028651839
    H                1.168850094189542    -1.913741331751984    -0.182996971348161
    H               -1.675069905810458    -2.574241331751984     1.074433028651839
    H               -0.023899905810458    -2.878241331751984     0.716993028651839
    H                1.160400094189542    -1.803041331751984     1.603763028651839
    C                1.289850094189542     1.617258668248016    -1.058996971348161
    C                0.429850094189542     2.695258668248016    -1.689996971348161
    H                1.286850094189542     0.731258668248016    -1.688996971348161
    H                2.304850094189542     1.981258668248016    -0.951996971348161
    H                0.894850094189542     1.368258668248016    -0.077996971348161
    H                0.820850094189542     2.958258668248015    -2.671996971348161
    H               -0.598539905810458     2.318458668248016    -1.792046971348161
    H                0.456470094189542     3.580958668248016    -1.038156971348161

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-207PRO-216VAL-1-dimer.npy', np.array(charges))