import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                1.054777173199882     0.044737036069286    -1.228469235474376
    C                1.112777173199882    -1.052262963930714    -2.275469235474377
    H                1.404777173199882    -0.314262963930714    -0.259469235474377
    H                1.645777173199882     0.894737036069286    -1.540469235474376
    H                0.027777173199882     0.386737036069286    -1.187469235474377
    H                0.699777173199882    -0.654262963930714    -3.189469235474376
    H                0.527927173199882    -1.917807963930714    -1.930819235474376
    H                2.170757173199882    -1.307387963930714    -2.435459235474376
    C               -1.251222826800118     0.509737036069286     2.314530764525624
    O               -0.741222826800118     0.436737036069286     1.037530764525624
    H               -1.497222826800118     0.356737036069286     0.435530764525624
    H               -0.484222826800118     0.241737036069286     3.041530764525624
    H               -1.584322826800118     1.547481036069286     2.463290764525623
    H               -2.057882826800118    -0.237953963930714     2.298510764525624

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-050VAL-054THR-1-dimer.npy', np.array(charges))