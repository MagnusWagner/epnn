import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C                0.046781921827107    -0.111582372470182     2.466309712922663
    C                0.673781921827107     1.164417627529818     1.938309712922663
    O                0.865781921827107     1.321417627529818     0.735309712922663
    N                0.999781921827107     2.084417627529818     2.830309712922663
    H                0.802781921827107    -0.667582372470182     3.022309712922663
    H               -0.278218078172893    -0.714582372470182     1.638309712922663
    H                1.436781921827107     2.931417627529818     2.496309712922663
    H                0.934781921827107     1.904417627529818     3.820309712922664
    H               -0.815568078172893     0.083327627529818     3.120799712922663
    C               -0.899218078172893    -2.084582372470182    -0.950690287077337
    C               -0.663218078172893    -1.119582372470182    -2.083690287077337
    O               -0.923218078172893    -1.435582372470182    -3.241690287077336
    N               -0.167218078172893     0.067417627529818    -1.768690287077337
    H                0.008781921827107     0.722417627529818    -2.514690287077336
    H                0.058781921827107     0.314417627529818    -0.811690287077337
    H               -0.404218078172893    -1.732582372470182    -0.062690287077337
    H               -0.410218078172893    -3.022582372470182    -1.218690287077337
    H               -1.966038078172893    -2.289632372470181    -0.777910287077337

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-017ASN-029ASN-2-dimer.npy', np.array(charges))