import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    0 1
    --
    0 1
    C               -1.043186015872134    -1.981988421831157    -0.316372265744419
    C               -1.641186015872134    -3.287988421831157    -0.872372265744419
    H               -0.209186015872134    -1.654988421831157    -0.941372265744419
    H               -1.801186015872134    -1.197988421831156    -0.299372265744419
    H               -0.703186015872134    -2.111988421831156     0.711627734255581
    H               -2.422186015872134    -3.620988421831157    -0.189372265744419
    H               -0.864416015872134    -4.066168421831157    -0.904914265744419
    H               -2.095156015872134    -3.145988421831157    -1.864214265744419
    C                0.561813984127866     1.421011578168844     0.032627734255581
    C                0.108813984127866     2.666011578168844     0.800627734255581
    C                2.044813984127866     1.267011578168844     0.351627734255581
    H                0.411813984127866     1.592011578168843    -1.034372265744419
    H               -0.001186015872134     0.544011578168843     0.349627734255581
    H               -0.779186015872134     3.123011578168843     0.364627734255581
    H               -0.042186015872134     2.423011578168843     1.852627734255581
    H                2.181813984127866     0.624011578168843     1.220627734255581
    H                0.994333984127866     3.310811578168843     0.700148834255581
    H                2.361763984127866     2.290313578168843     0.601416034255581
    H                2.598203984127867     0.890064578168844    -0.521109765744419

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-042ILE-052PRO-1-dimer.npy', np.array(charges))