import numpy as np
set {scf_type pk
basis cc-pvdz
d_convergence 10
gdma_switch   0
gdma_limit    0
gdma_origin   [ 0.0,  0.0,  0.0 ]
}
molecule test {
    units Angstrom
    1 1
    --
    1 1
    C                1.585000874688060     0.501530163179556     2.655431498602768
    O                2.115000874688060     0.619530163179556     1.343431498602768
    H                2.896000874688060     1.216530163179556     1.368431498602768
    H                0.652000874688060    -0.058469836820444     2.601431498602767
    H                1.366000874688060     1.489530163179556     3.062431498602768
    H                2.277582874688060    -0.040179836820444     3.316401498602767
    C               -2.470999125311940    -0.285469836820444     0.228431498602768
    C               -0.397999125311940    -0.245469836820444    -1.121568501397233
    N                0.900000874688060    -0.046469836820444    -1.185568501397232
    N               -1.028999125311940    -0.091469836820444     0.030431498602768
    N               -1.063999125311940    -0.591469836820444    -2.205568501397233
    H                1.415000874688060     0.211530163179556    -0.350568501397232
    H                1.383000874688060    -0.145469836820444    -2.067568501397233
    H               -0.491999125311940     0.256530163179556     0.811431498602767
    H               -2.063999125311940    -0.694469836820444    -2.176568501397233
    H               -0.580999125311940    -0.663469836820444    -3.086568501397232
    H               -3.028999125311940    -0.430469836820444    -0.697568501397232
    H               -2.860999125311940     0.626530163179556     0.685431498602767
    H               -2.664930125311940    -1.115669836820444     0.923531498602768

}
e, wfn = energy('scf', return_wfn=True)
gdma(wfn)
dmavals = variable('DMA DISTRIBUTED MULTIPOLES')
charges = np.array(dmavals)
print(charges)
np.save('SSI-136SER-144ARG-1-dimer.npy', np.array(charges))